// cs protocol
syntax = "proto3";

package zonepb.voyagepb.taskpb;
option go_package = "git.code.oa.com/red/zonsvr/pkg/proto/zonepb/voyagepb/taskpb";

service TaskService {
  // 上报剧情完成
  rpc FinishPlot(FinishPlotRequest) returns (FinishPlotReply);

  // 上报战斗完成
  rpc FinishBattle(FinishBattleRequest) returns (FinishBattleReply);

  // 上交道具
  rpc HandInItems(HandInItemsRequest) returns (HandInItemsReply);

  // 上报表演完成（读取进度条、采集、挖宝小游戏等）
  rpc FinishShow(FinishShowRequest) returns (FinishShowReply);

  // pvp战斗任务开战
  rpc StartPvpBattle(StartPvpBattleRequest) returns (StartPvpBattleReply);

  // 设置任务步骤
  rpc SetTaskStepImp(SetTaskStepImpRequest) returns (SetTaskStepImpReply);
}

service TaskSSService {
  // 开始任务
  rpc BeginTaskImp(BeginTaskImpRequest) returns (BeginTaskImpReply);

  // 移除任务
  rpc RemoveTaskImp(RemoveTaskImpRequest) returns (RemoveTaskImpReply);
}

message BeginTaskImpRequest {
  int64 task_id = 1;  // 任务ID
}

message BeginTaskImpReply {}

message RemoveTaskImpRequest {
  int64 task_id = 1;  // 任务ID
}

message RemoveTaskImpReply {}

message SetTaskStepImpRequest {
  int64 task_id = 1;  // 任务ID
  int64 step_id = 2;  // 步骤ID
}

message SetTaskStepImpReply {}

message StartPvpBattleRequest {
  int64 task_id   = 1;  // 任务ID
  int64 curr_step = 2;  // 当前步骤
}

message StartPvpBattleReply {}

message TaskStateChange {
  int64 task_id   = 1;  // 任务ID
  int64 curr_step = 2;  // 当前步骤
  bool finished   = 3;  // 任务完成
}

message TaskStateUpdateNtf {
  repeated TaskStateChange changes = 1;
}

message FinishPlotRequest {
  int64 task_id  = 1;  // 任务ID
  string plot_id = 2;  // 剧情ID
  enum PlotType {
    PLOT_TYPE_UNKNOWN = 0;
    QA                = 1;
    PLAY_PLOT         = 2;
  }
  int64 plot_type = 3;  // 剧情类型（问答、播放剧情）
  int64 event_id  = 4;  // 若为问答类，最后一个 event_id
  int64 choice    = 5;  // 若为问答类，选择的结果
  int64 step      = 6;  // 步骤
}

message FinishPlotReply {
  int64 task_id = 1;
  int64 step    = 2;
}

message FinishBattleRequest {
  int64 task_id  = 1;
  int64 level_id = 2;  // 关卡ID
  bool win       = 3;  // 是否胜利
  int64 step     = 4;  // 步骤
}

message FinishBattleReply {
  int64 task_id = 1;
  int64 step    = 2;
}

message HandInItemsRequest {
  int64 task_id = 1;
  int64 step    = 2;
}

message HandInItemsReply {
  int64 task_id = 1;
  int64 step    = 2;
}

message FinishShowRequest {
  int64 task_id = 1;
  enum ShowType {
    // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
    COLLECTING  = 0;  // 采集
    LITTLE_GAME = 1;  // 挖宝小游戏
    PROGRESSING = 2;  // 读取进度条
  }
  ShowType type = 2;  // 表现类型
  int64 step    = 3;  // 步骤
}

message FinishShowReply {
  int64 task_id = 1;
  int64 step    = 2;
}
