// cs protocol
syntax = "proto3";

package zonepb.pokedexpb;

option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/pokedexpb";


import "corepb/common.proto";

// PokedexService 为伙伴图鉴系统
service PokedexService {
  // 获取伙伴图鉴信息
  rpc PokedexInfo(PokedexInfoRequest) returns (PokedexInfoResponse);
  // 领取伙伴图鉴奖励
  rpc ReceivePokedexReward(ReceivePokedexRewardRequest) returns (ReceivePokedexRewardResponse);
}

message PokedexInfoRequest {}

message PokedexInfoResponse {
  map<int64, PokedexInfo> pokedexes = 1;  // 伙伴图鉴信息列表
  int64 fc                          = 2;  // 伙伴图鉴战力
  corepb.FightAttr attrs            = 3;  // 伙伴图鉴属性加成
}

message PokedexInfo {
  int64 id                              = 1;  // 伙伴图鉴 ID
  bool open                             = 2;  // 是否开启
  map<int64, PokedexRewardInfo> rewards = 3;  // 图鉴奖励
  map<int64, int64> buddies             = 4;  // buddy id -> buddy star，图鉴伙伴列表及其星级，若未解锁则星级为0

  string name        = 5;   // 图鉴名称
  string chapter     = 6;   // 篇章
  string desc        = 7;   // 图鉴描述
  string name_image  = 8;   // 图鉴名称图片
  string cover_image = 9;   // 图鉴封面图片
  int64 border_image = 10;  // 图鉴封面边框
}

message PokedexRewardInfo {
  int64 id                   = 1;  // 图鉴奖励ID
  bool available             = 2;  // 是否可领奖
  bool received              = 3;  // 是否已经领取
  int64 count_need           = 4;  // 需要数量
  int64 count_actual         = 5;  // 实际数量
  repeated corepb.Item items = 6;  // 奖励列表
  corepb.FightAttr addition  = 7;  // 奖励的属性加成

  string name = 8;  // 奖励名称
  string desc = 9;  // 奖励描述
}

message ReceivePokedexRewardRequest {
  int64 pokedex_id = 1;  // 伙伴图鉴ID列表
  int64 reward_id  = 2;  // 奖励 ID
}

message ReceivePokedexRewardResponse {
  PokedexInfo pokedex        = 1;  // 更新后的伙伴图鉴信息
  repeated corepb.Item items = 2;  // 获得的奖励道具列表
  int64 fc                   = 3;  // 伙伴图鉴战力
  corepb.FightAttr attrs     = 4;  // 伙伴图鉴属性加成
}