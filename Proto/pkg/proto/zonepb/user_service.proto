// cs protocol
syntax = "proto3";

package zonepb;
option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb";


import "corepb/common.proto";
import "corepb/loadout_comm.proto";
import "corepb/fight_common.proto";
import "pkg/proto/zonepb/basic_info.proto";
import "pkg/proto/zonepb/item_bag.proto";
import "pkg/proto/zonepb/system_open.proto";
import "pkg/proto/zonepb/petpb/pet.proto";
import "pkg/proto/zonepb/buddypb/buddy.proto";
import "pkg/proto/zonepb/dialpb/dial.proto";
import "pkg/proto/zonepb/willpb/will.proto";
import "pkg/proto/zonepb/factorypb/factory.proto";
import "pkg/proto/zonepb/beginnerpb/beginner.proto";
import "pkg/proto/zonepb/shipyardpb/shipyard.proto";
import "pkg/proto/zonepb/voyagepb/cultivationpb/cultivation.proto";
import "pkg/proto/zonepb/treasurepb/treasure.proto";
import "pkg/proto/zonepb/cruisepb/cruise.proto";
import "pkg/proto/zonepb/fruitpowerpb/fruitpower.proto";
import "pkg/proto/zonepb/equipmentpb/equipment.proto";
import "pkg/proto/zonepb/adventurepb/loginpb/adventure.proto";
import "pkg/proto/zonepb/fishpb/fish.proto";
import "pkg/proto/zonepb/supercaptainpb/supercaptain.proto";

service LobbyService {
  // 登陆
  rpc UserLogin(UserLoginRequest) returns (UserLoginResponse);
  // 心跳
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);
  // 掉线/登出
  rpc UserOffline(UserOfflineRequest) returns (UserOfflineResponse);
  // 改名
  rpc ChangeName(ChangeNameRequest) returns (ChangeNameResponse);
  // 设置性别
  rpc ChangeGender(ChangeGenderRequest) returns (ChangeGenderResponse);
}

service UserService {
  // 查询角色战斗属性数值
  rpc QueryFightAttr(QueryFightAttrRequest) returns (corepb.FightAttr);
  // 玩家摘要信息(聚合)(废弃， 前后端等合入代码以后删除)
  rpc QueryUserSummaryInfo(QueryUserSummaryInfoRequest) returns (QueryUserSummaryInfoResponse);
  // 获取养成系统[伙伴,宠物...]信息(聚合)
  rpc QueryCultivationInfo(QueryCultivationInfoRequest) returns (QueryCultivationInfoResponse);
  // 大而全的排行榜查询协议 查询从指定排名开始的N个排行
  rpc QueryPlayerRankN(QueryPlayerRankNRequest) returns (QueryPlayerRankNResponse);
  // 查询养成信息简要信息
  rpc QueryCultivationSummaryInfo(QueryCultivationSummaryInfoRequest) returns (QueryCultivationSummaryInfoResponse);
  // 玩家摘要信息(聚合)
  rpc QueryUserSummaryInfoV2(QueryUserSummaryInfoV2Request) returns (QueryUserSummaryInfoV2Response);
  // 检查账号状态(目前只需判断Gopenid在所有小区注册的账号都退出了同盟)，用于注销
  rpc CheckAccount(CheckAccountRequest) returns (CheckAccountResponse);
  // Deprecated 注销步骤上报 1-拉起H5  2-开始注销（H5回调）【该协议已废弃不用】
  rpc UnregisterReport(UnregisterReportRequest) returns (UnregisterReportResponse);
  // 查询玩家状态
  rpc QueryPlayerStatus(QueryPlayerStatusRequest) returns (QueryPlayerStatusResponse);
  // 批量查询玩家简要信息
  rpc BatchQueryPlayerBriefInfo(BatchQueryPlayerBriefInfoRequest) returns (BatchQueryPlayerBriefInfoResponse);
}

message UserLoginRequest {
  corepb.PayInfo pay_info     = 1;
  corepb.OssInfo oss_info     = 2;
  int32 zone_id               = 3;  // 登陆小区ID
  string name                 = 4;  // 注册昵称
  int32 game_center           = 5;  // 是否游戏中心启动
  bool is_editor              = 6;  // 是否pc登录
  bool is_reconnect           = 7;  // 是否重新连接，重连用于弱网等，不返回主界面
  string game_center_ext_data = 8;  // 扩展数据 如果是游戏中心启动, game_center为true，ext_data为原始渠道openid（wx/qq openid）
}

message UserCultivation {
  zonepb.buddypb.AllBuddyInfo buddys            = 1;   // 伙伴
  zonepb.petpb.AllPetInfo pets                  = 2;   // 宠物
  zonepb.dialpb.DialSystemInfo dials            = 3;   // 空岛贝
  zonepb.willpb.WillSystemInfo wills            = 4;   // 意志系统
  zonepb.factorypb.FactorySystemInfo factory    = 5;   // 工厂
  zonepb.shipyardpb.AllWarshipInfo warship      = 6;   // 战船
  zonepb.voyagepb.cultivationpb.PropInfo props  = 7;   // 岛屿探索道具
  zonepb.treasurepb.TreasureInfos treasures     = 8;   // 藏品信息
  zonepb.cruisepb.LoginInfo cruise              = 9;   // 巡航奖励信息
  zonepb.fruitpowerpb.FruitPowerInfo fruitpower = 10;  // 果实能力
  zonepb.equipmentpb.EquipmentInfo equipment    = 11;  // 装备
  zonepb.fishpb.FishInfo fish                   = 12;  // 钓鱼
  // zonepb.advertisementpb.LoginInfo advertisement = 13;  // 拍脸广告图
  int64 current_raid_group_id = 14;  // 当前团本ID(0: 不在团本中)
  int64 act_menu_dressing_id  = 15;  // 活动菜单装扮 ID
}

message UserBasicInfo {
  BasicInfo basic_info                                = 1;
  OpenSystems open_systems                            = 2;
  corepb.Loadout loadout                              = 3;   // 主线冒险阵容
  int64 privileges                                    = 4;   // 额外特殊权限
  zonepb.beginnerpb.Info beginner_info                = 5;   // 新手引导信息
  GuildSummaryInfo guild_info                         = 6;   // 公会信息在登录时下发下去
  corepb.Loadout lobby_loadout                        = 7;   // 主界面阵容
  zonepb.adventurepb.loginpb.LoginInfo adventure_info = 8;   // 主线冒险信息
  bool is_open_watermark                              = 9;   // 是否开启水印
  corepb.Loadout profile_loadout                      = 10;  // 个人信息界面阵容
  ReruitSummaryInfo recruit_info                      = 11;  // 招募主界面信息
  CaptainManualInfo captain_manual_info               = 12;  // 船长手册相关状态信息
}

message CaptainManualInfo {
  int64 captainmanual_state = 1;  // 船长手册状态 (0: 未全部完成, 1: 全部完成待领奖, 2: 已全部领取完成，需要隐藏)
}

message UserLoginResponse {
  UserBasicInfo user_info             = 1;  // 基础信息
  ItemBag item_bag                    = 2;  // 背包信息
  ServerInfo server_info              = 3;  // 服务器相关信息(后续会添加服务器时间，服务器等级等数据)
  UserCultivation cultivation         = 4;  // 养成系统
  corepb.FightAttr fight_attr         = 5;  // 属性系统
  WorldLevelInfo world_level_info     = 6;  // 世界等级信息
  SuperCaptainInfo super_captain_info = 7;  // 超级船长信息
}

message SuperCaptainInfo {
  int64 expire_time                           = 1;  // 超级船长特权过期时间unix秒时间戳，与服务器时间做对比，小于则过期了。0是从来没购买过。
  string product_id                           = 2;  // 超级船长直购商品id
  int64 left_days                             = 3;  // 超级船长剩余天数
  zonepb.supercaptainpb.UserSettings settings = 4;  // 用户设置
}

message WorldLevelInfo {
  int64 unlock_player_level                     = 1;   // 解锁世界等级的玩家等级
  int64 current_world_level                     = 2;   // 当前世界等级
  int64 exp_addition                            = 3;   // 世界等级经验加成(万分比)
  int64 belly_addition                          = 4;   // 世界等级贝里加成(万分比)
  repeated int64 open_attr_addition_entry_ids   = 5;   // 开启世界等级属性加成界面id
  repeated int64 open_exp_addition_system_ids   = 6;   // 开启世界等级经验加成系统
  repeated int64 open_belly_addition_system_ids = 7;   // 开启世界等级贝里加成系统
  int64 hp_ratio                                = 8;   // 血量放大系数(万分比)
  int64 attack_ratio                            = 9;   // 攻击放大系数(万分比)
  int64 defense_ratio                           = 10;  // 防御放大系数(万分比)
}

message HeartbeatRequest {}

message UserOfflineRequest {
  int32 from_gm                  = 1;  // 由GM命令触发 0:否 非0:是
  int64 from_tool                = 2;  // 由工具触发 0:否 非0:是
  string reason_for_tool_offline = 3;  // 工具下线原因
}

message UserOfflineResponse {}

message HeartbeatResponse {
  uint32 timestamp = 1;  // 服务端时间戳
}

message ChangeNameRequest {
  string name = 1;  // 昵称
}

message ChangeNameResponse {}

message ChangeGenderRequest {
  corepb.Gender gender = 1;  // 性别
}

message ChangeGenderResponse {}

message QueryUserSummaryInfoRequest {
  uint64 gid                  = 1;  // 要查询信息的玩家gid，可以查询他人。不填该值或者填0，默认为查自己
  corepb.RobotInfo robot_info = 2;  // 要查询信息的机器人相关信息，如果查询对象为机器人请填入，否则不用填
}

message GuildSummaryInfo {
  int64 guild_id              = 1;  // 海盗团ID
  string guild_name           = 2;  // 海盗团名字
  int64 fc                    = 3;  // 海盗团战力
  corepb.FightAttr fight_attr = 4;  // 海盗团战力
}

message ReruitSummaryInfo {
  string resource_id = 1;  // 主界面招募栏显示的资源ID
  bool first_recruit = 2;  // 是否为首次招募 True: 首次招募；False：非首次招募
}

message ServerInfo {
  string zone_name       = 1;  // 服务器名字
  int64 server_open_time = 2;  // 服务器开服时间
}

message MirrorSummaryInfo {
  int64 quest_id                    = 1;  // 爬墙进度
  int64 last_passed_chapter_id      = 2;  // 最新通关章节ID
  int64 level_unlock_top_chapter_id = 3;  // 等级可解锁的最高章节ID
}

message VoyageExploreSummaryInfo {
  map<int64, int64> map_explore_degrees = 1;  // 地图探索进度 map<地图ID, 探索进度>
  int64 last_unlock_map_id              = 2;  // 最新解锁地图ID
}

message SysOpenSummaryInfo {
  repeated int64 open_systems = 1;
}

message QueryUserSummaryInfoResponse {}

message QueryCultivationInfoRequest {
  repeated int64 systems = 1;  // 所需养成系统ID，置空则返回所有系统信息
}

message QueryCultivationInfoResponse {
  zonepb.buddypb.AllBuddyInfo buddys         = 1;  // 伙伴
  zonepb.petpb.AllPetInfo pets               = 2;  // 宠物
  zonepb.dialpb.DialSystemInfo dials         = 3;  // 空岛贝
  zonepb.willpb.WillSystemInfo wills         = 4;  // 意志系统
  zonepb.factorypb.FactorySystemInfo factory = 5;  // 工厂
}

message RankID {
  string rank_type = 1;  // 排行榜类型，定义在Rank配置里
  string instance  = 2;  // 实例，由业务定义，如不需要可不填
  int64 zone_id    = 3;  // 小区id
}

message RankData {
  int64 rank       = 1;  // 排行 0-未进排行榜  其他为具体的排名
  int64 w1         = 2;  // 用于排行的分数1
  int64 w2         = 3;  // 用于排行的分数2
  int64 w3         = 4;  // 用于排行的分数3
  int64 like_count = 5;  // 点赞数
  bytes payload    = 6;  // 存储额外数据
}

// 赏金大赛用于排行榜展示的loadout
message BountyGameLoadout {
  message BuddyInfo {
    int64 buddy_id = 1;
    int64 stars    = 2;
  }
  message DialInfo {
    int64 dial_id = 1;
    int64 level   = 2;
  }

  repeated BuddyInfo buddies = 1;  // 伙伴
  DialInfo dial              = 2;  // 空岛贝
  BuddyInfo support_buddy    = 3;  // 援护
}

// 赏金大赛信息
message BountyGameInfo {
  int64 season_id = 1;  // 赛季id,用于区分该数据是否还有效（有可能玩家流失很久，已经是上个赛季的数据了）
  int64 score     = 2;  // 积分
  // corepb.Loadout loadout     = 3; (废弃不用) 阵容，这里复用Loadout结构体吧，实际上只会存出战伙伴信息
  int64 fc                  = 4;  // 赏金大赛的战力，和系统战力不同
  BountyGameLoadout loadout = 5;  // 阵容信息
}

message RankPlayerInfo {
  RankData rank_data             = 1;  // 用于排行的分数信息
  BasicInfo basic_info           = 2;  // 基础信息
  corepb.FightAttr fight_attr    = 3;  // 战斗属性
  BountyGameInfo bountygame_info = 4;  // 赏金大赛信息
  GuildInfo guild_info           = 5;  // 工会信息
  BuddiesInfo buddies_info       = 6;  // 伙伴信息
  FashionInfo fashion_info       = 7;  // 时髦信息
}

message GuildInfo {
  int64 guild_id    = 1;  // 工会id
  string guild_name = 2;  // 工会名称
}

message BuddiesInfo {
  int64 buddies_count = 1;  // 伙伴数量
}

message FashionInfo {
  int64 fashion_level = 1;  // 时髦等级
}

message QueryPlayerRankNRequest {
  RankID rank_id   = 1;  // 排行榜ID
  int64 rank_begin = 2;  // 指定开始的排名 从1开始。
  int64 count      = 3;  // 指定的查询个数
}

message QueryPlayerRankNResponse {
  repeated RankPlayerInfo rank_list = 1;  // 排行信息
  RankPlayerInfo my_rank_info       = 2;  // 查询者自己的排名信息 不在榜上排名为0
  int64 total_rank_count            = 3;  // 当前榜单总数
  int64 like_count                  = 4;  // 还可以点赞的次数
  int64 like_gid                    = 5;  // 被点赞的玩家gid
}

message QueryFightAttrRequest {}

message QueryCultivationSummaryInfoRequest {}
message QueryCultivationSummaryInfoResponse {
  int64 unlocked_warship_count       = 1;                      // 战船-已解锁数量
  int64 unlocked_dail_count          = 2;                      // 空岛贝-已解锁的数量
  int64 accumulative_treasure_score  = 3 [deprecated = true];  // 藏品-累计藏品值
  int64 equipment_score              = 4;                      // 装备-评分
  int64 fruitpower_fc                = 5 [deprecated = true];  // 果实能力-实力
  int64 factory_star_sum             = 6 [deprecated = true];  // 工厂-总星级
  int64 collected_treasure_count     = 7;                      // 藏品-收集数量
  int64 unlocked_will_count          = 8 [deprecated = true];  // 意志-已解锁数量
  int64 willcrystal_fc               = 9;                      // 意志-实力
  int64 unlocked_support_skill_count = 10;                     // 援护技能-已解锁数量
  int64 factory_facility_level_sum   = 11;                     // 工厂-设施等级总和
  int64 act_menu_dressing_id         = 12;                     // 活动菜单装扮 ID
  int64 battlepass_season_id         = 13;                     // BP宝典赛季ID(0表示没有)
  int64 milestone_popup_fc           = 14;                     // 如果不为0，说明需要弹实力达到一定数值的弹窗
}

message QueryUserSummaryInfoV2Request {
  uint64 gid                  = 1;  // 要查询信息的玩家gid，可以查询他人。不填该值或者填0，默认为查自己
  corepb.RobotInfo robot_info = 2;  // 要查询信息的机器人相关信息，如果查询对象为机器人请填入，否则不用填
}

// 玩家属性
message PlayerAttrInfo {
  corepb.FightAttr total_attr           = 1;  // 总的战斗属性
  corepb.FightAttr role_level_attr      = 2;  // 角色（等级）带来的属性加成
  corepb.FightAttr role_appearance_attr = 3;  // 角色（外观）带来的属性加成
  corepb.FightAttr buddy_upgrade_attr   = 4;  // 伙伴（升级）带来的属性加成（即将废弃，被buddy_attr取代）
  corepb.FightAttr buddy_pokedex_attr   = 5;  // 伙伴（图鉴）带来的属性加成（实际上包括了伙伴图鉴和情报档案的加成）
  corepb.FightAttr shipyard_attr        = 6;  // 船坞带来的属性加成
  corepb.FightAttr dial_attr            = 7;  // 空岛被带来的属性加成
  corepb.FightAttr equip_attr           = 8;  // 装备（包含合金）带来的属性加成
  corepb.FightAttr treasure_attr        = 9;  // 藏品带来的属性加成
  // corepb.FightAttr fruitpower_attr      = 10;  // 果实带来的属性加成
  corepb.FightAttr factory_attr          = 11;  // 工厂带来的属性加成
  corepb.FightAttr guild_attr            = 12;  // 同盟带来的属性加成
  corepb.FightAttr crystal_attr          = 13;  // 意志水晶带来的属性加成
  corepb.FightAttr buddy_bestlineup_attr = 14;  // 伙伴（最强伙伴）带来的属性加成（即将废弃，被buddy_attr取代）
  corepb.FightAttr show_attr             = 15;  // 展示用的战斗属性
  corepb.FightAttr kitchen_attr          = 16;  // 厨房的加成属性 也包含着fish系统的加成属性
  corepb.FightAttr buddy_attr            = 17;  // 伙伴属性，代替buddy_upgrade_attr和buddy_bestlineup_attr,数值为：（工厂+空岛贝+角色）*伙伴万分比*强者联盟万分比+伙伴配置数值+强者联盟数值（2023-11-02）
  corepb.FightAttr treasure_cert_attr    = 18;  // 藏品证书带来的属性加成
}

// 战力信息
message FightingCapacityInfo {
  int64 fc = 1;  // 战力
  // int64 rank = 2;  // 总排行，废弃
}

// 竞技场段位赛信息
message PvpLadderSummaryInfo {
  int64 score                       = 1;  // 分数
  int64 rank                        = 2;  // 总排行
  repeated BuddyState fight_buddies = 3;  // 段位赛出战伙伴
  int64 season_id                   = 4;  // 赛季id
  int64 fight_cnt                   = 5;  // 赛季对局数
}

// 伙伴信息
message BuddyState {
  int64 id   = 1;  // id
  int64 star = 2;  // 星级
  int64 buddy_mastery_tier = 3;  // 伙伴熟练度级别
}
message BuddySummaryInfo {
  int64 fc                    = 1;  // 战力
  corepb.FightAttr attr       = 2;  // 属性加成，包含升级和图鉴
  repeated BuddyState buddies = 3;  // 伙伴列表
  int64 total_num             = 4;  // 总个数
  bool is_hidden              = 5;  // 是否隐藏
}

// 空岛贝信息
message DialState {
  int64 id    = 1;  // id
  int64 level = 2;  // 等级
}
message DialSummaryInfo {
  int64 fc                 = 1;
  corepb.FightAttr attr    = 2;  // 属性加成，包含升级和图鉴
  repeated DialState dials = 3;  // 空岛贝列表
  int64 total_num          = 4;  // 总个数
  bool is_hidden           = 5;  // 是否隐藏
}

// 装备信息
message EquipmentSummaryInfo {
  int64 fc                                       = 1;  // 战力
  corepb.FightAttr attr                          = 2;  // 属性加成，包含基础和额外
  repeated zonepb.equipmentpb.Position positions = 3;  // 各部分详情
  repeated zonepb.equipmentpb.Equipment items    = 4;  // 已穿戴的装备
  int64 score                                    = 5;  // 装备评分
  int64 level                                    = 6;  // 装评等级
  bool is_hidden                                 = 7;  // 是否隐藏

  corepb.FightAttr curated_equip_attr = 8;  // 臻藏装备属性加成(已经包含在 attr 中)
  int64 total_curated_equip_levels    = 9;  // 臻藏装备总等级
}

// 藏品信息
message TreasureState {
  int64 id       = 1;  // id
  int64 star     = 2;  // 星级
  bool is_placed = 3;  // 是否已放置
}
message TreasureSummaryInfo {
  int64 fc                         = 1;  // 战力
  corepb.FightAttr attr            = 2;  // 属性加成
  repeated TreasureState treasures = 3;  // 已获得的藏品
  int64 total_num                  = 4;  // 总藏品数
  bool is_hidden                   = 5;  // 是否隐藏
}

// 藏品证书信息
message TreasureCertSummaryInfo {
  int64 fc              = 1;
  corepb.FightAttr attr = 2;  // 属性加成
  int64 total_level     = 3;  // 总等级
}

// 船坞信息
message WarshipState {
  int64 id    = 1;  // 战船id
  int64 level = 2;  // 战船等级
  int64 star  = 3;  // 战船星级
}
message ShipyardSummaryInfo {
  int64 fc                       = 1;  // 战力
  corepb.FightAttr attr          = 2;  // 属性加成
  repeated WarshipState warships = 3;  // 战船
  int64 total_num                = 4;  // 总战船数
  bool is_hidden                 = 5;  // 是否隐藏
}

message CrystalSummaryInfo {
  int64 fc                       = 1;  // 战力
  int64 crystal_active_total     = 2;  // 已激活水晶数量
  int64 crystal_total            = 3;  // 水晶总数量
  repeated CrystalState crystals = 4;  // 赛季个人信息
  corepb.FightAttr attr          = 5;  // 属性加成
  int64 actived_season_level     = 6;  // 已激活的赛季的当前星级之和
  int64 actived_season_max_level = 7;  // 已激活的赛季的星级上限之和
  repeated SeasonState seasons   = 8;  // 各赛季星级信息
  bool is_hidden                 = 9;  // 是否隐藏
}

message SeasonState {
  int64 season_id = 1;  // 赛季id
  int64 level     = 2;  // 赛季星级
  int64 max_level = 3;  // 赛季星级上限
}

message CrystalState {
  int64 crystal_id = 1;  // 水晶id
  int64 level      = 2;  // 当前等级
  int64 season_id  = 3;  // 所属赛季id
}

message FactorySummaryInfo {
  int64 max_total_facility_level     = 1;  // 设施等级总和上限
  int64 current_total_facility_level = 2;  // 当前设施等级总和
  corepb.FightAttr attr              = 3;  // 属性加成
  repeated FacilityState facilities  = 4;  // 已有的设施信息
  int64 fc                           = 5;  // 战力
  bool is_hidden                     = 6;  // 是否隐藏
}

message FacilityState {
  int64 id    = 1;
  int64 level = 2;
  int64 star  = 3;  // 当前星级
}

message CuisineState {
  int64 id              = 1;  // 料理的ID  品质、名字等可以读表
  int64 eated_count     = 2;  // 已食用的个数
  int64 eated_limit     = 3;  // 可食用的上限
  corepb.FightAttr attr = 4;  // 产生的属性加成
}

message KitchenSummaryInfo {
  repeated CuisineState cuisines    = 1;  // 属性料理
  int64 max_attr_cuisine_num        = 2;  // 最大的属性料理个数
  int64 fc                          = 3;  // 战力
  corepb.FightAttr attr             = 4;  // 总属性加成
  FishSummaryInfo fish_summary_info = 5;  // fish系统摘要信息
  bool is_hidden                    = 6;  // 是否隐藏
}

// 情报档案信息
message IntelArchiveSummaryInfo {
  int64 fc                        = 1;  // 战力
  corepb.FightAttr attr           = 2;  // 总属性加成
  int64 intel_archive_level       = 3;  // 情报档案等级
  repeated PokedexState pokedexes = 4;  // 伙伴图鉴信息,废弃
  int64 intel_archive_exp         = 5;  // 情报档案经验
}

// 伙伴图鉴信息
message BuddyPokedexSummaryInfo {
  int64 fc                        = 1;  // 战力
  corepb.FightAttr attr           = 2;  // 总属性加成
  repeated PokedexState pokedexes = 3;  // 伙伴图鉴信息
}

message PokedexState {
  int64 id                  = 1;  // 图鉴id
  map<int64, int64> buddies = 2;  // buddy id -> buddy star，图鉴伙伴列表及其星级，若未解锁则星级为0
  map<int64, bool> rewards  = 3;  // 奖励领取状态
}

// 装扮信息
message DressingSummaryInfo {
  int64 fc                             = 1;   // 战力
  corepb.FightAttr attr                = 2;   // 总属性加成
  AvatarBoxInfo avatar_box_info        = 3;   // 头像框信息
  TitleInfo title_info                 = 4;   // 称号信息
  StickerInfo sticker_info             = 5;   // 表情信息
  UltraKillPicInfo ultra_kill_pic_info = 6;   // 奥义击杀图信息
  AvatarInfo avatar_info               = 7;   // 头像信息
  bool is_hidden                       = 8;   // 是否隐藏
  BuddyTokenInfo buddy_token_info      = 9;   // 伙伴信物信息
  BuddyFashionInfo buddy_fashion_info  = 10;  // 时装信息
  BusinessCardInfo business_card_info  = 11;  // 名片信息
  ArenaSceneInfo arena_scene_info      = 12;  // 场景信息
}

message DressingState {
  int64 id           = 1;  // 头像框、称号、表情id、奥义击杀图id、伙伴信物id
  int64 expired_time = 2;  // 过期时间(Unix Second)
}

message AvatarBoxInfo {
  repeated DressingState avatar_boxs = 1;  // 头像框列表
  int64 total_num                    = 2;  // 总数
}

message AvatarInfo {
  repeated DressingState avatars = 1;  // 头像列表
  int64 total_num                = 2;  // 总数
}

message TitleInfo {
  repeated DressingState titles = 1;  // 称号列表
  int64 total_num               = 2;  // 总数
}

message StickerInfo {
  repeated DressingState stickers = 1;  // 表情列表
  int64 total_num                 = 2;  // 总数
}

message UltraKillPicInfo {
  repeated DressingState ultra_kill_pics = 1;  // 奥义击杀图列表
  int64 total_num                        = 2;  // 总数
}

message BuddyTokenInfo {
  repeated DressingState buddy_token_infos = 1;  // 伙伴信物列表
  int64 total_num                          = 2;  // 总数
}

// 时装信息 (FashionInfo 已被占了)
message BuddyFashionInfo {
  repeated DressingState fashions = 1;  // 时装列表
  int64 total_num                 = 2;  // 总数
}

message BusinessCardInfo {
  repeated DressingState business_cards = 1;  // 名片列表
  int64 total_num                       = 2;  // 总数
}

message ArenaSceneInfo {
  int64 arena_scene_id = 1;  // 场景id
  int64 expired_time   = 2;  // 过期时间(Unix Second)
}

message QueryUserSummaryInfoV2Response {
  ServerInfo server_info                             = 1;   // 服务器信息
  BasicInfo basic_info                               = 2;   // 基础信息
  PlayerAttrInfo player_attr_info                    = 3;   // 玩家属性
  FightingCapacityInfo fighting_capacity_info        = 4;   // 战力信息
  PvpLadderSummaryInfo pvp_ladder_summary_info       = 5;   // 竞技场信息
  SysOpenSummaryInfo system_open                     = 6;   // 系统开启信息
  GuildSummaryInfo guild_summary_info                = 7;   // 同盟摘要信息
  BuddySummaryInfo buddy_summary_info                = 8;   // 伙伴摘要信息
  DialSummaryInfo dial_summary_info                  = 9;   // 空岛贝摘要信息
  EquipmentSummaryInfo equipment_summary_info        = 10;  // 装备摘要信息
  TreasureSummaryInfo treasure_summary_info          = 11;  // 藏品摘要信息
  ShipyardSummaryInfo shipyard_summary_info          = 12;  // 船坞摘要信息
  MirrorSummaryInfo mirror_summary_info              = 13;  // 爬塔信息
  CrystalSummaryInfo crystal_summary_info            = 14;  // 意志水晶信息
  FactorySummaryInfo factory_summary_info            = 15;  // 工厂信息
  corepb.Loadout lobby_loadout                       = 16;  // 主界面阵容
  KitchenSummaryInfo kitchen_summary_info            = 17;  // 厨房信息（包含料理等）
  DressingSummaryInfo dressing_summary_info          = 18;  // 装扮信息
  IntelArchiveSummaryInfo intel_archive_summary_info = 19;  // 情报档案信息
  TreasureCertSummaryInfo treasure_cert_summary_info = 20;  // 藏品证书摘要信息
  BuddyPokedexSummaryInfo buddy_pokedex_summary_info = 21;  // 伙伴图鉴信息
}

message CheckAccountRequest {}
message CheckAccountResponse {}

// Deprecated
message UnregisterReportRequest {
  int64 step = 1;  // 步骤 1-拉起H5  2-点击注销后回调
}

// Deprecated
message UnregisterReportResponse {}

message QueryPlayerStatusRequest {
  repeated int64 gids = 1;  // 需要查状态的玩家gid列表
}

message PlayerStatusInfo {
  int64 gid            = 1;
  bool unregister_flag = 2;  // 注销标记 true-已注销 false-未注销
}

message QueryPlayerStatusResponse {
  repeated PlayerStatusInfo infos = 1;  // 玩家信息
}

message BatchQueryPlayerBriefInfoRequest {
  repeated uint64 gids = 1;  // 要查询的玩家gid列表
}

message UserBriefInfo {
  BasicInfo basic_info = 1;  // 基础信息
  GuildInfo guild_info = 2;  // 工会信息
}

message BatchQueryPlayerBriefInfoResponse {
  repeated UserBriefInfo infos = 1;  // 玩家信息
}

// 新增鱼详情PB结构
message FishSummaryInfo {
  int64 total_fish_num          = 1;  // 总共鱼的数量
  int64 own_fish_num            = 2;  // 拥有的鱼数量
  int64 unlock_fish_num         = 3;  // 解锁的鱼数量
  int64 lock_fish_num           = 4;  // 未解锁的鱼数量
  int64 fc                      = 5;  // 战力
  corepb.FightAttr attr         = 6;  // 属性加成
  repeated FishDetail fish_info = 7;  // 鱼详情信息
}

message FishDetail {
  int64 id                   = 1;  // 鱼id 此处的ID为鱼的item_id
  fishpb.FishBookState state = 2;  // 是否获得
}
