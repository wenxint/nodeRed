// cs protocol
syntax = "proto3";

package zonepb.intelarchivepb;

import "corepb/common.proto";
import "pkg/proto/zonepb/buddypb/buddy.proto";
import "pkg/proto/zonepb/specialpackpb/specialpack.proto";

option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/intelarchivepb";

// 情报档案系统服务
service IntelArchiveService {
  // 获取情报档案信息
  rpc ArchiveInfos(ArchiveInfosRequest) returns (ArchiveInfosReply);
  // 提升情报档案等级
  rpc UpgradeArchiveLevel(UpgradeArchiveLevelRequest) returns (UpgradeArchiveLevelReply);
  // 领取情报档案经验
  rpc ReceiveArchiveExp(ReceiveArchiveExpRequest) returns (ReceiveArchiveExpReply);
}

message QualityIntel {
  zonepb.buddypb.Quality quality = 1;  // 品质
  int64 intel_count              = 2;  // 品质对应情报总数量
  int64 available_exp            = 3;  // 能够领取的情报值
  int64 next_stage_exp           = 4;  // 下一阶段能够领取的情报值
  int64 stage_intel_count        = 5;  // 阶段性情报数量
  int64 new_intel_count          = 6;  // 新获得的情报总数量
}

message BuddyIntel {
  int64 buddy_id       = 1;  // 伙伴ID
  int64 star           = 2;  // 当前星级
  int64 available_exp  = 3;  // 能够领取的情报值
  int64 next_level_exp = 4;  // 下一等级能够领取的情报值
}

message ArchiveInfosRequest {}

message ArchiveInfosReply {
  int64 level                                             = 1;  // 情报档案等级
  int64 exp                                               = 2;  // 情报值
  repeated QualityIntel quality_intels                    = 3;  // 品质情报列表
  repeated BuddyIntel buddy_intels                        = 4;  // 伙伴情报列表
  corepb.FightAttr attr                                   = 5;  // 情报档案属性加成
  repeated zonepb.specialpackpb.SpecialPack special_packs = 6;  // 所拥有的限时礼包
}

message UpgradeArchiveLevelRequest {}

message UpgradeArchiveLevelReply {
  int64 level           = 1;  // 升级后的等级
  corepb.FightAttr attr = 2;  // 情报档案属性加成
}

message ReceiveArchiveExpRequest {
  repeated zonepb.buddypb.Quality qualities = 1;  // 品质列表，支持一键领取
  repeated int64 buddy_ids                  = 2;  // 伙伴ID列表，支持一键领取
}

message ReceiveArchiveExpReply {
  int64 exp                            = 1;  // 情报值
  repeated QualityIntel quality_intels = 2;  // 更新后的品质情报
  repeated BuddyIntel buddy_intels     = 3;  // 更新后的伙伴情报
}