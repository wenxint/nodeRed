// cs protocol
syntax = "proto3";

import "corepb/common.proto";

package zonepb.factorypb;
option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/factorypb";

service FactoryService {
  // 获取工厂系统信息
  rpc FactoryInfo(FactoryInfoRequest) returns (FactoryInfoReply);

  // 工厂升级
  // rpc UpgradeFactory(UpgradeFactoryRequest) returns (UpgradeFactoryReply);

  // 解锁工厂
  rpc UnlockFactory(UnlockFactoryRequest) returns (UnlockFactoryReply);

  // 升级设施
  rpc UpgradeFacility(UpgradeFacilityRequest) returns (UpgradeFacilityReply);

  // 设施升星
  rpc UpgradeFacilityStar(UpgradeFacilityStarRequest) returns (UpgradeFacilityStarReply);

  // 解锁设施
  rpc UnlockFacility(UnlockFacilityRequest) returns (UnlockFacilityReply);

  // 记录设施当前的可升星的hint已经显示过了
  rpc RecordUpgradeStarHintShown(RecordUpgradeStarHintShownRequest) returns (RecordUpgradeStarHintShownReply);

  // PrivilegeUpgradeFacility 工厂设施一键升级(升级/升星, 均匀升星).
  rpc PrivilegeUpgradeFacility(PrivilegeUpgradeFacilityRequest) returns (PrivilegeUpgradeFacilityReply);
}

// PrivilegeUpgradeFacilityRequest 工厂设施一键升级请求.
message PrivilegeUpgradeFacilityRequest {}

message PrivilegeUpgradeFacilityReply {
  int64 CostFatigue                    = 1;  // 消耗总的体力.
  repeated FacilityInfo facilities     = 2;  // 设施列表(设施ID、等级与星级)
  corepb.FightAttr previous_fight_attr = 3;  // 升级前: 设施的属性加成
  corepb.FightAttr latest_fight_attr   = 4;  // 升级后: 设施的属性加成
  repeated corepb.Item items           = 5;  // 除了材料紫外的道具，包括：经验、贝里、活动道具等.
}

message UpgradeFacilityRequest {
  int64 facility_id          = 1;  // 设施ID
  repeated corepb.Item items = 2;  // 选中的升级道具
}

message UpgradeFacilityReply {
  FacilityInfo info                     = 1;  // 升级后的设施信息
  repeated corepb.Item overflow_rewards = 2;  // 如果溢出了，返还的道具
}

message UpgradeFacilityStarRequest {
  int64 facility_id = 1;  // 设施ID
}

message UpgradeFacilityStarReply {
  FacilityInfo info = 1;  // 升星后的设施信息
}

message FacilityInfo {
  reserved 7;
  int64 id                          = 1;   // 设施ID
  int64 level                       = 3;   // 设施等级
  corepb.FightAttr fight_attr       = 4;   // 设施的属性加成
  int64 exp                         = 5;   // 设施当前经验
  int64 star                        = 6;   // 设施星级
  repeated Material star_materials  = 8;   // 升星需要的道具
  repeated Material level_materials = 9;   // 升级需要的道具
  bool unlocked                     = 10;  // 是否解锁
  bool can_unlock                   = 11;  // 是否可以解锁
  bool can_upgrade_star             = 12;  // “可升星”提示 （只检查升星道具是否解锁）（点击后提示消失）
  int64 current_star_max_level      = 13;  // 当前星级最大设施等级
}

message Material {
  int64 id           = 1;  // 道具ID
  int64 needed_count = 2;  // 道具数量
  int64 owned_count  = 3;  // 拥有的道具数量
  bool unlocked      = 4;  // 是否解锁
}

message FactoryInfo {
  reserved 3;
  int64 id                            = 1;  // 工厂ID
  bool unlocked                       = 2;  // 是否解锁
  map<int64, FacilityInfo> facilities = 4;  // 该工厂包含的设施信息
  ItemInfo item_info                  = 5;  // [deprecated]解锁/升级所需道具信息（用于前台红点计算）
  corepb.FightAttr fight_attr         = 6;  // 该工厂的属性加成
  repeated Material materials         = 7;  // 解锁/升级所需道具信息（用于前台红点计算）
}

message FactoryInfoRequest {}

message FactorySystemInfo {
  repeated FactoryInfo factories = 1;  // 工厂信息列表
  corepb.FightAttr fight_attr    = 2;  // 系统总的属性加成
  int64 fc                       = 3;  // 系统总的战力
}

message FactoryInfoReply {
  FactorySystemInfo info           = 1;  // 工厂系统信息
  bool is_research_system_unlocked = 2;  // 研究系统是否解锁
}

// message UpgradeFactoryRequest {
//   int64 id = 1;  // 要升级的工厂ID
// }

// message UpgradeFactoryReply {
//   FactoryInfo info            = 1;  // 升级后的工厂信息
//   corepb.FightAttr fight_attr = 2;  // 系统总的属性加成
//   int64 fc                    = 3;  // 系统总的战力
// }

message UnlockFactoryRequest {
  int64 id = 1;  // 工厂ID
}

message UnlockFactoryReply {
  FactoryInfo info            = 1;  // 新解锁的工厂信息
  corepb.FightAttr fight_attr = 2;  // 系统总的属性加成
  int64 fc                    = 3;  // 系统总的战力
}

message ItemInfo {
  repeated corepb.Item items_owned  = 1;  // 玩家持有的道具信息
  repeated corepb.Item items_needed = 2;  // 实际需要的道具信息
}

message UnlockFacilityRequest {
  int64 facility_id = 1;  // 设施ID
}

message UnlockFacilityReply {
  FacilityInfo info = 1;  // 设施信息
}

message RecordUpgradeStarHintShownRequest {
  int64 facility_id = 1;  // 设施ID
}

message RecordUpgradeStarHintShownReply {}