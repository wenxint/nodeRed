// cs protocol
syntax = "proto3";

package zonepb.curatedequippb;
option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/curatedequippb";

import "corepb/common.proto";

service Service {  // 臻藏装备服务

  rpc Info(InfoRequest) returns (InfoReply);                       // 获取臻藏装备信息
  rpc ClaimStar(ClaimStarRequest) returns (ClaimStarReply);        // 领取装备星星
  rpc UpgradeSuit(UpgradeSuitRequest) returns (UpgradeSuitReply);  // 升级套装
}

message InfoRequest {}

message InfoReply {
  repeated SuitInfo suits = 1;  // 所有套装信息
}

message SuitInfo {
  int64 id              = 1;  // 套装 id
  string name           = 2;  // 套装名称
  int64 level           = 3;  // 套装等级
  int64 max_level       = 4;  // 套装最大等级
  corepb.FightAttr attr = 5;  // 当前套装属性
  int64 star_item_id    = 6;  // 套装对应的星星道具 id
  bool could_upgrade    = 7;  // 是否可以升级

  repeated corepb.Item next_level_items     = 8;  // 升级下一级套装所需道具，如果已经满级，此处为空
  corepb.FightAttr next_level_attr_addition = 9;  // 升级下一级套装属性加成，如果已经满级，此处为空

  map<int64, EquipInfo> equips = 10;  // 套装内装备信息
}

message EquipInfo {
  int64 id            = 1;  // 装备 id
  int64 claimed_stars = 2;  // 已领取的星级
  int64 total_stars   = 3;  // 总星级
}

message ClaimStarRequest {
  repeated int64 equip_ids = 1;  // 装备 id 列表，支持批量领取
}

message ClaimStarReply {
  repeated EquipInfo equips  = 1;  // 更新后的装备信息
  repeated corepb.Item items = 2;  // 获得的星星道具
}

message UpgradeSuitRequest {
  int64 suit_id = 1;  // 套装 id
  int64 levels  = 2;  // 升多少级，如果条件不足以升这么多级，则不会升级，而是返回错误
}

message UpgradeSuitReply {
  SuitInfo suit = 1;  // 更新后的套装信息
}