// cs protocol
syntax = "proto3";

import "pkg/proto/zonepb/alloypb/alloy.proto";
import "corepb/common.proto";
import "pkg/proto/zonepb/specialpackpb/specialpack.proto";

package zonepb.equipmentpb;
option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/equipmentpb";

message Position {
  reserved 2, 4, 5, 6;
  int64 position_id              = 1;  // 位置id
  int64 unique_id                = 3;  // 装备的物品唯一ID
  repeated EnhanceDetail details = 7;  // 强化详情
  AlloyInfo alloy_info           = 8;  // 镶嵌详情
}

message EnhanceDetail {
  int64 level             = 1;  // 穿戴限制等级
  int64 max_enhance_level = 2;  // 最大强化等级
}

message Attr {
  corepb.AttributeId attr_id = 1;
  int64 num                  = 2;
}

message Attribute {
  repeated Attr base   = 1;  // 基础属性
  ExtraAttribute extra = 2;  // 额外属性
  int64 coef           = 3;  // 基础属性系数，创建装备时固定
}

message ExtraAttribute {
  int64 extra_attr_percent       = 1;  // 额外属性百分比
  repeated Attr extra_attr_const = 2;  // 额外属性固定值
}

message Score {
  int64 base       = 1;  // 基础分数
  ExtraScore extra = 2;  // 额外分数
  int64 final      = 3;  // 最终分数
}

message ExtraScore {
  int64 extra_score_percent = 1;  // 额外分数百分比
  int64 extra_score_const   = 2;  // 额外分数固定值
}

message ScoreChangeNtf {
  int64 old_score = 1;
  int64 new_score = 2;
}

message Equipment {
  reserved 6, 7, 8, 10, 15, 16, 17, 18, 21;
  int64 equipment_id       = 1;   // 物品属性id
  int64 unique_id          = 2;   // 物品唯一id，每个物品各不相同
  int64 position_id        = 3;   // 位置id，为0则未穿戴
  int64 limit              = 4;   // 穿戴等级限制
  int64 quality            = 5;   // 物品品质
  Attribute attribute      = 9;   // 物品属性
  bool is_locked           = 11;  // 是否上锁
  bool is_new              = 12;  // 是否为新获得
  Score score              = 13;  // 装备分数
  int64 suit_id            = 14;  // 套装ID
  AdvanceInfo advance_info = 19;  // 进阶详情
  EnhanceInfo enhance_info = 20;  // 强化详情
}

message AdvanceInfo {
  int64 level                    = 1;  // 进阶等级
  int64 level_process            = 2;  // 进阶等级进度
  ExtraAttribute extra_attr      = 3;  // 进阶提供的额外属性
  ExtraScore extra_score         = 4;  // 进阶提供的额外分数
  repeated corepb.Item need_item = 5;  // 进阶下一级需要的材料
}

message EnhanceInfo {
  int64 level                            = 1;  // 强化等级
  int64 failed_count                     = 2;  // 当前强化失败次数
  ExtraAttribute extra_attr              = 3;  // 强化提供的额外属性
  ExtraScore extra_score                 = 4;  //  强化提供的额外分数
  repeated corepb.Item need_item         = 5;  // 强化下一级需要的材料
  repeated corepb.Item need_protect_item = 6;  // 强化下一级到100%成功率需要的材料
}

message AlloyInfo {
  repeated SingleAlloyInfo alloy_infos = 1;  // 镶嵌详情
  ExtraAttribute extra_attr            = 2;  // 镶嵌提供的总额外属性
  ExtraScore extra_score               = 3;  // 镶嵌提供的总额外分数
  int64 level                          = 4;  // 镶嵌大星级
  repeated corepb.Item need_item       = 5;  // 镶嵌下一级需要的材料
  int64 current_failed_count           = 6;  // 当前失败次数
  int64 current_odd                    = 7;  // 当前补偿概率（万分比）
  int64 need_belly                     = 8;  // 需要的贝里数
}

message SingleAlloyInfo {
  int64 attr_id   = 1;  // 合金属性ID
  int64 level     = 2;  // 合金属性等级
  int64 attr_num  = 3;  // 镶嵌提供的属性
  int64 score     = 4;  // 镶嵌提供的分数
  int64 max_level = 5;  // 当前能级镶嵌最大等级
}

service EquipmentService {
  rpc BagInfo(BagInfoRequest) returns (BagInfoReply);                                      // 获取背包信息
  rpc PlayerInfo(PlayerInfoRequest) returns (PlayerInfoReply);                             // 获取用户信息
  rpc BatchQueryEquipment(BatchQueryEquipmentRequest) returns (BatchQueryEquipmentReply);  // 获取数个背包数据

  rpc Lock(LockRequest) returns (LockReply);                                                     // 装备上锁
  rpc BatchSetTag(BatchSetTagRequest) returns (BatchSetTagReply);                                // 设置装备新获得标签
  rpc BuyEnhanceProtectItem(BuyEnhanceProtectItemRequest) returns (BuyEnhanceProtectItemReply);  // 购买强化保护道具

  rpc Equip(EquipRequest) returns (EquipReply);                                                                             // 穿戴或替换装备
  rpc Detach(DetachRequest) returns (DetachReply);                                                                          // 卸下装备
  rpc BatchResolve(BatchResolveRequest) returns (BatchResolveReply);                                                        // 批量分解装备
  rpc Advance(AdvanceRequest) returns (AdvanceReply);                                                                       // 进阶装备
  rpc Enhance(EnhanceRequest) returns (EnhanceReply);                                                                       // 装备强化
  rpc SwitchEnhanceProtect(SwitchEnhanceProtectRequest) returns (SwitchEnhanceProtectReply);                                // 装备强化保护开关
  rpc BatchInlay(BatchInlayRequest) returns (BatchInlayReply);                                                              // 批量镶嵌
  rpc TransEnhanceMaterial(TransEnhanceMaterialRequest) returns (TransEnhanceMaterialReply);                                // 转换强化材料
  rpc GetAlreadyTransEnhanceMaterial(GetAlreadyTransEnhanceMaterialRequest) returns (GetAlreadyTransEnhanceMaterialReply);  // 获取历史转换强化材料

  rpc AttachRedpoint(AttachRedpointRequest) returns (AttachRedpointReply);  // 消除红点
}

message BagInfoRequest {}

message BagInfoReply {
  repeated Equipment items = 1;  // 所有拥有的装备
}

message PlayerInfoRequest {
  bool need_bag       = 1;  // 是否需要背包信息
  bool need_alloy_bag = 2;  // 是否需要合金信息
}

message StepCost {
  int64 step_start = 1;  // 阶梯起始，闭
  int64 step_end   = 2;  // 阶梯结束，闭
  corepb.Item cost = 3;  // 道具数量
}

message PlayerInfoReply {
  reserved 6;
  int64 equipment_score                                   = 1;   // 装分
  repeated Position positions                             = 2;   // 各部分详情
  repeated Equipment items                                = 3;   // 所有拥有的装备，已经排好序
  repeated zonepb.alloypb.Alloy alloys                    = 4;   // 所有拥有的合金
  int64 max_alloy_level                                   = 5;   // 已解锁的最大等级合金
  int64 level                                             = 7;   // 装备等级
  repeated int64 new_levels                               = 8;   // 新解锁的装备等级
  int64 resolve_item_level                                = 9;   // 可分解的装备材料限制用户等级
  repeated int64 new_drop_level                           = 10;  // 新解锁的装备掉落等级
  bool open_enhance_protect                               = 11;  // 开启强化保护
  repeated SuitAttr suits                                 = 12;  // 套装信息
  repeated StepCost enhance_protect_cost_icon             = 13;  // 当次购买强化保护券需要的金币数量
  int64 current_enhance_protect_buy_count_weekly          = 14;  // 本周已经购买过强化保护券的次数
  repeated zonepb.specialpackpb.SpecialPack special_packs = 15;  // 所拥有的限时礼包
  map<int64, corepb.Item> already_trans_items             = 16;  // 已经转换的材料，key：转换等级，value：已获得的道具
}

message BatchQueryEquipmentRequest {
  repeated int64 unique_ids = 1;
}

message BatchQueryEquipmentReply {
  repeated Equipment items = 1;  // 装备数据
}

message LockRequest {
  int64 unique_id = 1;  // 物品唯一id
  int64 operate   = 2;  // 操作:1上锁，2解锁
}

message LockReply {}

enum TagType {
  TAG_UNKNOWN = 0;  // 无标签
  TAG_NEW     = 1;  //  新标签
}

message BatchSetTagRequest {
  repeated int64 unique_ids = 1;  // 物品唯一id
  int64 operate             = 2;  // 操作:1设置，2移除
  int64 tag_type            = 3;  // 标签类型:
}

message BatchSetTagReply {}

message EquipRequest {
  int64 unique_id = 1;  // 物品唯一id
}

message EquipReply {}

message DetachRequest {
  int64 unique_id = 1;  // 物品唯一id
}

message DetachReply {}

message BatchResolveRequest {
  repeated int64 unique_ids = 1;  // 物品唯一id
}

message BatchResolveReply {
  repeated corepb.Item items = 1;  // 分解获得材料
}

message BuyEnhanceProtectItemRequest {
  int64 buy_count     = 1;  // 购买次数
  int64 current_count = 2;  // 从第几次开始购买，前后台一致性校验
}

message BuyEnhanceProtectItemReply {
  int64 already_buy_count = 1;  // 已购买次数
}

message AdvanceRequest {
  int64 unique_id                 = 1;  // 物品唯一id
  repeated int64 rough_unique_ids = 2;  // 消耗的胚子物品唯一id
  repeated corepb.Item items      = 3;  // 进阶材料
}

message AdvanceReply {
  Equipment item = 1;  // 最新装备属性
}

message EnhanceRequest {
  int64 unique_id            = 1;  // 物品唯一id
  repeated corepb.Item items = 2;  // 强化材料
}

message EnhanceReply {
  bool result    = 1;  // 强化结果
  Equipment item = 2;  // 最新装备属性
}

message SwitchEnhanceProtectRequest {
  bool is_open = 1;  // 是否开启
}

message SwitchEnhanceProtectReply {}

message BatchInlayRequest {
  reserved 2;
  int64 position_id = 1;  // 镶嵌部位
}

message BatchInlayReply {
  Position position = 1;  // 最新部位属性
  bool result       = 2;  // 是否成功
}

message AttachRedpointRequest {
  int64 redpoint_id          = 1;  // 需要消除的红点ID
  repeated int64 equip_level = 2;  // 需要消除的新装备提示
}

message AttachRedpointReply {}

message EquipmentInfo {
  int64 equipment_score = 1;  // 装分
  // repeated Equipment items = 2;  // 装备数据
}

message TransEnhanceMaterialRequest {
  corepb.Item item = 1;  // 原始材料
}

message TransEnhanceMaterialReply {
  repeated corepb.Item item = 1;  // 转换后的材料
}

message GetAlreadyTransEnhanceMaterialRequest {}

message GetAlreadyTransEnhanceMaterialReply {
  map<int64, corepb.Item> already_trans_items = 1;  // 已经转换的材料，key：转换等级，value：已获得的道具
}

message SuitAttr {
  int64 suit_id            = 1;  // 套装ID
  repeated int64 positions = 2;  // 激活套装的部位
  int64 position_needed    = 3;  // 套装部位数
  int64 buff_id            = 4;  // buffID
  repeated Attr attrs      = 5;  // 套装固定属性
  ExtraScore extra_score   = 6;  //  套装提供的额外分数
}