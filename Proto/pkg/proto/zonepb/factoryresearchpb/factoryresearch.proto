// cs protocol
syntax = "proto3";

import "corepb/common.proto";

package zonepb.factoryresearchpb;
option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/factoryresearchpb";


service FactoryResearchService {
  // 获取研究系统信息
  rpc FactoryResearchInfo(FactoryResearchInfoRequest) returns (FactoryResearchInfoReply);
  // 升级天赋
  rpc UpgradeTalent(UpgradeTalentRequest) returns (UpgradeTalentReply);
}

message FactoryResearchInfoRequest {
  int64 research_level = 1;  // 研究等级(需要展示的研究页)，置空则为默认
  int64 talent_id      = 2;  // 选中的天赋ID,置空则为默认
}

message TalentInfo {
  int64 id              = 1;  // 天赋ID
  string name           = 2;  // 天赋名称
  string desc           = 3;  // 天赋描述
  int64 level           = 4;  // 天赋等级
  int64 max_level       = 5;  // 天赋最大等级
  bool unlocked         = 6;  // 是否解锁
  bool is_special       = 7;  // 是否是特殊天赋
  bool is_selected      = 8;  // 是否当前被选中天赋，若是则展示后续属性信息等
  bool is_need_redpoint = 9;  // 是否需要红点提示

  repeated int64 advance_talent_ids = 11;  // 前置天赋ID列表
  enum Relation {
    RELATION_UNKNOWN = 0;
    AND              = 1;
    OR               = 2;
  }
  Relation relation       = 12;  // 前置天赋关系，当前置天赋超过一个时，表示前置天赋的关系
  repeated int64 position = 13;  // 天赋位置二维坐标(列数;行数 -- 最左上角为1;1)

  // 下面是右侧展示的天赋详细信息，只有当前选中的天赋才有
  corepb.FightAttr fight_attr      = 21;  // 天赋属性加成
  corepb.FightAttr next_fight_attr = 22;  // 下一级天赋属性加成
  repeated corepb.Item cost        = 23;  // 升级消耗道具
}

message FactoryResearchInfoReply {
  int64 research_level           = 1;  // 研究等级(当前展示的研究页对应研究等级)
  map<int64, TalentInfo> talents = 2;  // 天赋信息列表
  repeated corepb.Item own_items = 3;  // 玩家当前拥有道具数量

  int64 prev_level = 11;  // 上一级研究等级(0表示没有上一级)
  int64 next_level = 12;  // 下一级研究等级(0表示没有下一级)
}

message UpgradeTalentRequest {
  int64 talent_id = 1;  // 选中的天赋ID
}

message UpgradeTalentReply {
  FactoryResearchInfoReply info = 1;  // 升级后的研究信息
}

message SystemOpenNTF {}
