// cs protocol
syntax = "proto3";

package zonepb.fruitpowerpb;
option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/fruitpowerpb";

import "corepb/common.proto";

service CSService {
  // 请求数据
  rpc QueryFruitInfo(QueryFruitInfoRequest) returns (QueryFruitInfoReply);

  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // 解锁(强化)徽章
  rpc DoBadgeLevelUp(DoBadgeLevelUpRequest) returns (BadgeInfo);

  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // 觉醒果实
  rpc DoFruitLevelUp(DoFruitLevelUpRequest) returns (FruitInfo);

  // 徽章分解
  rpc DoBadgeDecompose(DoBadgeDecomposeRequest) returns (DoBadgeDecomposeReply);

  // 待分解徽章道具列表
  rpc GetBadgeDecomposeItemList(GetBadgeDecomposeItemListRequest) returns (GetBadgeDecomposeItemListReply);
}

message GetBadgeDecomposeItemListReply {
  repeated BadgeDecomposeItem items = 1;  // 待分解道具列表
}

message BadgeDecomposeItem {
  uint32 id                          = 1;  // 待分解的物品id
  int32 count                        = 2;  // 物品数量
  repeated corepb.Item produce_items = 3;  // 分解一个道具产生的道具列表
}

message QueryFruitInfoRequest {}

message QueryFruitInfoReply {
  repeated FruitInfo fruit_infos = 1;  // 玩家果实列表
  repeated BadgeInfo badge_infos = 2;  // 玩家徽章列表
}

message FruitPowerInfo {
  int64 fc = 1;  // 实力
  // repeated FruitInfo fruit_infos = 2;  // 玩家果实列表
  // repeated BadgeInfo badge_infos = 3;  // 玩家徽章列表
}

message FruitInfo {
  int64 fruit_id                             = 1;  // 果实id
  int64 fruit_level                          = 2;  // 当前等级
  repeated corepb.Item next_level_need_items = 3;  // 下一级需要的道具情况
  bool is_open                               = 4;  // 是否开启
  bool can_level_up                          = 5;  // 是否可升级
}

message BadgeInfo {
  int64 badge_id                             = 1;  // 徽章id
  int64 badge_level                          = 2;  // 当前等级
  repeated corepb.Item next_level_need_items = 3;  // 下一级需要的道具情况
  bool can_level_up                          = 4;  // 是否可升级
}

message DoBadgeLevelUpRequest {
  int64 badge_id = 1;  // 徽章id
}

message DoFruitLevelUpRequest {
  int64 fruit_id = 1;  // 果实id
}

message DoBadgeDecomposeRequest {}

message DoBadgeDecomposeReply {}

message GetBadgeDecomposeItemListRequest {}