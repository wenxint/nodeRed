// cs protocol
syntax = "proto3";

package zonepb.inforankpb;
option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/inforankpb";

import "pkg/proto/zonepb/user_service.proto";
import "pkg/proto/zonepb/basic_info.proto";

// inforank 提供从 info 拉取排名的服务
service CSService {
  rpc QueryInfoRank(QueryInfoRankRequest) returns (QueryInfoRankReply);
}

enum RankGroup {
  RANK_GROUP_UNKNOWN = 0;
  FRIEND             = 1;  // 游戏好友排名
  GUILD              = 2;  // 工会排名
  PLAT_FRIEND        = 3;  // 平台好友排名
}

enum Mode {
  MODE_UNKNOWN = 0;
  MIRROR       = 1;  // 爬墙排名
  LADDER       = 2;  // 段位赛
}

message QueryInfoRankRequest {
  int64 rank_group = 1;  // enum RankGroup
  int64 mode       = 2;  // enum Mode

  int64 rank_begin = 3;
  int64 count      = 4;
}

message RankPlayerInfo {
  message FriendInfo {
    bool is_plat_friend = 1;  // 是否为平台好友
  }

  int64 rank                              = 1;  // 排名：从0开始计数,-1表示没上榜
  zonepb.BasicInfo basic_info             = 2;  // 基础信息
  zonepb.MirrorSummaryInfo mirror_info    = 3;  // 爬塔信息 mode=mirror 时设置
  FriendInfo friend_info                  = 4;  // 好友信息， 只有 group=friend 时设置
  zonepb.PvpLadderSummaryInfo ladder_info = 5;  // 段位赛信息(Mode=Ladder)
}

message QueryInfoRankReply {
  repeated RankPlayerInfo rank_list = 1;  // 排行信息
  RankPlayerInfo my_rank_info       = 2;  // 查询者自己的排名信息
  int64 total_rank_count            = 3;  // 当前榜单总数
  int64 mode                        = 4;  // enum Mode 客户端需要知道自己请求的mode
  int64 rank_group                  = 5;  // enum RankGroup 客户端需要知道自己请求的rank_group
}
