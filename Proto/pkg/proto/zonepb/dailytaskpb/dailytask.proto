// cs protocol
syntax = "proto3";

package zonepb.dailytaskpb;
option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/dailytaskpb";

import "corepb/common.proto";

service DailyTaskService {
  // 获取任务信息 (会自动领取全部任务的奖励)
  rpc GetDailyTaskInfo(GetDailyTaskInfoRequest) returns (GetDailyTaskInfoReply);

  // 领取任务的奖励
  rpc DeliverTaskReward(DeliverTaskRewardRequest) returns (DeliverTaskRewardReply);

  // 领取日活跃奖励
  rpc GetDailyAward(GetDailyAwardRequest) returns (GetDailyAwardReply);

  // 领取周活跃奖励
  rpc GetWeeklyAward(GetWeeklyAwardRequest) returns (GetWeeklyAwardReply);

  // 获取免费体力信息
  rpc GetRestoreFatigue(GetRestoreFatigueRequest) returns (GetRestoreFatigueReply);

  // 领取免费体力
  rpc DeliverRestoreFatigue(DeliverRestoreFatigueRequest) returns (DeliverRestoreFatigueReply);
}

message DeliverTaskRewardRequest {
  int64 task_id = 1;  // 任务ID, -1表示领取所有可领的任务
}

message DeliverTaskRewardReply {}

message GetDailyTaskInfoRequest {}
message GetDailyTaskInfoReply {
  repeated Task tasks                                          = 1;
  repeated Award daily_awards                                  = 2;  // 日宝箱列表
  repeated Award weekly_awards                                 = 3;  // 周宝箱列表
  int64 daily_score                                            = 4;  // 当日活跃度
  int64 weekly_score                                           = 5;  // 当周活跃度
  int64 previous_daily_score                                   = 6;  // 领取奖励前的活跃度
  int64 previous_weekly_score                                  = 7;  // 领取奖励前的当周活跃度
  repeated ActivityRandomBoxConfig activity_random_box_configs = 8;  // 活动随机宝箱配置
}

message ActivityRandomBoxConfig {
  int64 id                                             = 1;  // 活动随机宝箱ID
  repeated TimeBasedItemConfig time_based_item_configs = 2;  // 时间区间物品配置
}

message TimeBasedItemConfig {
  int64 item_id    = 1;  // 物品ID
  int64 time_begin = 2;  // 开始生效时间戳
  int64 time_end   = 3;  // 结束生效时间戳
}

message Task {
  int64 id               = 1;  // 任务ID
  int64 progress         = 2;  // 任务进度
  int64 status           = 3;  // 任务状态 0-未完成 1-未开启 2-已完成 3-待领取
  int64 limit            = 4;  // 任务上限
  WeeklyTask weekly_task = 5;  // 周任务特性字段
  int64 type             = 6;  // 任务类型 (与配置表一致：1-日常任务 2-周常任务)
  int64 task_award_score = 7;  // 从本任务日/周得到的活跃度
  int64 task_score_limit = 8;  // 从本任务日/周可得到的活跃度上限
}

message WeeklyTask {
  int64 daily_progress = 1;  // 周任务当日任务进度
  int64 daily_limit    = 2;  // 周任务当日进度上限
}

message Award {
  int64 id                              = 1;  // 宝箱ID
  int64 score                           = 2;  // 宝箱所需活跃度
  int64 status                          = 3;  // 宝箱状态 0-不可领取 1-可领取 2-已领取
  repeated AwardItem award_items        = 5;  // 宝箱奖励列表
  int64 return_number                   = 6;  // 追回宝箱奖励时：X日活跃奖励追回
  repeated AwardItem award_items_return = 7;  // 追回的宝箱奖励列表 (弃用)
}

// AwardItem 宝箱奖励列表(客户端显示用)
message AwardItem {
  reserved 2;

  corepb.Item item  = 1;
  int64 count_min   = 5;  // 预览奖励道具下限
  int64 count_max   = 3;  // 预览奖励道具上限
  int64 multiple    = 4;  // 万分比倍率 (20000表示2倍), 不填默认1倍，不显示
  bool is_random    = 6;  // 是否随机奖励
  int64 probability = 7;  // 概率值
}

message GetDailyAwardRequest {
  int64 id = 1;
}
message GetDailyAwardReply {
  repeated corepb.Item awards = 1;
}

message GetWeeklyAwardRequest {
  int64 id = 1;
}
message GetWeeklyAwardReply {
  repeated corepb.Item awards = 1;
  repeated int64 received_ids = 2;  // 领取后的周宝箱 ID
}

message DeliverRestoreFatigueRequest {}

message DeliverRestoreFatigueReply {
  repeated corepb.Item awards = 1;  // 奖励
}

message GetRestoreFatigueRequest {}

message GetRestoreFatigueReply {
  int64 restore_fatigue       = 1;  // 可领取的免费体力
  int64 restore_fatigue_limit = 2;  // 可领取的免费体力上限
}