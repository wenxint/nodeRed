// cs protocol
syntax = "proto3";

package zonepb.pvppb.pvpbasepb;
option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/pvppb/pvpbasepb";

import "corepb/loadout_comm.proto";
import "corepb/fight_common.proto";
import "pkg/proto/zonepb/basic_info.proto";
import "pkg/proto/zonepb/user_service.proto";

// 竞技场基础系统
service PVPBaseService {
  // 查询竞技场战报，包含段位赛、娱乐赛等
  rpc QueryBattleReport(QueryBattleReportRequest) returns (QueryBattleReportReply);
  // 查询竞技场界面信息
  rpc QueryPvpBaseInfo(QueryPvpBaseInfoRequest) returns (QueryPvpBaseInfoReply);
}

message QueryBattleReportRequest {}

message LadderPlayerInfo {
  zonepb.BasicInfo basic_info                        = 1;  // 基础信息
  repeated corepb.LoadoutBuddyChoice buddies_choices = 2;  // 伙伴信息
  bool is_robot                                      = 3;  // 是否机器人
  zonepb.PvpLadderSummaryInfo pvp_ladder_info        = 4;  // pvp相关的简要信息
  corepb.RobotInfo robot_info                        = 5;  // 机器人相关信息
}

message LadderBattleReport {
  corepb.FightResultType result = 1;  // 战斗结果
  int64 score                   = 2;  // 加或扣的分数
  int64 battle_time             = 3;  // 战斗时间
  LadderPlayerInfo self_player  = 4;  // 自己
  LadderPlayerInfo rival_player = 5;  // 对手
  int64 result_param            = 6;  // 如果result为win且result_param为1表示完胜，如果result为lose且result_param为1表示完败。其他情况则为普通的胜负平
  int64 sys_id                  = 7;  // 系统ID 用以区分不同系统的战报
  uint64 game_trace_id          = 8;  // game trace id
  int64 multiple                = 9;  // 多倍分数
}

message QueryBattleReportReply {
  repeated LadderBattleReport reports = 1;  // 近10场战报，前端自己算胜率
}

message QueryPvpBaseInfoRequest {}
message QueryPvpBaseInfoReply {}
