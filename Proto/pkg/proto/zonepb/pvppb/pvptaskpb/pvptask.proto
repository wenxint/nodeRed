// cs protocol
syntax = "proto3";

package zonepb.pvppb.pvptaskpb;
option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/pvppb/pvptaskpb";


import "corepb/common.proto";

// 竞技场任务服务
service PVPTaskService {
  // 获取任务信息
  rpc TaskInfos(TaskInfosRequest) returns (TaskInfosReply);
  // 获取轻松竞技场信息
  rpc EasyTimeInfo(EasyTimeInfoRequest) returns (EasyTimeInfoReply);
  // 领取胜场宝箱，废弃，使用ReceiveWeeklyTaskReward
  rpc ReceiveWinBox(ReceiveWinBoxRequest) returns (ReceiveWinBoxReply);
  // 领取全部周任务奖励
  rpc ReceiveWeeklyTaskReward(ReceiveWeeklyTaskRewardRequest) returns (ReceiveWeeklyTaskRewardReply);
  // 领取进度奖励
  rpc ReceiveProgressReward(ReceiveProgressRewardRequest) returns (ReceiveProgressRewardReply);
  // 清除今日胜场宝箱红点
  rpc RemoveTodayWinBoxRedpoint(RemoveTodayWinBoxRedpointRequest) returns (RemoveTodayWinBoxRedpointReply);
  // 清除本次轻松竞技场红点
  rpc RemoveEasyTimeRedpoint(RemoveEasyTimeRedpointRequest) returns (RemoveEasyTimeRedpointReply);
  // 活动对任务进度的加成信息
  rpc ActsProgress(ActsProgressRequest) returns (ActsProgressReply);
}

message TaskInfosRequest {}

message WinBoxInfo {                         // 废弃
  int64 total                          = 1;  // 今日累积的宝箱数量
  int64 finished                       = 2;  // 今日完成的胜场宝箱数量(例如，累积了3个宝箱，但是完成了2场胜场，那么这里的值为2)
  int64 available_reward_count         = 3;  // 能够领取奖励的宝箱个数
  repeated corepb.Item rewards_preview = 4;  // 宝箱预览道具，实际奖励会从中随机
}

message ProgressRewardDetail {
  int64 progress               = 1;  // 进度
  bool received                = 2;  // 是否已经领取
  repeated corepb.Item rewards = 3;  // 奖励
}

message ProgressRewardInfo {
  int64 progress                                        = 1;  // 玩家进度
  repeated ProgressRewardDetail progress_reward_details = 2;  // 各个进度奖励信息
}

message WeeklyTaskInfo {
  int64 task_id                = 1;   // 任务ID
  int64 total_count            = 2;   // 今日累积的宝箱数量
  int64 finished_count         = 3;   // 今日完成并领取的宝箱数量
  int64 current_progress       = 4;   // 当前任务次数的完成进度(例如 1/3: 胜利三次，当前进度为一次)
  int64 total_progress         = 5;   // 当前任务次数的总进度(例如 1/3: 胜利三次，总进度为三次)
  repeated corepb.Item rewards = 6;   // 奖励列表
  int64 buddy_group_id         = 7;   // 若该任务包含伙伴池，此时对应的伙伴组ID
  string task_name             = 8;   // 任务名称
  string task_desc             = 9;   // 任务描述
  int64 win_box_id             = 10;  // 对应宝箱 ID
}

// 使用 corepb.Item 的 detail 字段来传递奖励额外信息
message WeeklyTaskRewardItemDetail {
  bool super_captain_bonus = 1;  // 是否有超级船长加成
}

message ActsProgressCfg {
  repeated int64 act_id    = 1;  // 活动id
  int64 act_win_count      = 2;  // 活动胜利场次
  int64 progress_win_count = 3;  // 进度胜利场次
  int64 is_open            = 4;  // 是否开启 cfglint="0-关闭 1-开启"
  string name              = 5;  // 活动加成名称
  string desc              = 6;  // 活动加成描述
  string icon              = 7;  // 活动加成icon
}

message TaskInfosReply {
  WinBoxInfo win_box_info                  = 1;  // 胜场宝箱信息，废弃，配置在weekly中
  ProgressRewardInfo progress_reward_info  = 2;  // 进度奖励信息
  repeated WeeklyTaskInfo weekly_task_info = 3;  // 周任务信息
  ActsProgressCfg acts_progress_cfg        = 4;  // 活动对局对进度的额外加成的配置信息
  int64 acts_current_progress              = 5;  // 活动加成的当前值
}

message ActsProgressRequest {}

message ActsProgressReply {
  ActsProgressCfg acts_progress_cfg = 1;  // 活动对局对进度的额外加成的配置信息
  bool is_show_tips                 = 2;  // true 展示  false 不展示
}

message EasyTimeInfoRequest {}

message EasyTimeInfoReply {
  EasyTimeInfo easy_time_info = 1;  // 轻松竞技场信息
}

message ReceiveWinBoxRequest {
  int64 count = 1;  // 领取的宝箱数量
}

message ReceiveWinBoxReply {
  WinBoxInfo win_box_info      = 1;  // 更新后的胜场宝箱信息
  repeated corepb.Item rewards = 2;  // 领取的奖励
  EasyTimeInfo easy_time_info  = 3;  // 更新后的轻松竞技场信息
}

message ReceiveWeeklyTaskRewardRequest {}

message ReceiveWeeklyTaskRewardReply {
  repeated WeeklyTaskInfo weekly_task_info = 1;  // 更新后的任务信息
  ProgressRewardInfo progress_reward_info  = 2;  // 更新后的进度奖励信息
  repeated corepb.Item rewards             = 3;  // 领取的奖励
  EasyTimeInfo easy_time_info              = 4;  // 更新后的轻松竞技场信息
}

message ReceiveProgressRewardRequest {
  int64 progress = 1;  // 目标进度(小于等于该进度的奖励都会领取)
}

message ReceiveProgressRewardReply {
  ProgressRewardInfo progress_reward_info = 1;  // 更新后的进度奖励信息
  repeated corepb.Item rewards            = 2;  // 领取的奖励
  EasyTimeInfo easy_time_info             = 3;  // 更新后的轻松竞技场信息
}

message RemoveTodayWinBoxRedpointRequest {}

message RemoveTodayWinBoxRedpointReply {}

message RemoveEasyTimeRedpointRequest {}

message RemoveEasyTimeRedpointReply {}

message EasyTimeInfo {
  bool enabled                 = 1;  // 是否处于轻松竞技场时间
  int64 end_at                 = 2;  // 轻松竞技场结束时间(unix second)
  string easy_time_description = 3;  // 轻松竞技场描述
  string open_time_description = 4;  // 开启时间描述
  bool should_show             = 5;  // 是否应该展示「双倍胜场」标识，目前条件为胜场任务全部完成后就不显示
  int64 easy_time_id           = 6;  // 轻松竞技场ID
  int64 start_at               = 7;  // 轻松竞技场开始时间(unix second)
}
