// cs protocol
syntax = "proto3";

package zonepb.pvppb.fastduelladderpb;
option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/pvppb/fastduelladderpb";

// import "optionpb/option_v2.proto";
import "corepb/common.proto";
import "pkg/proto/zonepb/basic_info.proto";
import "pkg/proto/zonepb/pvppb/ladderyearpb/ladderyear.proto";
import "corepb/loadout_comm.proto";

// FastDuelLadderService 1v1极速单挑竞技场段位赛系统
service FastDuelLadderService {
  // option (mfcn.optionpb.cs_service) = true;
  // 获取排位信息
  rpc GetLadderInfo(GetLadderInfoRequest) returns (GetLadderInfoReply);
  // 荣誉排行信息
  rpc GloryRankingInfo(GloryRankingInfoRequest) returns (GloryRankingInfoReply);
  rpc LoadoutInfo(LoadoutInfoRequest) returns (LoadoutInfoReply);  // 获取阵容信息
  rpc ApplyLoadout(ApplyLoadoutRequest) returns (ApplyLoadoutReply);
}

message LoadoutInfoRequest {
  string loadout_type = 1;  // 阵容类型。具体有哪些值由玩法系统确定
}

message LoadoutInfoReply {
  corepb.LoadoutProfile profile      = 1;  // 大盘阵容配置
  corepb.Loadout loadout             = 2;  // 阵容
  bool valid                         = 3;  // 当前阵容是否合法
  bool adjusted                      = 4;  // 当前阵容检验时是否有过不合法的项目但已经被自动调整
  CandiatesProfile candiates_profile = 5;  // 多套候选阵容配置
}

// CandiatesProfile 1v1极速单挑段位赛候选阵容
message CandiatesProfile {
  int64 min_candidates      = 1;   // 最小候选阵容数；
  int64 max_candidates      = 2;   // 最大候选阵容数；
  int64 min_banpick_buddies = 3;   // 1V1极速单挑段位赛最少可以ban伙伴数
  int64 max_banpick_buddies = 4;   // 1V1极速单挑段位赛最多可以ban伙伴数
  int64 min_fight_buddies   = 5;   // 每套候选阵容最少要选择的出站伙伴数
  int64 max_fight_buddies   = 6;   // 每套候选阵容最多要选择的出站伙伴数
  int64 min_support_buddies = 7;   // 每套候选阵容最少要选择的援护伙伴数
  int64 max_support_buddies = 8;   // 每套候选阵容最多可选择的援护伙伴数
  int64 min_dials           = 9;   // 每套候选阵容最少要选择的空岛贝数
  int64 max_dials           = 10;  // 每套候选阵容最多可选择的空岛贝数
}

// ApplyLoadoutRequest
message ApplyLoadoutRequest {
  string loadout_type    = 1;  // 阵容类型。具体有哪些值由玩法系统确定
  corepb.Loadout loadout = 2;  // 阵容
}

message ApplyLoadoutReply {
  // 若要设置的阵容不合法，会通过 rpc 错误告知。
}

message GetLadderInfoRequest {
  bool disable_refresh_season = 1;  // 是否刷新赛年信息
}

message GetLadderInfoReply {
  int64 score              = 1;  // 显示分
  int64 win_cnt            = 2;  // 赢场次
  int64 deuce_cnt          = 3;  // 平级场次
  int64 lose_cnt           = 4;  // 输场次
  int64 rank               = 5;  // 排行
  int64 perfect_win_cnt    = 6;  // 完胜场次
  int64 successive_win_cnt = 7;  // 当前连胜次数
  int64 season_id          = 8;  // 当前赛季ID
  message SeasonInfo {
    int64 season_id                   = 1;  // 赛季ID
    int64 score                       = 2;  // 显示分
    repeated corepb.Item awards       = 6;  // 赛季奖励列表
    repeated corepb.Item phase_awards = 7;  // 赛季结算后补齐的段位奖励(该奖励是属于新赛季的，也就是当前赛季)
  }
  SeasonInfo last_season_info                                     = 9;   // 赛季信息（赛季重置后第1次请求时返回）
  int64 warrior_score                                             = 10;  // 当前勇士值
  int64 punish_end_ts                                             = 11;  // 战斗消极惩罚结束时间戳
  int64 open_season_id                                            = 12;  // 起始赛季ID
  zonepb.pvppb.ladderyearpb.LadderYearProfile ladder_year_profile = 13;  // 赛季简要信息
  int64 highest_successive_win_cnt                                = 14;  // 本赛季最高连胜次数
  ProtectInfo protect_info                                        = 15;  // 段位分保护信息
  repeated BuddyWinning buddy_winnings                            = 16;  // 伙伴场次和胜场信息
  bool new_season_redpoint                                        = 17;  // 是否存在新赛季标记
  bool disable_cancel_match                                       = 18;  // 是否禁止取消匹配
  bool is_super_captain                                           = 19;  // 是否超级船长
  FastDuelLadderStatus fast_duel_ladder_status                    = 20;  // 极速挑战状态
  bool is_setting_loadout                                         = 21;  // 阵容已设置
}

message FastDuelLadderStatus {
  bool is_open = 1;  // 极速单挑活动是否开启

  int64 open_at         = 2;  // 极速单挑开启时间(unix seconds)
  int64 finish_at       = 3;  // 极速单挑结束时间(unix seconds)
  int64 daily_open_at   = 4;  // 每日开启时间HHMM 1700
  int64 daily_finish_at = 5;  // 每日结束时间HHMM 2300
  bool is_daily_open    = 6;  // 当前是否可以比赛
}

message ProtectInfo {
  bool fail_lose_score_protect     = 1;  // 失败扣分保护是否生效
  bool fail_lose_sub_grade_protect = 2;  // 失败掉小段保护是否生效
  bool fail_lose_grade_protect     = 3;  // 失败掉大段保护是否生效
  bool warrior_score_protect       = 4;  // 勇士积分保护是否生效
}

message BuddyWinning {
  int64 buddy_id    = 1;  // 伙伴ID
  int64 total_count = 2;  // 总出场次数
  int64 win_count   = 3;  // 总胜场
}

message LadderSeasonRecord {
  reserved 11;
  int64 season_id = 1;
  int64 gid       = 2;
  string name     = 3;
  int64 level     = 4;
  string plat_pic = 5;
  int64 zone_id   = 6;
  int64 rank      = 7;   // 排名
  int64 score     = 8;   // 积分
  int64 fight_cnt = 9;   // 总场次
  int64 win_cnt   = 10;  // 胜场次
  // corepb.DressInfo dress_info          = 11;  // 装扮信息
  int64 perfect_win_cnt                    = 12;  // 完胜次数
  int64 highest_successive_win_cnt         = 13;  // 最高连胜次数
  repeated BuddyWinning buddy_winnings     = 14;  // 伙伴场次和胜场信息
  corepb.PersonalDisplayInfo personal_info = 15;  // 个人显示信息
}

message GloryRankingInfoRequest {
  int64 season_id  = 1;  // 查询的赛季ID，若传入 0 则查询当前赛季
  int64 begin_rank = 2;  // 查询的开始排名(从 1 开始计数)
  int64 count      = 3;  // 查询的数量
}

message GloryRankingInfo {
  int64 rank                  = 1;  // 排名
  zonepb.BasicInfo basic_info = 2;  // 玩家基础信息
  int64 ladder_score          = 3;  // 段位分
  int64 win_count             = 4;  // 胜利次数
  int64 total_count           = 5;  // 总场次
}

message GloryRankingInfoReply {
  repeated GloryRankingInfo rank_infos = 1;  // 荣誉排行信息
  GloryRankingInfo my_rank_info        = 2;  // 玩家自己的排行信息
  int64 total_count                    = 3;  // 排行榜总条数
}
