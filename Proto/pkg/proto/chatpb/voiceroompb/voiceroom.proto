// cs protocol
syntax = "proto3";

package chatpb.voiceroompb;
option go_package = "git.woa.com/red/chatsvr/pkg/proto/chatpb/voiceroompb";

// 语音聊天室服务
service VoiceRoomService {
  // Enter 进入语音室
  rpc Enter(EnterRequest) returns (EnterReply);
  // Leave 离开语音室
  rpc Leave(LeaveRequest) returns (LeaveReply);
  // Mute 禁言
  rpc Mute(MuteRequest) returns (MuteReply);
  // Unmute 取消禁言
  rpc Unmute(MuteRequest) returns (MuteReply);
  // StartHost 开始主持模式
  rpc StartHost(StartHostRequest) returns (StartHostReply);
  // StopHost 结束主持模式
  rpc StopHost(StopHostRequest) returns (StopHostReply);
  // AllowSpeak 主持模式下允许发言
  rpc AllowSpeak(AllowSpeakRequest) returns (AllowSpeakReply);
}

message PlayerState {
  int64 gid                       = 1;  // 玩家状态
  string member_id                = 2;  // member id for gvoice
  bool muted                      = 3;  // 是否被禁言
  bool allow_speak_when_host_mode = 4;  // 是否允许发言
}

message EnterRequest {
  string voice_id  = 1;  // 语音室ID
  int64 gid        = 2;  // 玩家gid
  string member_id = 3;  // member id for gvoice
}

message EnterReply {
  repeated PlayerState players = 1;  // 语音室内的玩家
  bool host_mode               = 2;  // 是否是主持模式
}

message LeaveRequest {
  string voice_id = 1;  // 语音室ID
  int64 gid       = 2;  // 玩家gid
}

message LeaveReply {}

message MuteRequest {
  string voice_id              = 1;  // 语音室ID
  int64 opeartor_gid           = 2;  // 操作者 gid
  repeated int64 operated_gids = 3;  // 被禁言玩家 gid 列表
}

message MuteReply {}

message UnmuteRequest {
  string voice_id              = 1;  // 语音室ID
  int64 opeartor_gid           = 2;  // 操作者 gid
  repeated int64 operated_gids = 3;  // 取消被禁言玩家 gid 列表
}

message UnmuteReply {}

message StartHostRequest {
  string voice_id = 1;  // 语音室ID
  int64 gid       = 2;  // 玩家gid
}

message StartHostReply {}

message StopHostRequest {
  string voice_id = 1;  // 语音室ID
  int64 gid       = 2;  // 玩家gid
}

message StopHostReply {}

message AllowSpeakRequest {
  string voice_id              = 1;  // 语音室ID
  int64 opeartor_gid           = 2;  // 操作者 gid
  repeated int64 operated_gids = 3;  // 允许发言玩家 gid 列表
}

message AllowSpeakReply {}

message SynchronizeNTF {
  string voice_id              = 1;  // 语音室ID
  repeated PlayerState players = 2;  // 语音室内的玩家(增量同步)
  repeated int64 leave_gids    = 3;  // 离开的玩家 gid 列表
  bool host_mode               = 4;  // 是否是主持模式
}