// cs protocol
syntax = "proto3";

package guildpb.actopenpb;

option go_package = "git.woa.com/red/guildsvr/pkg/proto/guildpb/actopenpb";

import "google/protobuf/any.proto";

// 同盟活动开启管理系统
service ActOpenService {
  // ActsOpenInfo 获取活动开启信息
  rpc ActsOpenInfo(ActsOpenInfoRequest) returns (ActsOpenInfoReply);
  // CheckActOpen 检查活动开启
  rpc CheckActOpen(CheckActOpenRequest) returns (CheckActOpenReply);
}

message ActsOpenInfoRequest {}

enum ActStatus {
  ACT_STATUS_UNKNOWN = 0;  // 无效
  UNOPEN             = 1;  // 未开启
  CONDITION_NOT_MET  = 2;  // 条件未满足
  OPENING            = 3;  // 进行中
  FINISHED           = 4;  // 已结束
}

message Times {
  int64 open_at   = 1;  // 开启时间(unix second)
  int64 settle_at = 2;  // 结算时间(unix second)
  int64 finish_at = 3;  // 关闭时间(unix second)
}

message ActOpenInfo {
  int64 system_id            = 1;  // 系统ID
  ActStatus status           = 2;  // 活动状态
  Error tips                 = 3;  // 没有开启的提示信息
  Times times                = 4;  // 时间信息
  int64 stage                = 5;  // 阶段(不同活动能够自定义阶段信息)
  google.protobuf.Any custom = 6;  // 业务自定义信息
}

message ActsOpenInfoReply {
  // 活动开启信息
  repeated ActOpenInfo act_open_info = 1;
}

message CheckActOpenRequest {
  int64 system_id = 1;  // 系统ID
}

message CheckActOpenReply {}

message ChangeNotify {
  repeated ActOpenInfo changes = 1;
}

message Error {
  int64 code               = 1;  // 错误码
  string message           = 2;  // 错误信息
  map<string, string> args = 3;  // 错误参数
}