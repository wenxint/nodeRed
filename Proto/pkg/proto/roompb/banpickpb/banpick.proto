// cs protocol
syntax = "proto3";

package roompb.banpickpb;
option go_package = "git.woa.com/red/roomsvr/pkg/proto/roompb/banpickpb";

import "corepb/loadout_comm.proto";

// 用于客户端调用的服务接口
// 均需要在 metadata 里带上 "x-room-id: 房间ID"
service Service {
  rpc Ban(BanRequest) returns (BanReply);
  rpc Pick(PickRequest) returns (PickReply);
  rpc Confirm(ConfirmRequest) returns (ConfirmReply);
  rpc Cancel(CancelRequest) returns (CancelReply);
}

enum BPStatus {
  None              = 0;  // 预留字段
  Ban_1P            = 1;  // 1PBan
  Pick_1P           = 2;  // 1PPick
  Ban_2P            = 3;  // 2PBan
  Pick_2P           = 4;  // 2PPick
  Ban_Concurrently  = 5;  // 双方ban
  Pick_Concurrently = 6;  // 双方选
  Show              = 7;  // 战前动画展示中
  ConfirmMatch      = 8;  // 确认匹配中
  Completed         = 9;  // 已完成
}

message BanRequest {
  corepb.Loadout loadout = 1;  // 当前阵容
}

message BanReply {}

message PickRequest {
  corepb.Loadout loadout = 1;  // 当前阵容
}

message PickReply {}

message ConfirmRequest {
  int64 current_status = 1;
}

message ConfirmReply {}

message CancelRequest {
  int64 current_status = 1;
}

message CancelReply {}

message BanPickMode {
  bool ban = 1;  // 是否开启禁选
}
