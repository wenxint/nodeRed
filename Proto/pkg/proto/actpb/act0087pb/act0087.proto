// cs protocol
syntax = "proto3";

package actpb.act0087pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0087pb";

import "corepb/common.proto";
import "corepb/fight_common.proto";
import "pkg/proto/actpb/commonpb/common.proto";

service CSAct0087Service {
  rpc ClearAllShowQuest(ClearAllShowQuestRequest) returns (ClearAllShowQuestReply);  // 清除新关卡标记
  rpc GameStart(GameStartRequest) returns (GameStartReply);                          // 开战
  rpc GameEnd(GameEndRequest) returns (GameEndReply);                                // 结算
}

message GameStartRequest {
  int64 quest_id = 1;  // 关卡 ID
}

message GameStartReply {
  corepb.GameStartMessage start_msg = 1;
}

message GameEndRequest {
  int64 quest_id                = 1;  // 关卡 ID
  corepb.FightResultType result = 2;  // 战斗结果
  int32 reason                  = 3;  // 结算原因:EGameResultReason
  int64 dungeon_id              = 4;  // 副本 ID
}

message GameEndReply {
  corepb.GameOverMessage over_message = 1;
}

message ActGetDetailRequest {}

message TaskDetail {
  int64 unlocked_timestamp              = 1;  // 任务解锁时间戳（0 表示已经达到解锁时间）
  actpb.commonpb.Task task              = 2;  // 任务基本信息
  repeated int64 not_finish_pre_dungeon = 3;  // 还未完成的前置关卡，为空时代表已完成
}

message QuestDetail {
  int64 quest_id = 1;
  bool is_new    = 2;  // 是否挑战过
  string name    = 3;  // 关卡名称
  bool is_show   = 4;  // 是否展示过
}

message ActGetDetailReply {
  int64 current_day                  = 1;  // 当前进行天数
  repeated TaskDetail tasks          = 2;  // 所有任务详细信息
  repeated QuestDetail quest_details = 3;  // 关卡详情
  bool is_fight_today                = 4;  // 今天是否挑战过
  bool is_open_today                 = 5;  // 今天是否点开过界面
}

message ClearAllShowQuestRequest {}

message ClearAllShowQuestReply {}

message FightPassThroughData {
  int64 quest_id = 1;  // 关卡id
}