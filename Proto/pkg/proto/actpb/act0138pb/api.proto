// cs protocol
syntax = "proto3";

package actpb.act0138pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0138pb";

import "corepb/common.proto";
import "corepb/fight_common.proto";

service CSAct0138Service {
  // 完成事件
  rpc CompleteEvent(CompleteEventRequest) returns (CompleteEventReply);
  // 开战
  rpc GameStart(GameStartRequest) returns (GameStartReply);
  // 结算
  rpc GameEnd(GameEndRequest) returns (GameEndReply);
  // 上报当前位置
  rpc ReportPosition(ReportPositionRequest) returns (ReportPositionReply);
  // 设置背景
  rpc SetBackground(SetBackgroundRequest) returns (SetBackgroundReply);
}

message ActGetDetailRequest {}

enum EventStatus {
  // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
  LOCKED    = 0;  // 未解锁
  UNLOCKED  = 1;  // 已解锁
  COMPLETED = 2;  // 已完成
  CANCELED  = 3;  // 已取消
}

message EventInfo {
  int64 id                     = 1;  // 事件 ID
  EventStatus status           = 2;  // 事件状态
  int64 open_at                = 3;  // 开启时间戳
  bool new                     = 4;  // “新”标记
  repeated corepb.Item rewards = 5;  // 奖励
}

message ActGetDetailReply {
  repeated EventInfo events = 1;  // 所有事件详细信息
  int64 position            = 2;  // 玩家当前位置
  int64 background          = 3;  // 玩家背景
}

message CompleteEventRequest {
  int64 event_id = 1;  // 事件 ID
}

message CompleteEventReply {
  repeated corepb.Item rewards = 1;  // 奖励
}

message GameStartRequest {
  int64 event_id = 1;  // 事件 ID
}

message GameStartReply {
  corepb.GameStartMessage start_msg = 1;
}

message GameEndRequest {
  int64 event_id                = 1;  // 事件 ID
  corepb.FightResultType result = 2;  // 战斗结果
  int32 reason                  = 3;  // 结算原因:EGameResultReason
}

message GameEndReply {
  corepb.GameOverMessage over_message = 1;
  repeated corepb.Item rewards        = 2;  // 奖励
}

message ReportPositionRequest {
  int64 event_id = 1;  // 事件 ID
}

message ReportPositionReply {}

message SetBackgroundRequest {
  int64 background = 1;  // 背景 ID
}

message SetBackgroundReply {}