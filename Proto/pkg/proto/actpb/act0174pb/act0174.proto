// cs protocol
syntax = "proto3";

package actpb.act0174pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0174pb";


import "corepb/common.proto";

service CSAct0174Service {
  // 获取可召回好友列表
  rpc GetRecallFriendList(GetRecallFriendListRequest) returns (GetRecallFriendListResponse);
  // 召回好友
  rpc RecallFriend(RecallFriendRequest) returns (RecallFriendResponse);
  // 召回详情列表
  rpc GetRecallDetailList(GetRecallDetailListRequest) returns (GetRecallDetailListResponse);
  // Shops 获取玩家当前的商城列表.
  rpc Shops(ShopsRequest) returns (ShopsReply);
  // QuickBuy 商品快捷购买.
  rpc QuickBuy(QuickBuyRequest) returns (QuickBuyReply);
  // FollowShopItem 关注指定商品红点推送.
  rpc FollowShopItem(FollowShopItemRequest) returns (FollowShopItemReply);
  // 领取金币返利
  rpc ClaimCoinRebate(ClaimCoinRebateRequest) returns (ClaimCoinRebateResponse);
  // 移除一次性红点
  rpc RemoveOnceRedPoint(RemoveOnceRedPointRequest) returns (RemoveOnceRedPointResponse);
}

message ActGetDetailRequest {}

message ActGetDetailReply {
  repeated RecallFriendInfo friend_list = 1;  // 可召回好友列表
  string share_link                     = 2;  // 分享链接H5地址
  int64 share_count                     = 3;  // 分享次数
  int64 accumulate_share_link_score     = 4;  // 累计分享获得的积分
  int64 config_share_link_score         = 5;  // 配置分享获得的积分
  int64 config_share_link_score_limit   = 6;  // 配置分享获得的积分上限
  int64 score_item_id                   = 7;  // 积分奖励道具ID
}

message RemoveOnceRedPointRequest {}

message RemoveOnceRedPointResponse {}

message GetRecallFriendListRequest {}

enum RecallStatus {
  // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
  NONE      = 0;  // 无
  RECALLING = 1;  // 召回中
  SUCCESS   = 2;  // 已召回
}

message RecallFriendInfo {
  string opend_id                          = 1;  // openid
  RecallStatus status                      = 2;  // 召回状态
  corepb.PersonalDisplayInfo personal_info = 3;  // 个人显示信息
  int64 recall_score_rate                  = 4;  // 召回积分加成（百分比）
  int64 gid                                = 5;  // gid
}

message GetRecallFriendListResponse {
  repeated RecallFriendInfo friend_list = 1;  // 可召回好友列表
}

message RecallFriendRequest {
  string opend_id = 1;  // openid
}

message RecallFriendResponse {}

message RecallDetailInfo {
  string opend_id                          = 1;  // openid
  RecallStatus status                      = 2;  // 召回状态
  corepb.PersonalDisplayInfo personal_info = 3;  // 个人显示信息
  int64 login_days                         = 4;  // 登录天数
  int64 recharge_amount                    = 5;  // 充值金额（元）
  int64 daily_score                        = 6;  // 活跃值
  int64 recall_score                       = 7;  // 召回积分
  int64 recall_time                        = 8;  // 发起召回时间
  int64 gid                                = 9;  // gid
}

message GetRecallDetailListRequest {}

message GetRecallDetailListResponse {
  repeated RecallDetailInfo detail_list = 1;  // 召回详情列表
}

message CoinRebateInfo {
  int64 friend_recharge_amount = 1;  // 好友充值金额（元）
  int64 rebate_amount          = 2;  // 充值返利金额
  int64 received_amount        = 3;  // 已领取金额
  int64 unreceived_amount      = 4;  // 未领取金额
}

// ShopsRequest 获取玩家商城列表请求.
message ShopsRequest {}

// ShopsReply 获取玩家商城列表响应信息.
message ShopsReply {
  repeated ShopItem items         = 1;  // 商品列表
  CoinRebateInfo coin_rebate_info = 2;  // 充值返利信息
}

message ShopItem {
  int64 shop_item_id  = 1;  // 商品id
  int64 buy_cnt       = 2;  // 已购买次数
  bool follow         = 3;  // 是否已关注
  repeated Cost costs = 4;  // 消耗道具列表.
}

message Cost {
  int64 buy_cnt         = 1;  // 消耗-购买次数
  int64 item_id         = 2;  // 消耗-道具ID
  int64 item_num        = 3;  // 消耗-价格
  int64 item_num_origin = 4;  // 消耗-原价
  int64 discount        = 5;  // 消耗-折扣(万分比)
}

// QuickBuyRequest 快捷购买请求
message QuickBuyRequest {
  int64 shop_item_id  = 1;  // 商品ID;
  int64 buy_cnt       = 2;  // 购买数量.
  repeated Cost costs = 3;  // 消耗道具列表.
}

// QuickBuyReply 快捷购买响应信息.
message QuickBuyReply {
  int64 shop_item_id           = 1;  // 商品ID;
  int64 buy_cnt                = 2;  // 购买数量.
  repeated corepb.Item rewards = 3;  // 实际得到的物品
}

// FollowShopItemRequest 关注指定商品红点请求
message FollowShopItemRequest {
  map<int64, bool> follow_shop_item_ids = 1;  // 商品ID列表的关注/取消关注.
}

// FollowShopItemReply  关注指定商品红点响应信息.
message FollowShopItemReply {}

message ClaimCoinRebateRequest {}

message ClaimCoinRebateResponse {
  repeated corepb.Item rewards = 1;
}
