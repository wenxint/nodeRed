
// cs protocol
syntax = "proto3";

package actpb.act0139pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0139pb";

import "pkg/proto/actpb/commonpb/common.proto";
import "corepb/common.proto";

// rpc ActGetDetail 活动详情使用通用协议
message ActGetDetailRequest {}
message ActGetDetailReply {
  message TaskList {
    repeated actpb.commonpb.Task tasks = 1;// 排序后的任务id列表
  }
  map<int64, TaskList> reward_info        = 1;  // 任务进度列表，actID -> tasks
  repeated RelateActInfo relate_act_infos = 2;  // 子活动列表
  FullStamp full_reward                   = 3;  // 全印章奖励
}

message RelateActInfo {
  int64 related_act_id = 1;  // 关联活动id
  enum ActStatus {
    ACT_STATUS_UNKNOWN  = 0;
    ACT_STATUS_NOT_OPEN = 1;
    ACT_STATUS_OPENING  = 2;
    ACT_STATUS_CLOSED   = 3;
  }
  ActStatus act_status     = 2;  // 关联活动状态
  int64 act_open_time_unix = 3;  // 关联活动开启时间
  int64 act_end_time_unix  = 4;  // 关联活动结束时间
  string act_name          = 5;  // 活动名称
}

message FullStamp {
  actpb.commonpb.TaskStatus status = 1;
  repeated corepb.Item awards      = 2;
}

message ActDeliverRewardRequest {}
message ActDeliverRewardReply {}

service CSAct0139Service {
  rpc FullStampAward(FullStampAwardRequest) returns (FullStampAwardReply);  // 全印章领奖
}

message FullStampAwardRequest {}
message FullStampAwardReply {
  repeated corepb.Item reward = 1;  // 获得的奖励
}