// cs protocol
syntax = "proto3";

package actpb.act0046pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0046pb";

import "pkg/proto/actpb/commonpb/common.proto";
import "corepb/common.proto";

message ActGetDetailRequest {}

enum LevelStatus {
  // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
  LOCKED   = 0;  // 未解锁
  UNLOCKED = 1;  // 已解锁，未玩过
  PLAYED   = 2;  // 已解锁，且玩过
  PASSED   = 3;  // 已通关; alias 已领奖
}

message LevelInfo {
  int64 level_id                         = 1;  // 关卡 ID; alias rank制作顺序
  LevelStatus level_status               = 2;  // 关卡状态
  int64 snowman_id                       = 3;
  int64 cost                             = 4;  // 消耗材料数
  int64 similarity_threshold             = 5;  // 相似度阈值，>=时通关，单位%
  repeated SnowComponent snow_components = 6;  // 历史最高相似度的部件位置信息
  int64 highest_similarity               = 7;  // 历史最高相似度
}

message SnowComponent {
  reserved 4, 5;
  int64 plan_id             = 1;
  int64 angel               = 2;
  int64 scale               = 3;
  int64 comp_id             = 6;
  string child_slide        = 7;
  string father_slide       = 8;
  int64 comp_type           = 9;
  bool is_make              = 10;
  int64 curve_id            = 11;
  bool is_rotate            = 12;
  bool is_self_rotate       = 13;
  bool is_scale             = 14;
  bool is_slide             = 15;
  int64 origin_angel        = 16;
  int64 origin_scale        = 17;
  string origin_child_slide  = 18;
  string origin_father_slide = 19;
  int64 final_angel         = 20;
  int64 final_scale         = 21;
  string slide_value_range  = 22;
}

message ActGetDetailReply {
  corepb.Item material               = 1;  // 材料信息
  repeated LevelInfo levels          = 2;  // 所有关卡详细信息
  repeated actpb.commonpb.Task tasks = 3;  // 所有任务详细信息
}

service CSAct0046Service {
  rpc GameStart(GameStartRequest) returns (GameStartReply);  // 开战
  rpc GameEnd(GameEndRequest) returns (GameEndReply);        // 结算
}

message GameStartRequest {
  int64 level_id = 1;  // 关卡 ID
}

message GameStartReply {}

message GameEndRequest {
  int64 level_id                         = 1;  // 关卡 ID; alias rank制作顺序
  repeated SnowComponent snow_components = 2;  // 本局部件位置信息
}

message GameEndReply {
  int64 similarity            = 1;  // 本局相似度
  bool passed                 = 2;  // 本局是否通关
  bool first_pass             = 3;  // 是否第一次通关
  repeated corepb.Item awards = 4;  // 奖励，第一次通关才有奖励
  int64 highest_similarity    = 5;  // 历史最高相似度
  bool need_refresh           = 6;  // 是否需要刷新关卡数据
}