// cs protocol
syntax = "proto3";

package actpb.act0159pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0159pb";


import "corepb/common.proto";
import "pkg/proto/actpb/commonpb/common.proto";

service CSAct0159Service {
  // 奖励内容
  rpc RewardDetail(RewardDetailRequest) returns (RewardDetailReply);
  // 收集内容
  rpc CollectionDetail(CollectionDetailRequest) returns (CollectionDetailReply);
  // 协助开启云盒列表
  rpc HelpOpenList(HelpOpenListRequest) returns (HelpOpenListReply);
  // 协助开启云盒
  rpc HelpOpenBox(HelpOpenBoxRequest) returns (HelpOpenBoxReply);
  // 打开云盒
  rpc OpenCloudBox(OpenCloudBoxRequest) returns (OpenCloudBoxReply);
  // 作弊云盒
  rpc CheatCloudBox(CheatCloudBoxRequest) returns (CheatCloudBoxReply);
}

message ActGetDetailRequest {}

enum CloudBoxType {
  CLOUD_BOX_TYPE_UNKNOWN = 0;  // 未知类型
  CLOUD_BOX_TYPE_NORMAL  = 1;  // 普通云盒
  CLOUD_BOX_TYPE_FRIEND  = 2;  // 好友云盒
}

enum CloudBoxStatus {
  CLOUD_BOX_STATUS_UNKNOWN = 0;  // 未知类型
  CLOUD_BOX_STATUS_UNOPEN  = 1;  // 未打开
  CLOUD_BOX_STATUS_CHEAT   = 2;  // 作弊
  CLOUD_BOX_STATUS_OPEN    = 3;  // 被打开
}

message CloudBox {
  int64 box_id              = 1;  // 云盒 ID
  CloudBoxType box_type     = 2;  // 云盒类型
  CloudBoxStatus box_status = 3;  // 云盒状态
  int64 box_collection_id   = 4;  // 云盒内的收集道具 ID
  string box_friend_name    = 5;  // 协助打开云盒的好友名称
}

message HelpedOpenRecord {
  BasicInfo basic_info    = 1;  // 玩家基本信息
  int64 box_collection_id = 2;  // 云盒内的收集道具 ID
}

message ActGetDetailReply {
  repeated CloudBox cloud_boxes    = 1;  // 云盒列表
  bool is_last_day                 = 2;  // 是否为活动最后一天
  corepb.Item open_box_item        = 3;  // 开启云盒道具
  corepb.Item cheat_box_item       = 4;  // 作弊云盒道具
  repeated HelpedOpenRecord record = 5;  // 被好友协助的记录
  bool is_first_open               = 6;  // 是否首次打开活动页面
  bool is_today_first_open         = 7;  // 是否本日首次打开活动页面
}

message RewardDetailRequest {}

message RewardDetailReply {
  repeated actpb.commonpb.Task tasks = 1;  // 所有任务详细信息
  int64 today_help_times             = 2;  // 当日协助他人次数
  int64 today_help_times_limit       = 3;  // 当日协助他人次数上限
}

message CollectionDetailRequest {}

message Collection {
  int64 collection_id = 1;  // 收集道具 ID
  bool is_collected   = 2;  // 是否被收集
}

message CollectionDetailReply {
  repeated Collection collections = 1;  // 收集道具列表
}

enum ListAction {
  LIST_ACTION_UNKNOWN = 0;  // 未知类型
  LIST_ACTION_OPEN    = 1;  // 打开协助列表
  LIST_ACTION_CLOSE   = 2;  // 关闭协助列表
}

message HelpOpenListRequest {
  ListAction action = 1;  // 协助列表行为
}

enum PlayerStatus {
  PLAYER_STATUS_UNKNOWN = 0;  // 未知类型
  PLAYER_STATUS_HELP    = 1;  // 可以协助
  PLAYER_STATUS_FULL    = 2;  // 当日协助已满
  PLAYER_STATUS_REPLY   = 3;  // 已回赠
  PLAYER_STATUS_UNOPEN  = 4;  // 活动未开启
}

enum PlayerType {
  PLAYER_TYPE_UNKNOWN  = 0;  // 未知玩家类型
  PLAYER_TYPE_GAME     = 1;  // 游戏好友
  PLAYER_TYPE_PLATFORM = 2;  // 平台好友
  PLAYER_TYPE_GUILD    = 3;  // 同盟好友
}

message BasicInfo {
  int64 gid                                        = 1;  // 玩家 ID
  PlayerType player_type                           = 2;  // 玩家类型
  corepb.PersonalDisplayInfo personal_display_info = 3;  // 玩家个人信息
}

message PlayerDetail {
  BasicInfo basic_info = 1;  // 玩家基本信息
  PlayerStatus status  = 2;  // 玩家状态
}

message HelpOpenListReply {
  repeated PlayerDetail players = 1;  // 协助列表玩家信息
  int64 today_help_times        = 2;  // 当日协助他人次数
  int64 today_help_times_limit  = 3;  // 当日协助他人次数上限
}

message HelpOpenBoxRequest {
  int64 helped_gid = 1;  // 被协助玩家 gid
}

message HelpOpenBoxReply {}

message OpenCloudBoxRequest {
  int64 box_id = 1;  // 云盒 ID
}

message OpenCloudBoxReply {
  repeated CloudBox new_cloud_boxes = 1;  // 刷新后的云盒列表
  repeated CloudBox old_cloud_boxes = 2;  // 刷新前的云盒列表（未刷新云盒列表，则为空）
  repeated corepb.Item awards       = 3;  // 开启云盒奖励内容
}

message CheatCloudBoxRequest {
  int64 box_id = 1;  // 云盒 ID
}

message CheatCloudBoxReply {
  repeated CloudBox cloud_boxes = 1;  // 云盒列表
}
