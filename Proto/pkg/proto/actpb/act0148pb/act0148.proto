
// cs protocol
syntax = "proto3";

package actpb.act0148pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0148pb";

import "corepb/common.proto";
import "corepb/fight_common.proto";
import "corepb/loadout_comm.proto";

// rpc ActGetDetail 活动详情使用通用协议
message ActGetDetailRequest {}
message ActGetDetailReply {
  int64 current_stage    = 1;
  int64 current_level    = 2;
  repeated Stage stages  = 3;
  int64 skip_level_count = 4;
  bool has_apply_loadout = 5;
}

service CSAct0148Service {
  rpc GameStart(GameStartRequest) returns (GameStartReply);
  rpc GameEnd(GameEndRequest) returns (GameEndReply);
  // 获取阵容信息
  rpc LoadoutInfo(LoadoutInfoRequest) returns (LoadoutInfoReply);
  // 设置阵容
  rpc ApplyLoadout(ApplyLoadoutRequest) returns (ApplyLoadoutReply);
}

message GameStartRequest {
  int64 level   = 1;
  int64 dungeon = 2;
}
message GameStartReply {
  corepb.GameStartMessage start_msg = 2;  // 通用战斗开始消息
}

message GameEndRequest {
  corepb.FightResultType result = 1;  // 战斗结果
  int32 reason                  = 2;  // 结算原因:EGameResultReason
  int64 completed_seconds       = 3;  // 通关时间
  bytes dungeon_record_bytes    = 4;  // 战斗对局数据，校验用
}
message GameEndReply {
  corepb.GameOverMessage over_message = 1;  // 游戏结束消息
  repeated corepb.Item awards         = 2;  // 奖励
  int64 current_level                 = 3;  // 当前层
}

message RankReward {
  int64 rank_id              = 1;  // 排名id
  int64 rank_param           = 2;  // 排行榜参数
  repeated corepb.Item items = 3;  // 奖励道具
}

message Stage {
  int64 stage                      = 1;
  repeated Level levels            = 2;
  int64 time_begin                 = 3;
  int64 time_end                   = 4;
  int64 my_rank                    = 5;
  string rank_type                 = 6;   // 排行榜类型
  string rank_instance             = 7;   // 排行榜实例
  repeated RankReward rank_rewards = 8;   // 排名奖励
  int64 my_rank_id                 = 9;   // 我的排名在配置表中的id
  bool is_gamed                    = 10;  // 是否已参与过
  int64 settle_time_begin          = 11;  // 结算开始时间
}

message Level {
  int64 level               = 1;
  repeated Dungeon dungeons = 2;
}

message Dungeon {
  int64 id                = 1;
  int64 dungeon_id        = 2;
  int64 completed_seconds = 3;
}

message LoadoutInfoRequest {
  string loadout_type = 1;  // 阵容类型，目前直接传 "act0125_loadout"
}

message LoadoutInfoReply {
  corepb.LoadoutProfile profile = 1;  // 阵容配置
  corepb.Loadout loadout        = 2;  // 阵容
}

message ApplyLoadoutRequest {
  corepb.Loadout loadout = 1;  // 阵容
}

message ApplyLoadoutReply {}