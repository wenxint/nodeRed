// cs protocol
syntax = "proto3";

package actpb.act0105pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0105pb";


import "corepb/fight_common.proto";

service CSAct0105Service {
  rpc GameStart(GameStartRequest) returns (GameStartReply);
  rpc GameEnd(GameEndRequest) returns (GameEndReply);
  rpc UnlockShowPlay(UnlockShowPlayRequest) returns (UnlockShowPlayReply);  // 解锁动画播放接口
  rpc SettleShowPlay(SettleShowPlayRequest) returns (SettleShowPlayReply);  // 结算动画播放接口
}

enum QuestStatus {
  QUEST_STATUS_UNKNOWN = 0;  // 默认值 不使用
  QUEST_STATUS_UNLOCK  = 1;  // 关卡已解锁(未通关)
  QUEST_STATUS_LOCK    = 2;  // 关卡未解锁
  QUEST_STATUS_PASS    = 3;  // 关卡已通关
}

enum LockReason {
  REASON_UNKNOWN           = 0;  // 默认值 不使用
  REASON_PRE_QUEST_LOCK    = 1;  // 前置关卡未通过
  REASON_OPEN_TIME_UNREACH = 2;  // 开放时间未到
}

enum ShadowType {
  SHADOW_TYPE_UNKNOWN = 0;  // 默认值
  SHADOW_TYPE_NORMAL  = 1;  // 常规
  SHADOW_TYPE_SWING   = 2;  // 摆动
  SHADOW_TYPE_EXTEND  = 3;  // 拉伸
  SHADOW_TYPE_SWITCH  = 4;  // 切换
}

message ActGetDetailRequest {}

message ActGetDetailReply {
  repeated QuestInfo quest_infos       = 1;  // 关卡详情
  repeated ShadowConfig shadow_configs = 2;  // 影子配置
}

message QuestInfo {
  int64 quest_id                                      = 1;   // 关卡ID
  string quest_name                                   = 2;   // 关卡名字
  QuestStatus quest_status                            = 3;   // 关卡状态
  LockReason lock_reason                              = 4;   // 锁定原因(quest_status为lock状态时)
  int64 unlock_time                                   = 5;   // 解锁时间 秒级时间戳
  bool unlock_show_play                               = 6;   // 关卡解锁动画是否播放
  bool settle_show_play                               = 7;   // 结算动画是否播放
  int64 star                                          = 8;   // 通关星级
  int64 one_star_score                                = 9;   // 1星对应的分数
  int64 two_star_score                                = 10;  // 2星对应的分数
  int64 three_star_score                              = 11;  // 3星对应的分数
  int64 duration_time                                 = 12;  // 关卡持续时间(秒)
  int64 presets_time                                  = 13;  // 影子刷新间隔
  repeated PresetsProcessConfig presets_process_infos = 14;  // 预设流程
  int64 tips_id                                       = 15;  // 图文说明ID
  repeated PresetsProcessConfig random_process_infos  = 16;  // 随机流程
}

message PresetsProcess {
  int32 shadow_code = 1;
  int32 delay       = 2;
}

message PresetsProcessConfig {
  repeated PresetsProcess presets_process = 1;  // 预设流程
  int64 random_rate                       = 2;  // 随机-权重 随机抽取时的权重占比
  int64 random_limit                      = 3;  // 随机-连续限制 抽取时放回限制，需要完成几组后才会再被抽到
}

message GameStartRequest {
  int64 quest_id = 1;  // 关卡ID
}

message GameStartReply {}

message GameEndRequest {
  int64 quest_id                = 1;  // 关卡ID
  int64 star                    = 2;  // 通关星级
  corepb.FightResultType result = 3;  // 战斗结果
  int64 cost_time               = 4;  // 通关耗时(秒)
}

message GameEndReply {
  bool star_change = 1;  // 星级是否有变动 星级从小到大的变动为true, 从大到小为false; 为true时需要请SettleShowPlay接口做结算动画播放
}

message UnlockShowPlayRequest {
  int64 quest_id = 1;  // 关卡ID
}

message UnlockShowPlayReply {}

message SettleShowPlayRequest {
  int64 quest_id = 1;  // 关卡ID
}

message SettleShowPlayReply {}

message ShadowConfig {
  int64 shadow_id        = 1;  // 序号
  ShadowType shadow_type = 2;  // 类型
  int64 supplementary    = 3;  // 辅助字段
  string shadow_resource = 4;  // 影子资源
  int64 warning_time     = 5;  // 出现预警时间
  int64 life_time        = 6;  // 影子存在时间
  int64 destroy_time     = 7;  // 消失预警时间
  int64 success_score    = 8;  // 成功得分
  int64 fail_score       = 9;  // 失败扣分
}
