// cs protocol
syntax = "proto3";

package actpb.act0044pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0044pb";


import "pkg/proto/actpb/commonpb/common.proto";
import "corepb/common.proto";

message ActGetDetailRequest {}

enum LevelStatus {
  // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
  LOCKED   = 0;  // 未解锁
  UNLOCKED = 1;  // 已解锁
  PASSED   = 2;  // 已通关
}

enum LockReason {
  LOCKREASON_UNKNOWN = 0;  // 未知原因
  ITEMNOTENOUGH      = 1;  // 道具不足
  PREUNPASS          = 2;  // 前置关卡未通关
}

message LevelInfo {
  int64 level_id           = 1;  // 关卡 ID
  LevelStatus level_status = 2;  // 关卡状态
  LockReason lock_reason   = 3;  // 关卡锁定原因 未解锁的关卡才需要显示
  corepb.Item items        = 4;  // 关卡所需道具
  int64 step_num           = 5;  // 关卡通关步数 通关了的关卡才需要显示
  bool is_first_open       = 6;  // 是否首次开启
}

message ActGetDetailReply {
  repeated LevelInfo levels          = 1;  // 所有关卡详细信息
  repeated actpb.commonpb.Task tasks = 2;  // 所有任务详细信息
  bool is_once_redpoint              = 3;  // 是否首次红点
}

service CSAct0044Service {
  rpc GameStart(GameStartRequest) returns (GameStartReply);  // 开战
  rpc GameEnd(GameEndRequest) returns (GameEndReply);        // 结算
  rpc GetLevelInfo(GetLevelInfoRequest) returns (GetLevelInfoResponse);
  rpc ViewLevel(ViewLevelRequest) returns (ViewLevelResponse);  // 查看关卡
}

message GameStartRequest {
  int64 level_id = 1;  // 关卡 ID
}

message GameStartReply {}

message GameEndRequest {
  int64 level_id = 1;  // 关卡 ID
  int64 step_num = 2;  // 通关步数
  bool is_pass   = 4;  // 是否通关
}

message GameEndReply {}

message GetLevelInfoRequest {}

message GetLevelInfoResponse {
  repeated LevelInfo level_info = 1;  // 关卡详细信息
  corepb.Item items             = 2;  // 当前道具数量
}

message ViewLevelRequest {}
message ViewLevelResponse {}