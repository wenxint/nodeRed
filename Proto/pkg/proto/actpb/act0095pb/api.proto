// cs protocol
syntax = "proto3";

package actpb.act0095pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0095pb";
import "pkg/proto/actpb/commonpb/common.proto";
import "corepb/common.proto";

enum LevelMedicine {               // 药剂等级
  MEDICINE_TYPE_UNKNOWN = 0;       // 占位
  LOWER                 = 770047;  // 低级
  MIDDLE                = 770048;  // 中级
  SENIOR                = 770049;  // 高级
  SPECIAL               = 770050;  // 特殊
}

message ActGetDetailRequest {}

message ActGetDetailReply {
  int64 cur_scores        = 1;  // 当前评分
  repeated Task task_info = 2;  // 任务列表
  bool show_special_tips  = 3;  //  是否显示特殊药剂提示
  repeated Record records = 4;  // 一键倒入记录
  bool unlock_claim_make  = 5;  // 是否解锁一键倒入
}

message Task {
  actpb.commonpb.Task reward_info = 1;  // 奖励列表
  int64 achieve_value             = 2;  // 达成数值
  string task_name                = 3;  // 任务名称
  int64 day                       = 4;  // 剩余开启天数
}

message Record {
  int64 make_time            = 1;  // 一键倒入时间
  repeated MedicineList list = 2;  // 药剂使用记录
  int64 previous_score       = 3;  // 之前评分
  int64 this_score           = 4;  // 当前评分
}

message MedicineList {
  LevelMedicine level   = 1;  // 药剂等级
  repeated int64 scores = 2;  // 药剂获得的评分列表
}

message ActDeliverRewardRequest {}

message ActDeliverRewardReply {}

service CSAct0095Service {
  rpc MakeMedicine(MakeMedicineRequest) returns (MakeMedicineReply);                                // 制作药剂
  rpc Done(DoneRequest) returns (DoneReply);                                                        // 完成
  rpc ClaimMakeMedicine(ClaimMakeMedicineRequest) returns (ClaimMakeMedicineReply);                 // 一键制药
  rpc CheckClaimMakeMedicine(CheckClaimMakeMedicineRequest) returns (CheckClaimMakeMedicineReply);  // 校验是否可以一键制药
}

message MakeMedicineRequest {
  LevelMedicine level = 1;  // 药剂等级
}
message MakeMedicineReply {}

message DoneRequest {}
message DoneReply {
  repeated corepb.Item rewards = 1;  // 领取到的奖励
}

message ClaimMakeMedicineRequest {}
message ClaimMakeMedicineReply {
  map<int64, int64> make_condition = 1;  // 药剂使用情况
}

message CheckClaimMakeMedicineRequest {}
message CheckClaimMakeMedicineReply {}