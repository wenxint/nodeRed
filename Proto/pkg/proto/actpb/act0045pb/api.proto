// cs protocol
syntax = "proto3";

package actpb.act0045pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0045pb";

import "corepb/common.proto";
import "corepb/fight_common.proto";
import "pkg/proto/actpb/commonpb/common.proto";

message ActGetDetailRequest {}

message ActGetDetailReply {
  int64 current_day     = 1;  // 当前进行天数
  repeated Quest quests = 2;  // 关卡信息，按关卡顺序
}

message Quest {
  int64 quest_id                  = 1;  // 关卡id
  int64 status                    = 2;  // 关卡情况（0=未开启，1=未完成，2=已完成）
  int64 open_at                   = 3;  // 开启天数
  bool new                        = 4;  // “新”标记
  actpb.commonpb.Task reward_info = 5;  // 奖励信息
  bool is_unlock_show             = 6;  // 关卡解锁动画是否播放
}

message ActDeliverRewardRequest {}

message ActDeliverRewardReply {}

service CSAct0045Service {
  rpc GameStart(GameStartRequest) returns (GameStartReply);     // 开战
  rpc GameEnd(GameEndRequest) returns (GameEndReply);           // 结算
  rpc UnlockShow(UnlockShowRequest) returns (UnlockShowReply);  // 设置关卡解锁动画为已播放状态
}

message GameStartRequest {
  int64 quest_id = 1;  // 关卡 ID
}

message GameStartReply {
  corepb.GameStartMessage start_msg = 1;  // 通用战斗开始消息
}

message GameEndRequest {
  int64 quest_id                = 1;  // 关卡 ID
  corepb.FightResultType result = 2;  // 战斗结果
  int32 reason                  = 3;  // 结算原因:EGameResultReason
}

message GameEndReply {
  corepb.GameOverMessage over_message = 1;  // 通用战斗结算消息
  repeated corepb.Item awards         = 2;  // 获得奖励
}

message UnlockShowRequest {
  int64 quest_id = 1;  // 关卡 ID
}

message UnlockShowReply {}