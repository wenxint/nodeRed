// cs protocol
syntax = "proto3";

package actpb.act0040pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0040pb";


import "pkg/proto/actpb/commonpb/common.proto";

service CSAct0040Service {
  // 取消标记位
  rpc CancelFlag(CancelFlagRequest) returns (CancelFlagReply);
}

message ActGetDetailRequest {}

message TaskDetail {
  int64 unlocked_timestamp = 1;  // 任务解锁时间戳（0 表示已经解锁）
  actpb.commonpb.Task task = 2;  // 任务基本信息
}

message ActGetDetailReply {
  int64 current_day         = 1;  // 当前进行天数
  int64 win_times           = 2;  // 胜利场次
  int64 total_times         = 3;  // 总场次
  repeated TaskDetail tasks = 4;  // 所有任务详细信息
  bool first_match_flag     = 5;  // 首次匹配标记位

  message MatchTimeConfig {
    int64 start_hour = 1;  // 开始时间(24小时制)
    int64 end_hour   = 2;  // 结束时间(24小时制)
  }
  MatchTimeConfig match_time_config = 6;  // 匹配时间配置
  message PvpTaskProgressConfig {
    bool is_open             = 1;  // 是否开启
    int64 act_win_count      = 2;  // 活动胜利场次(原始场次数)
    int64 progress_win_count = 3;  // 进度胜利场次(转化为的任务进度)
  }
  PvpTaskProgressConfig pvp_task_progress_config = 7;  // pvp任务进度配置
}

message ActDeliverRewardRequest {}

message ActDeliverRewardReply {}

enum FlagType {
  TYPE_UNKNOWN       = 0;  // 未知类型
  FIRST_MATCH_TYPE   = 1;  // 首次匹配标记位
  FIRST_LOADOUT_TYPE = 2;  // 首次打开阵容标记位
}

message CancelFlagRequest {
  FlagType flag_type = 1;  // 标记位类型
}

message CancelFlagReply {}

message FightData {
  int64 hidden_score = 1;  // 隐藏分
}
