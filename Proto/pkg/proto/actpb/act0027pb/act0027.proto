// cs protocol
syntax = "proto3";

package actpb.act0027pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0027pb";

import "corepb/common.proto";
import "pkg/proto/actpb/commonpb/common.proto";

service CSAct0027Service {
  // ProcessReward 获取进度奖励
  rpc ProcessReward(ProcessRewardRequest) returns (ProcessRewardReply);
  // TaskReward 获取任务奖励
  rpc TaskReward(TaskRewardRequest) returns (TaskRewardReply);
  // BuyProcessScore 购买进度值
  rpc BuyProcessScore(BuyProcessScoreRequest) returns (BuyProcessScoreReply);
}

message ActGetDetailRequest {}

message ActGetDetailReply {
  repeated Task tasks           = 1;
  repeated Process processes    = 2;
  int64 process_score           = 3;  // 当前完成的进度值
  int64 cur_week                = 4;  // 当前周，从 0 开始
  int64 tasks_to_refresh_time   = 5;  // 距离下次任务刷新时间，也就是距离下周开始的时间
  int64 process_score_buy_count = 6;  // 进度值购买次数
}

message Task {
  int64 id                        = 1;
  int64 stage                     = 2;  // 所在阶段，1 或 2 或 3
  actpb.commonpb.TaskStatus state = 3;  // 任务状态
  int64 process                   = 4;  // 完成的进度
}

message Process {
  int64 id                        = 1;
  int64 score                     = 2;  // 进度值
  actpb.commonpb.TaskStatus state = 3;  // 进度状态
}

message ProcessRewardRequest {
  repeated int64 process_ids = 1;
}

message ProcessRewardReply {
  repeated corepb.Item awards = 1;  // 奖励
}

message TaskRewardRequest {
  int64 task_id = 1;
  int64 stage   = 2;  // 所在阶段，1 或 2 或 3
}

message TaskRewardReply {
  int64 process_score = 1;  // 奖励的进度值
}

message BuyProcessScoreRequest {}

message BuyProcessScoreReply {
  int64 process_score = 1;  // 奖励的进度值
}