// cs protocol
syntax = "proto3";

package actpb.act0056pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0056pb";

import "corepb/common.proto";
import "pkg/proto/actpb/commonpb/common.proto";

service CSAct0056Service {
  // 制作红豆年糕汤
  rpc Cooking(CookingRequest) returns (CookingReply);
  // 赠送材料列表
  rpc GiveMaterialList(GiveMaterialListRequest) returns (GiveMaterialListReply);
  // 赠送材料
  rpc GiveMaterial(GiveMaterialRequest) returns (GiveMaterialReply);
  // 检查回赠资格
  rpc CheckBackGive(CheckBackGiveRequest) returns (CheckBackGiveReply);
  // 受赠列表
  rpc ReceiveMaterialRecord(ReceiveMaterialRecordRequest) returns (ReceiveMaterialRecordReply);
  // 搜索赠送列表，目前不支持模糊搜索
  rpc SearchFriendList(SearchFriendListRequest) returns (SearchFriendListReply);
}

message SearchFriendListRequest {
  string name       = 1;  // 玩家名字
  int64 player_type = 2;  // 好友1，同盟2
}

message SearchFriendListReply {
  PlayerDetail players         = 1;  //  玩家信息
  int64 today_give_times       = 2;  // 当日已赠送次数
  int64 today_give_times_limit = 3;  // 当日赠送次数上限
}

message ReceiveMaterialRecordRequest {}

message ReceiveMaterialRecordReply {
  repeated ReceiveMaterialRecord receive_material_record = 1;  // 领取到他人赠送的材料列表
}

message CheckBackGiveRequest {
  int64 given_gid = 1;  // 被赠送玩家 gid
}

message CheckBackGiveReply {
  bool can_back_give   = 1;  // 是否可以回赠
  BasicInfo basic_info = 2;  // 玩家基本信息
}

message ActGetDetailRequest {}

enum RewardStatus {
  REWARD_STATUS_UNKNOWN = 0;  // 未知类型
  REWARD_STATUS_UNDONE  = 1;  // 不可领奖
  REWARD_STATUS_REWARD  = 2;  // 可领奖
  REWARD_STATUS_FINISH  = 3;  // 已领奖
}

enum ReceiveRecordStatus {
  RECEIVE_RECORD_STATUS_UNKNOWN  = 0;  // 未知类型
  RECEIVE_RECORD_STATUS_FULL     = 1;  // 当日受赠已满
  RECEIVE_RECORD_STATUS_GIVEBACK = 2;  // 已回赠
  RECEIVE_RECORD_STATUS_GIVE     = 3;  // 可回赠
}

message ReceiveMaterialRecord {
  BasicInfo basic_info       = 1;  // 玩家基本信息
  int64 material_id          = 2;  // 赠送材料 ID（与配置表中 MaterialType 相对应）
  ReceiveRecordStatus status = 3;  // 受赠记录状态
}

message ActGetDetailReply {
  reserved 3;
  map<int64, int64> material_count                          = 1;  // 材料 ID（与配置表中 MaterailType 相对应） -> 材料数量
  repeated actpb.commonpb.Task tasks                        = 2;  // 所有任务详细信息
  int64 today_give_times                                    = 4;  // 当日赠送次数
  int64 today_give_times_limit                              = 5;  // 赠送次数上限
  int64 give_material_min_count                             = 6;  // 可赠送材料的最小数量
  bool can_one_click_cooking                                = 7;  // 是否可以一键制作
  repeated MaterialItem material_need_count                 = 8;
  repeated ReceiveMaterialRecord between_enter_receive_list = 9;  // 两次进入活动期间收到的材料列表
}

message MaterialItem {
  MaterialType type = 1;  // 材料名称
  int64 item_id     = 2;  // 材料道具ID
  int64 count       = 3;  // 制作消耗数量
}

message ActDeliverRewardReply {
  map<int64, int64> material_count = 1;  // 材料 ID（与配置表中 MaterialType 相对应） -> 材料数量
}

message CookingRequest {
  bool is_one_click_cooking = 1;  // 是否一键制作
}

message CookingReply {
  repeated corepb.Item awards      = 1;  // 制作后的奖励列表
  map<int64, int64> material_count = 2;  // 材料 ID（与配置表中 MaterialType 相对应） -> 材料数量
  bool can_one_click_cooking       = 3;  // 是否可以一键制作
  SupriseReward suprise_reward     = 4;  // 惊喜奖励(为空则说明不触发惊喜奖励)
}

enum ListAction {
  LIST_ACTION_UNKNOWN     = 0;  // 未知类型
  LIST_ACTION_FRIEND_OPEN = 1;  // 打开赠送好友列表
  LIST_ACTION_GUILD_OPEN  = 2;  // 打开赠送同盟列表
  LIST_ACTION_SCROLL      = 3;  // 滚动赠送列表
  LIST_ACTION_CLOSE       = 4;  // 关闭赠送列表
}

message GiveMaterialListRequest {
  ListAction action = 1;  // 操作赠送列表行为
}

enum PlayerStatus {
  PLAYER_STATUS_UNKNOWN = 0;  // 未知类型
  PLAYER_STATUS_GIVE    = 1;  // 可以赠送
  PLAYER_STATUS_FULL    = 2;  // 当日赠送已满
  PLAYER_STATUS_GIVEN   = 3;  // 今日已赠送
  PLAYER_STATUS_CLOSE   = 4;  // 活动暂未开启
}

enum PlayerType {
  PLAYER_TYPE_UNKNOWN  = 0;  // 未知玩家类型
  PLAYER_TYPE_GAME     = 1;  // 游戏好友
  PLAYER_TYPE_PLATFORM = 2;  // 平台好友
  PLAYER_TYPE_GUILD    = 3;  // 同盟好友
}

message BasicInfo {
  int64 gid                                        = 1;  // 玩家 ID
  PlayerType player_type                           = 2;  // 玩家类型
  corepb.PersonalDisplayInfo personal_display_info = 3;  // 玩家个人信息
  PlayerStatus status                              = 4;  // 玩家状态
  int64 give_time                                  = 5;  // 赠送时间
  int64 last_logout_time                           = 6;  // 最后下线时间(-1表示在线)
}

message PlayerDetail {
  BasicInfo basic_info             = 1;  // 玩家基本信息
  map<int64, int64> material_count = 2;  // 材料 ID（与配置表中 MaterialType 相对应） -> 材料数量
}

message GiveMaterialListReply {
  reserved 2, 3;
  int64 player_count            = 1;  // 赠送列表总人数
  repeated PlayerDetail players = 4;  // 赠送列表玩家信息
  int64 today_give_times        = 5;  // 当日已赠送次数
  int64 today_give_times_limit  = 6;  // 当日赠送次数上限
}

message GiveMaterialRequest {
  int64 given_gid           = 1;  // 被赠送玩家 gid
  int64 material_id         = 2;  // 赠送材料 ID（与配置表中 MaterialType 相对应）
  int64 give_back_timestamp = 3;  // 回赠时间戳(不传表示不是回赠而是直接赠送)
}

message GiveMaterialReply {
  repeated actpb.commonpb.Task tasks = 1;  // 所有任务详细信息
}

message SupriseReward {
  int64 buddy_id              = 1;  // 伙伴ID
  repeated corepb.Item awards = 2;  // 奖励列表
}

enum MaterialType {
  MATERIAL_TYPE_UNKNOWN = 0;  // 未知
  RED_BEAN              = 1;  // 红豆
  SWEET_DUMPLING        = 2;  // 汤圆
  WATER                 = 3;  // 水
}
