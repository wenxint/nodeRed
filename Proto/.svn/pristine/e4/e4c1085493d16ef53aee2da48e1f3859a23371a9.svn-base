// cs protocol
syntax = "proto3";

package zonepb.fatiguepb;
option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/fatiguepb";

import "corepb/common.proto";

service CSService {
  rpc InfoFatigue(InfoFatigueRequest) returns (InfoFatigueReply);                 // 获取体力基本信息
  rpc QueryFatigueShop(QueryFatigueShopRequest) returns (QueryFatigueShopReply);  // 页面请求购买体力 (与商城无关)
  rpc BuyFatigue(BuyFatigueRequest) returns (BuyFatigueReply);                    // 购买体力
}

message QueryFatigueShopRequest {
  int64 buy_count = 1;  // 购买次数
}
message QueryFatigueShopReply {
  int64 daily_buy_count_limit    = 1;  // 每日购买次数上限
  int64 daily_buy_count          = 2;  // 当日已购买次数
  int64 next_id                  = 3;  // 下次购买id (当日已购买次数+1)
  int64 next_fatigue_count       = 4;  // 下次购买得到的体力数量
  repeated corepb.Item next_cost = 5;  // 下次购买消耗, 随当天购买次数逐步提升消耗
  repeated Cost costs            = 6;  // 购买次数对应的消耗
}

message Cost {
  int64 bought_count        = 1;  // 已购买次数
  repeated corepb.Item cost = 2;  // 消耗
}

message BuyFatigueRequest {
  int64 buy_id    = 1;  // 购买id (当日已购买次数+1)
  int64 buy_count = 2;  // 购买次数
}
message BuyFatigueReply {
  int64 daily_buy_count_limit    = 1;  // 每日购买次数上限
  int64 daily_buy_count          = 2;  // 当日已购买次数
  int64 next_id                  = 3;  // 下次购买id (当日已购买次数+1)
  int64 next_fatigue_count       = 4;  // 下次购买得到的体力数量
  repeated corepb.Item next_cost = 5;  // 下次购买消耗, 随当天购买次数逐步提升消耗
  int64 this_buy_fatigue_count   = 6;  // 本次购买的实际发放体力数量
}

message InfoFatigueRequest {}

message InfoFatigueReply {
  UpdateFatigueInfo update_info = 1;  // 体力挂机更新信息
}

message UpdateFatigueInfo {
  int64 accumulated_time_seconds = 1;  // 当前恢复周期内已积累的时间(秒) 0 <= accumulated_time_seconds <= period_seconds
  int64 period_seconds           = 2;  // 恢复周期(秒) 每达到周期时间，恢复一次体力
  int64 period_recovery_fatigue  = 3;  // 每个周期恢复的体力点数
  int64 recovery_fatigue_limit   = 4;  // 可恢复的体力点数上限
  int64 owned_fatigue_limit      = 5;  // 拥有的体力点数上限
  int64 current_fatigue          = 6;  // 当前拥有的体力点数
}

message UpdateFatigueNotify {
  UpdateFatigueInfo update_info = 1;  // 体力挂机更新信息
}