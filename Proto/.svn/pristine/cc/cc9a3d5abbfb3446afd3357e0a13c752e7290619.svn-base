// cs protocol
syntax = "proto3";

package actpb.act0031pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0031pb";

import "corepb/common.proto";
import "pkg/proto/actpb/commonpb/common.proto";

service CSAct0031Service {
  // 领取活动奖励
  rpc DeliverActReward(DeliverActRewardRequest) returns (DeliverActRewardReply);
  // 批量领取活动奖励
  rpc BatchDeliverActReward(BatchDeliverActRewardRequest) returns (BatchDeliverActRewardReply);
}

message ActGetDetailRequest {}

message TaskDetail {
  int64 unlocked_timestamp = 1;  // 任务解锁时间戳（0 表示已经解锁）
  actpb.commonpb.Task task = 2;  // 任务基本信息
}

message ActGetDetailReply {
  int64 current_day         = 1;  // 当前进行天数
  repeated TaskDetail tasks = 4;  // 所有任务详细信息
  bool is_need_ticket       = 5;  // 是否需要门派
  int64 owned_ticket        = 6;  // 所拥有的门票数量
  int64 start_match_hour    = 7;  // 开始匹配时间
  int64 end_match_hour      = 8;  // 结束匹配时间
}

message DeliverActRewardRequest {
  int64 task_id = 1;  // 任务 ID
}

message DeliverActRewardReply {
  repeated corepb.Item awards = 1;  // 领取到的奖励
}

message BatchDeliverActRewardRequest {
  int64 task_id = 1;  // 任务 ID
}

message BatchDeliverActRewardReply {
  repeated corepb.Item awards = 1;  // 领取到的奖励
  repeated int64 awarded_ids  = 2;  // 领取到的任务 ID 列表
}

message CustomData {
  int64 current_day = 1;  // 当前天数
  int64 dungeon_id  = 2;  // 关卡 ID
}

message ActBriefInfo {
  int64 current_day = 1;  // 当前进行天数
}

message ActCustomDetail {
  bool have_task_undone = 1;  // 是否有任务还未完成
}