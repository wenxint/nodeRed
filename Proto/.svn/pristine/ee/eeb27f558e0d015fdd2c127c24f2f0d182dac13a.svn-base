// cs protocol
syntax = "proto3";

option go_package = "git.woa.com/red/anti-addiction/pkg/proto/antiaddiction";

package antiaddiction;

enum InstructionType {
  Undefined   = 0;
  Tips        = 1;
  Logout      = 2;
  OpenUrl     = 3;
  UserDefined = 4;
  Income      = 5;
  Income_Tips = 6;
  Stop        = 7;
}

service AntiAddictionService {
  // 心跳接口
  rpc HeartBeat(HeartBeatRequest) returns (HeartBeatReply);
  // 当前实时查询接口
  rpc PulishmentNotice(PulishmentNoticeRequeqst) returns (PulishmentNoticeReply);
}

message HeartBeatRequest {
  string user_id  = 1;  // 用户账号id，注意不是gid
  int64 duration  = 2;  // 上报间隔，单位：秒
  int32 fact_type = 3;  // 上报类型 11:开始，12:心跳，13:结束
}

message HeartBeatReply {
  int32 ret        = 1;
  string token     = 2;  //唯一token，用作幂等性校验
  int32 decision   = 3;  //决策InstructionType，详情参考https://hope.qq.com/wiki/htdocs/document/view.html?file=7/194 指令类型
  string title     = 4;  //标题
  string msg       = 5;  //内容
  string rule_name = 6;  //执行规则，透传到执行接口
  string trace_id  = 7;  //流水号
}

message PulishmentNoticeRequeqst {}

message PulishmentNoticeReply {
  int32 decision = 1;  //决策，详情参考https://hope.qq.com/wiki/htdocs/document/view.html?file=7/194 指令类型
  string title   = 2;  //标题
  string msg     = 3;  //内容
}

message HeartBeatNotify {
  repeated HeartBeatReply messages = 1;
}
