// cs protocol
syntax = "proto3";

package actpb.act0058pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0058pb";

import "corepb/common.proto";
import "pkg/proto/actpb/commonpb/common.proto";

service CSAct0058Service {
  // 领取活动奖励
  rpc DeliverActReward(DeliverActRewardRequest) returns (DeliverActRewardReply);
}

enum RewardState {
  CANT_CLAIM_UNKNOWN = 0;  // 奖励不可领取
  WAIT_CLAIM         = 1;  // 奖励可以领取
  ALREADY_CLAIM      = 2;  // 奖励已经领取
}

message ActGetDetailRequest {}

message ActGetDetailReply {
  repeated DayRewardInfo all_day_info              = 1;  // 所有天的信息
  repeated corepb.Item already_claim_reward_info   = 2;  // 累计领取的奖励信息
  repeated corepb.Item total_can_claim_reward_info = 3;  // 总共可以领取的奖励信息
  actpb.commonpb.Share share                       = 4;  // 分享信息
}

message DayRewardInfo {
  int32 day_index                 = 1;  // 活动登录的第N天
  repeated corepb.Item reward_msg = 2;  // 奖励信息
  RewardState reward_state        = 3;  // 奖励状态 0为不可领取 1为可领取 2为已经领取
}

message DeliverActRewardRequest {}

message DeliverActRewardReply {
  repeated corepb.Item reward_msg                = 1;  // 当前这次领奖的奖励信息
  repeated DayRewardInfo all_day_info            = 2;  // 领奖完成后所有day_index的状态 客户端直接根据这个全量更新即可
  repeated corepb.Item already_claim_reward_info = 3;  // 累计领取的奖励信息
}
