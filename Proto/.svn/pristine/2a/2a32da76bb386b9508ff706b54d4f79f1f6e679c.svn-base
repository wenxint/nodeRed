// cs protocol
syntax = "proto3";

package guildpb.huntingseapb;

option go_package = "git.woa.com/red/guildsvr/pkg/proto/guildpb/huntingseapb";

import "corepb/common.proto";

// Deprecate: huntingsea 系统已经废弃
service HuntingSeaService {
  // --------------狩猎海王--------------
  rpc QueryHuntingSeaCDInfo(QueryHuntingSeaCDInfoRequest) returns (QueryHuntingSeaCDInfoReply);              // 狩猎海王-倒计时信息
  rpc QueryHuntingSeaMainUI(QueryHuntingSeaMainUIRequest) returns (QueryHuntingSeaMainUIReply);              // 狩猎海王-挑战UI
  rpc HuntingSeaDoHunt(HuntingSeaDoHuntRequest) returns (HuntingSeaDoHuntReply);                             // 狩猎海王-发起挑战
  rpc QueryHuntingSeaRewardInfo(QueryHuntingSeaRewardInfoRequest) returns (QueryHuntingSeaRewardInfoReply);  // 狩猎海王-狩猎奖励UI
  rpc QueryHuntingSeaRank(QueryHuntingSeaRankRequest) returns (QueryHuntingSeaRankReply);                    // 狩猎海王-排行 // 客户端想用QueryHuntingSeaMainUIReply
  rpc BuyHuntingCnt(BuyHuntingCntRequest) returns (BuyHuntingCntReply);                                      // 狩猎海王-购买狩猎次数
  rpc HuntingSeaPrecheckDoHunt(HuntingSeaPrecheckDoHuntRequest) returns (HuntingSeaPrecheckDoHuntReply);     // 狩猎海王-发起挑战前置检查
  rpc BuyEncourageUser(BuyEncourageUserRequest) returns (BuyEncourageUserReply);                             // 狩猎海王-购买个人祝福
  rpc BuyEncourageGuild(BuyEncourageGuildRequest) returns (BuyEncourageGuildReply);                          // 狩猎海王-购买同盟祝福
  rpc UserGetReward(UserGetRewardRequest) returns (UserGetRewardReply);                                      // 狩猎海王-玩家主动领奖
}

// --------------狩猎海王--------------
message HSrankBasicUser {  // 狩猎海王-专用排行榜玩家信息
  reserved 12;
  uint64 gid        = 1;   // 角色唯一ID
  uint32 zone_id    = 2;   // 区服
  string name       = 3;   // 角色昵称(ntf: reset)
  uint32 level      = 4;   // 角色等级(ntf: reset)
  int64 exp         = 5;   // 角色经验值(ntf: incr)
  string plat_pic   = 6;   // 玩家平台头像(ntf: reset)
  int64 fc          = 7;   // 战斗力(ntf: reset)
  int64 guild_gid   = 8;   // 同盟id
  string guild_name = 9;   // 同盟名
  string zone_name  = 10;  // 小区名
  int64 platform    = 11;  // 平台(0:unknown 1:微信 2:QQ 3:guest)
  // corepb.DressInfo dress_info              = 12;  // 装扮信息
  corepb.PersonalDisplayInfo personal_info = 13;  // 个人显示信息
}

message HSrankUnitUser {
  HSrankBasicUser user_info         = 1;
  int64 rank_index                  = 2;  // 排名,从1开始,<=0 未上榜
  int64 sum_damage                  = 3;  // 累计伤害
  repeated corepb.Item reward_items = 4;  // 奖励物品列表
}

message HSrankBasicGuild {  // 狩猎海王-专用排行榜同盟信息
  int64 guild_id     = 1;   // 同盟id
  int64 zone_id      = 2;   // 小区id
  int64 level        = 3;   // 同盟等级
  int64 guild_flag   = 4;   // 同盟旗帜
  int64 guild_fc     = 5;   // 同盟实力
  string guild_name  = 7;   // 同盟名称
  int64 leader_gid   = 8;   // 会长gid和名字
  string leader_name = 9;   // 为了防止多查一次db和info
}

message HSrankUnitGuild {
  HSrankBasicGuild guild_info       = 1;
  int64 rank_index                  = 2;  // 排名,从1开始,<=0 未上榜
  int64 sum_damage                  = 3;  // 累计伤害
  repeated corepb.Item reward_items = 4;  // 奖励物品列表
}

message QueryHuntingSeaCDInfoRequest {}

message QueryHuntingSeaCDInfoReply {
  int64 time_stamp_begin                   = 1;  // 本次开始时间
  int64 time_stamp_end                     = 2;  // 本次结束时间
  int64 boss_id                            = 3;  // bossid
  string boss_name                         = 4;  // boss名
  HuntingStageSimpleInfo stage_simple_info = 5;  // 活动状态UI用数据
}

message QueryHuntingSeaMainUIRequest {}

message QueryHuntingSeaMainUIReply {
  int64 time_stamp_end                     = 1;   // 本次结束时间
  int64 available_rounds                   = 2;   // 剩余挑战次数
  int64 damage_user                        = 3;   // 我的伤害
  int64 damage_guild                       = 4;   // 同盟伤害
  int64 damage_zone                        = 5;   // 小区伤害
  repeated HSrankUnitUser rank_list_user   = 6;   // 个人排行榜
  HSrankUnitUser my_rank_user              = 7;   // 我的个人
  repeated HSrankUnitGuild rank_list_guild = 8;   // 同盟排行榜
  HSrankUnitGuild my_rank_guild            = 9;   // 我的帮会
  int64 total_rounds                       = 10;  // 挑战总次数(免费次数+付费购买次数)
  int64 boss_id                            = 11;  // bossid
  string boss_name                         = 12;  // boss名
  int64 max_damage_user                    = 13;  // 上限_我的伤害
  int64 max_damage_guild                   = 14;  // 上限_同盟伤害
  int64 max_damage_zone                    = 15;  // 上限_小区伤害
  BuyHuntingSeaCntInfo buy_cnt_info        = 16;  // 购买狩猎次数信息
  int64 time_stamp_begin                   = 17;  // 本次开始时间
  BuyEncourageInfo buy_info                = 18;  // 祝福购买总信息
  HuntingStageSimpleInfo stage_simple_info = 19;  // 活动状态UI用数据
}

message BuyHuntingSeaCntInfo {
  int64 left_buy_cont               = 1;  // 剩余购买次数
  repeated corepb.Item buy_cnt_cost = 2;  // 购买消耗道具
  int64 max_buy_cnt                 = 3;  // 最大可购买次数
  string attr_text                  = 4;  // 属性描述文本
  repeated EncourageAttr attrs      = 5;  // 属性组
  int64 bonus                       = 6;  // 加成百分比
  string client_res                 = 7;  // 客户端资源串
}

message HuntingSeaDoHuntRequest {}

message HuntingSeaDoHuntReply {}

message HuntingSeaBattleBeginNTF {  // 战斗开始信息
  int64 damage_sum = 1;             // 累计伤害
}

message HuntingSeaBattleResultNTF {       // 战斗结算信息
  int64 damage_this                 = 1;  // 本次伤害
  int64 damage_sum                  = 2;  // 累计伤害
  repeated corepb.Item reward_items = 3;  // 奖励物品列表
  int64 rank_index_old              = 4;  // 个人排名(旧)
  int64 rank_index_new              = 5;  // 个人排名(新)
  bool is_first_on_rank             = 6;  // (本期)第一次上排行榜
}

enum HuntingSeaRewardStatus {
  HSRS_null      = 0;  // 条件未达成
  HSRS_available = 1;  // 条件达成
  HSRS_current   = 2;  // 当前目标
  HSRS_received  = 3;  // 已领取
}

message HuntingSeaRewardLine {
  repeated corepb.Item reward_items    = 1;  // 奖励物品列表
  string text                          = 2;  // 文本
  HuntingSeaRewardStatus reward_status = 3;  // 任务状态
  int64 numerical_value                = 4;  // 数值
}

message HuntingSeaRewardPage {
  repeated HuntingSeaRewardLine reward_lines = 1;  // 奖励行列表
  string text                                = 2;  // 文本
  int64 numerical_value                      = 3;  // 数值
}

message QueryHuntingSeaRewardInfoRequest {}

message QueryHuntingSeaRewardInfoReply {
  HuntingSeaRewardPage page_user       = 1;  // 个人伤害
  HuntingSeaRewardPage page_guild      = 2;  // 同盟伤害
  HuntingSeaRewardPage page_zone       = 3;  // 全服伤害
  HuntingSeaRewardPage page_guild_rank = 4;  // 同盟排名
  HuntingSeaRewardPage page_user_rank  = 5;  // 个人排名
}

message QueryHuntingSeaRankRequest {}

message QueryHuntingSeaRankReply {
  repeated HSrankUnitUser rank_list_user   = 1;  // 个人排行榜
  HSrankUnitUser my_rank_user              = 2;  // 我的个人
  repeated HSrankUnitGuild rank_list_guild = 3;  // 同盟排行榜
  HSrankUnitGuild my_rank_guild            = 4;  // 我的帮会
  int64 rank_time_stamep                   = 5;  // 榜单时间戳(大于0有效)
  string rank_text                         = 6;  // 排行榜说明文本
  int64 total_rank_count                   = 7;  // 当前榜单总数
}

message BuyHuntingCntRequest {
  int64 count = 1;  // 购买次数
}

message BuyHuntingCntReply {
  BuyHuntingSeaCntInfo buy_cnt_info = 1;  // 购买狩猎次数信息
}

message HuntingSeaPrecheckDoHuntRequest {}

message HuntingSeaPrecheckDoHuntReply {}

message BuyEncourageUserRequest {}

message BuyEncourageUserReply {
  BuyEncourageInfo buy_info = 1;  // 祝福购买总信息
}

message BuyEncourageGuildRequest {}

message BuyEncourageGuildReply {
  BuyEncourageInfo buy_info = 1;  // 祝福购买总信息
}

message EncourageAttr {       // 鼓舞的属性
  corepb.AttributeId id = 1;  // 属性id
  int64 value           = 2;  // 属性值
}

message BuyEncourageInfo {                            // 祝福相关信息汇总
  BuyHuntingSeaCntInfo buy_encourage_user_info  = 1;  // 购买个人鼓舞信息
  BuyHuntingSeaCntInfo buy_encourage_guild_info = 2;  // 购买同盟鼓舞信息
  repeated EncourageAttr encourage_attrs        = 3;  // 鼓舞总加成属性
  int64 bonus                                   = 4;  // 总加成百分比
}

enum HuntingUIStage {  // 给客户端展示用的阶段
  HUIS_UNKNOWN  = 0;   // 无效状态
  HUIS_NOT_OPEN = 10;  // 未开启
  HUIS_HUNTING  = 20;  // 挑战中
  HUIS_ENDING   = 30;  // 结束发奖阶段
}

message HuntingStageSimpleInfo {  // 活动阶段UI用数据
  HuntingUIStage ui_stage = 1;    // 阶段
}

message HuntingSeaStageChangeNtf {  // 海王活动状态变化ntf
}

message UserGetRewardRequest {  // 玩家主动领奖 request
  string reward_type = 1;       // 主动领奖类型: "user":个人累计伤害 "server":全服累计伤害 "guild":帮会累计伤害
  int64 reward_value = 2;       // 奖励对应数值: 见 HuntingSeaRewardLine.numerical_value 字段
}

message UserGetRewardReply {              // 玩家主动领奖 reply
  repeated corepb.Item reward_items = 1;  // 奖励物品列表
}
