// cs protocol
syntax = "proto3";

package zonepb.secretfieldpb;

option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/secretfieldpb";


import "corepb/common.proto";
import "corepb/fight_common.proto";
import "corepb/loadout_comm.proto";

service CSSecretFieldService {
  // 获取秘境挑战信息
  rpc GetSecretFieldInfo(GetSecretFieldInfoRequest) returns (GetSecretFieldInfoResponse);
  // 已废弃
  // // 是否放弃奖励，当玩家挑战的层数小于当前层时需要发该请求，其他情况可以不发
  // rpc AbandonReward(AbandonRewardRequest) returns (AbandonRewardResponse);
  // 获取奖励（2024-10-03: 现在这条协议的语义为客户端通知后台结束翻牌了，即结束这次秘宝的全部奖励流程）
  rpc GetRewards(GetRewardsRequest) returns (GetRewardsResponse);
  // 赌宝箱(翻牌)
  rpc GambleBox(GambleBoxRequest) returns (GambleBoxResponse);
  // 扫荡
  rpc SweepRewards(SweepRewardsRequest) returns (SweepRewardsResponse);
  // 记录引导界面已显示(客户端引导流程完成后上报)
  rpc RecordGuideShown(RecordGuideShownRequest) returns (RecordGuideShownResponse);
  // 打开或关闭多倍奖励
  rpc SwitchMultiReward(SwitchMultiRewardRequest) returns (SwitchMultiRewardResponse);
  // 专属管家扫荡（act0050）
  rpc SweepByPrivateSecretary(SweepByPrivateSecretaryRequest) returns (SweepByPrivateSecretaryResponse);
  // 进入结算流程
  rpc BeginSettle(BeginSettleRequest) returns (BeginSettleResponse);
  // 是否需要清理背包
  rpc IsBagNeedClean(IsBagNeedCleanRequest) returns (IsBagNeedCleanResponse);
  // 拉取最近6个月的红色装备抽取记录
  rpc QueryRedEquip(QueryRedEquipRequest) returns (QueryRedEquipReply);
}

message QueryRedEquipRequest {
  bool is_paid = 1;  // 是否是付费抽取
}

message QueryRedEquipReply {
  repeated RedEquipRecord records = 1;  // 抽取记录
}

message RedEquipRecord {
  int64 equip_id = 1;  // 装备ID(装备ID为0的record表示当前抽取进度)
  int64 count    = 2;  // 抽取到该装备的抽取次数
}

message IsBagNeedCleanRequest {
  int64 level = 1;  // 层数
  int64 times = 2;  // 挑战次数
}

message IsBagNeedCleanResponse {
  int64 equip_need_clean_count               = 1;  // 需要清理的装备数量
  int64 equip_exchange_coin_need_clean_count = 2;  // 需要清理的装备币数量
}

message BeginSettleRequest {}

message BeginSettleResponse {
  FightRecord fight_record = 1;  // 战斗记录(下一轮翻牌)
}

message GetSecretFieldInfoRequest {}

message GetSecretFieldInfoResponse {
  int64 capacity                           = 1;   // 实力值
  int64 level                              = 2;   // 层数
  int64 fight_buddyid                      = 3;   // 出战伙伴ID
  int64 bossid                             = 4;   // 已废弃不用
  int64 punish_timestamp                   = 5;   // 上次异常退出处罚时间
  corepb.Loadout loadout                   = 6;   // 阵容信息
  int64 equipment_score                    = 7;   // 装等值
  bool equipment_score_span_flag           = 8;   // 装等值是否跨档
  bool unlock_new_level                    = 9;   // 是否解锁新的层数
  bool is_multi_reward                     = 10;  // 是否开启多倍奖励
  map<int64, int64> multi_cost             = 11;  // 多倍奖励消耗
  bool is_multi_reward_visible             = 12;  // 多倍奖励是否可见
  bool is_today_pass                       = 13;  // 今日是否通关过
  bool is_luck_sailing                     = 14;  // 幸运出航日是否开启
  int64 double_times                       = 15;  // 幸运出航日剩余翻倍次数
  bool equipment_records_entrance_visible  = 16;  // 装备记录入口是否可见
  bool paid_equipment_records_page_visible = 17;  // 付费装备记录页签是否可见
}

// message AbandonRewardRequest {
//   bool is_abandon = 1;  // 是否放弃奖励
// }

// message AbandonRewardResponse {
//   // 如果接受奖励，则下面这些字段返回奖励的实际内容，否则下面字段为空
//   repeated corepb.Item base_items        = 1;  // 基础掉落（右上角飘的奖励）
//   repeated corepb.Item equip_items       = 2;  // 装备
//   int64 cur_level                        = 3;
//   int64 role_level                       = 4;
//   corepb.FightResultType result          = 5;  // 战斗结果
//   zonepb.GambleBoxInfo equip_gamble_info = 6;  // 装备付费宝箱信息
//   int64 pay_rewards_count                = 7;  // 奖励之中，氪金奖励的数量
// }

message GetRewardsRequest {
  bool is_sweep = 1;  // 是否是扫荡
}

message GetRewardsResponse {
  repeated corepb.Item awards = 1;  // 得到的奖励
  int64 pay_rewards_count     = 2;  // 奖励之中，氪金奖励的数量
  bool is_bag_will_full       = 3;  // 背包是否将满,如果是true，则客户端需要退出房间，不允许玩家继续战斗

  // 新增字段
  // 扫荡不需要关注以下字段
  FightRecord fight_record = 4;  // 战斗记录(下一轮翻牌)
}

// FightRecord 战斗记录，每一次通关对应一个战斗记录
message FightRecord {
  repeated corepb.Item base_items  = 1;  // 基础掉落（右上角飘的奖励）可能不需要？
  repeated corepb.Item equip_items = 2;  // 装备
  int64 cur_level                  = 3;
  int64 role_level                 = 4;
  GambleBoxInfo equip_gamble_info  = 5;  // 装备翻牌信息
  int64 pay_rewards_count          = 6;  // 奖励之中，氪金奖励的数量
  int64 remain_record_count        = 7;  // 剩余战斗记录数量
  int64 need_clean_count           = 8;  // 需要清理的装备数量(才能开始结算)
  int64 total_fight_count          = 9;  // 总的战斗次数
  message Box {
    int64 index                = 1;
    bool flipped               = 2;  // 是否翻过
    bool current               = 3;  // 是否刚翻的
    corepb.Item equipment_item = 4;  // 装备
    corepb.Item cost           = 5;  // 翻牌消耗
  }
  repeated Box boxes = 10;  // 各牌位状态，total_gamble_cnt 长度
}

message GambleBoxRequest {
  bool is_sweep   = 1;  // 是否是扫荡
  int64 box_index = 2;  // 透传index
}

message GambleBoxResponse {
  repeated corepb.Item base_items  = 1;  // 基础掉落（右上角飘的奖励）
  repeated corepb.Item equip_items = 2;  // 装备
  int64 total_gamble_cnt           = 3;  // 总的可翻牌
  int64 already_gamble_cnt         = 4;  // 已经翻牌次数
  repeated corepb.Item prob_items  = 5;  // 概率获得的奖励，客户端需要再右上角飘奖励，单独放一个列表
  int64 box_index                  = 6;  // 透传index
  FightRecord fight_record         = 7;  // 里面只有 boxes 字段有赋值
}

message SweepRewardsRequest {}

message SweepRewardsResponse {
  repeated corepb.Item base_items  = 1;  // 基础掉落（右上角飘的奖励）
  repeated corepb.Item equip_items = 2;  // 装备
  int64 cur_level                  = 3;
  int64 role_level                 = 4;
  corepb.FightResultType result    = 5;  // 战斗结果
  GambleBoxInfo equip_gamble_info  = 6;  // 装备付费宝箱信息
  // zonepb.GambleBoxInfo runes_gamble_info = 7;  // [Deprecated] 符石付费宝箱信息
  int64 pay_rewards_count  = 8;  // 奖励之中，氪金奖励的数量
  FightRecord fight_record = 9;  // 里面只有 boxes 字段有赋值
}

service SSSecretFieldService {
  // 获取战力和等级
  rpc GetRoleInfo(GetRoleInfoRequest) returns (GetRoleInfoResponse);
  // 获取当前的dungeonid
  rpc GetSfRoomInfo(GetSfRoomInfoRequest) returns (GetSfRoomInfoResponse);
  // 上报逃跑
  rpc ReportPlayerEscape(ReportPlayerEscapeRequest) returns (ReportPlayerEscapeResponse);
  // 查询幸运出航日剩余翻倍次数
  rpc GetLuckDailyDoubleTimes(GetLuckDailyDoubleTimesRequest) returns (GetLuckDailyDoubleTimesReply);
  // 是否需要清理背包
  rpc SSIsBagNeedClean(SSIsBagNeedCleanRequest) returns (SSIsBagNeedCleanResponse);
}

message SSIsBagNeedCleanRequest {
  int64 level = 1;  // 层数
  int64 times = 2;  // 挑战次数
}

message SSIsBagNeedCleanResponse {
  int64 need_clean_count = 1;  // 需要清理的装备数量
}

message GetRoleInfoRequest {}

message GetRoleInfoResponse {
  int64 capacity = 1;  // 战力
  int64 level    = 2;  // 战力匹配的关卡
}

message GetSfRoomInfoRequest {
  int64 game_level = 1;  // 房间等级，用于zone check是否合规
}

message GetSfRoomInfoResponse {
  int64 dungeon_id  = 1;  // 关卡ID
  int64 gameplay_id = 2;  // gameplay_id
}

message ReportPlayerEscapeRequest {}

message ReportPlayerEscapeResponse {}

// 战斗开始的自定义数据
message GameStartCustomData {
  string room_id   = 1;  // 房间ID
  int64 drop_level = 2;  // 关卡Level
}

// 战斗结束的自定义数据
message GameOverCustomData {
  string room_id   = 1;  // 房间ID
  int64 drop_level = 2;  // 关卡Level
  int64 boss_id    = 3;  // bossid
}

message RecordGuideShownRequest {
  int64 level = 1;  // 层数
}

message RecordGuideShownResponse {}

// 秘境的FightDataReply里的custom_data
message FightDataRequestExt {
  int64 game_level = 1;  // 秘境层数
  int64 times      = 2;  // 挑战次数
}

// 秘境的FightDataRequest里的custom_data
message FightDataReplyExt {
  DungeonInfo dungeon_info = 1;
  int64 equipment_score    = 2;
  bool is_first_play       = 3;
}

message DungeonInfo {
  int64 boss_id                   = 1;  // 随机出来的bossID
  int64 dungeon_id                = 2;  // 随机出来的dungeonID
  repeated int64 exclude_boss_ids = 3;  // 希望排除的bossID列表
}

message SwitchMultiRewardRequest {
  bool is_open = 1;  // 是否开启
}

message SwitchMultiRewardResponse {}

message GetLuckDailyDoubleTimesRequest {}

message GetLuckDailyDoubleTimesReply {
  int64 double_times = 1;  // 剩余翻倍次数
}

message SweepByPrivateSecretaryRequest {}

message SweepByPrivateSecretaryResponse {
  repeated corepb.Item base_items  = 1;  // 基础掉落（右上角飘的奖励）
  repeated corepb.Item equip_items = 2;  // 装备
  int64 cur_level                  = 3;
  int64 role_level                 = 4;
  corepb.FightResultType result    = 5;  // 战斗结果
  GambleBoxInfo equip_gamble_info  = 6;  // 装备付费宝箱信息
  // zonepb.GambleBoxInfo runes_gamble_info = 7;  // [Deprecated] 符石付费宝箱信息
  int64 pay_rewards_count  = 8;  // 奖励之中，氪金奖励的数量
  FightRecord fight_record = 9;  // 如果有奖励才有，且里面只有 boxes 字段有赋值
}

message GambleBoxInfo {
  int64 max_gamble_cnt              = 1;
  repeated corepb.Item gamble_cost  = 2;  // 每次翻牌对应的消耗
  repeated corepb.Item extra_awards = 3;  // 单次翻牌的额外奖励
  repeated corepb.Item prob_awards  = 4;  // 翻牌可概率获得的奖励（给客户端展示用）
}