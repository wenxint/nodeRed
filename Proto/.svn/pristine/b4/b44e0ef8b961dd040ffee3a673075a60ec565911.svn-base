// cs protocol
syntax = "proto3";

package friendpb;
option go_package = "git.woa.com/red/friendsvr/pkg/proto/friendpb";

import "corepb/common.proto";
import "corepb/fight_common.proto";

service FriendService {
  // 登录回调
  rpc OnLogin(Empty) returns (Empty);

  // 获取游戏好友列表
  rpc GetGameFriends(GetGameFriendRequest) returns (GetGameFriendsResponse);
  // 获取平台好友列表
  rpc GetPlatFriends(GetPlatFriendRequest) returns (GetPlatFriendsResponse);

  // 请求添加好友
  rpc AddFriend(AddFriendRequest) returns (Empty);
  // 删除好友
  rpc DeleteFriend(DeleteFriendRequest) returns (Empty);

  // 获取好友请求列表
  rpc GetNewFriends(Empty) returns (GetNewFriendsResponse);
  // 接受好友申请
  rpc AcceptNewFriend(AcceptNewFriendRequest) returns (Empty);
  // 接受所有好友申请
  rpc AcceptAllNewFriends(AcceptAllNewFriendsRequest) returns (AcceptAllNewFriendsReply);
  // 清空申请列表
  rpc ClearAllNewFriends(ClearAllNewFriendsRequest) returns (Empty);
  // 拒绝好友请求
  rpc DeclineNewFriend(DeclineNewFriendRequest) returns (Empty);
  // 获取本人申请列表
  rpc GetMyInvitions(Empty) returns (GetMyInvitionsResponse);

  // 获得好友在线数/好友总数/若干好友信息
  rpc GetSummaryInfo(GetSummaryInfoRequest) returns (GetSummaryInfoResponse);

  // 获取黑名单
  rpc GetBlackList(GetBlackListRequest) returns (GetBlackListResponse);
  // 加入黑名单
  rpc AddBlacklist(AddBlacklistRequest) returns (Empty);
  // 删除黑名单
  rpc DelBlacklist(DelBlacklistRequest) returns (Empty);

  // 搜索好友（按 gid 或按名称模糊搜索）
  rpc SearchFriend(SearchFriendRequest) returns (SearchFriendResponse);
  // 获取推荐
  rpc GetRecommendFriend(Empty) returns (RecommendFriendResponse);
  // 清空推荐
  rpc ClearRecommendFriend(Empty) returns (Empty);
}

message Empty {}

message GameFriendBrief {
  int64 gid                                  = 1;
  string openID                              = 2;
  bytes name                                 = 3;
  int64 fc                                   = 4;
  uint32 zoneID                              = 5;
  int64 last_login_ts                        = 6;                       // 上次登录时间戳
  bytes plat_name                            = 7;                       // 平台名称
  bool is_online                             = 9;                       // 是否在线
  int64 level                                = 10;                      // 等级
  bool is_platfriend                         = 12;                      // 是否通过平台好友添加
  string plat_pic                            = 13;                      // 平台头像
  repeated int64 open_systems                = 14;                      // 系统开启信息
  int64 add_timestamp                        = 15;                      // 添加时间
  PVPLadder pvp_ladder_info                  = 16;                      // pvp详情
  repeated int64 flags                       = 17;                      // 好友标签:  暂时不实装
  corepb.DressInfo dress_info                = 18 [deprecated = true];  // 装扮信息
  corepb.RobotInfo robot_info                = 19;                      // 机器人信息
  corepb.PersonalDisplayInfo personal_info   = 20;                      // 个人显示信息
  bool is_allow_observe                      = 21;                      // 是否允许观战pvp
  repeated corepb.OpenActInfo open_act_infos = 22;                      // 活动开启列表
}

message PVPLadder {
  int64 score = 1;  // pvp分数
}

message AcceptAllNewFriendsRequest {
  repeated int64 gids = 1;  // 申请者gid
}

message AcceptAllNewFriendsReply {
  int64 add_count = 1;  // 成功加好友的申请数量
}

message ClearAllNewFriendsRequest {
  repeated int64 gids = 1;  // 申请者gid
}

message GetGameFriendRequest {
  int64 index = 1;  // 开始位置
  int64 len   = 2;  // 获取长度
}

message GetGameFriendsResponse {
  repeated GameFriendBrief friends = 1;
  int64 total_size                 = 2;  // 好友总数
  int64 cur_index                  = 3;  // 当前开始位置，和请求中的 index 一致
  int64 game_friend_limit          = 4;  // 好友数量上限
}

message GetPlatFriendRequest {
  int64 index = 1;  // 开始位置
  int64 len   = 2;  // 获取长度
}

message GetPlatFriendsResponse {
  repeated GameFriendBrief friends = 1;
  int64 total_size                 = 2;  // 好友总数
  int64 cur_index                  = 3;  // 当前开始位置，和请求中的 index 一致
}

message GetBlackListRequest {
  int64 index = 1;  // 开始位置
  int64 len   = 2;  // 获取长度
}

message GetBlackListResponse {
  repeated GameFriendBrief friends = 1;
  int64 total_size                 = 2;  // 黑名单总数
  int64 cur_index                  = 3;  // 当前开始位置，和请求中的 index 一致
}

message AddFriendRequest {
  int64 gid            = 1;
  repeated int64 flags = 2;  // 添加好友标签
}

message NewFriend {
  int64 id                  = 1;  // 本次加好友申请的 id
  GameFriendBrief applicant = 2;  // 本次申请的发起人的 gid
  int64 target_gid          = 3;  // 被申请人 gid （后台要用）
  int64 ts                  = 4;  // 发起申请的时间戳
  repeated int64 flags      = 5;  // 添加好友标签
}

message GetNewFriendsResponse {
  repeated NewFriend new_friends = 1;
}

message GetMyInvitionsResponse {
  repeated NewFriend my_invition = 1;
}

message AcceptNewFriendRequest {
  int64 gid = 1;  // 申请者 id
}

message AddBlacklistRequest {
  int64 gid                   = 1;  // 玩家 Gid
  corepb.RobotInfo robot_info = 2;  // 机器人信息
}

message DelBlacklistRequest {
  int64 gid = 1;
}

message DeclineNewFriendRequest {
  int64 gid = 1;
}

message DeleteFriendRequest {
  int64 gid = 1;
}

message RefreshFriendsNtf {}

message GetSummaryInfoRequest {}

message GetSummaryInfoResponse {
  int64 friends_total_num          = 1;
  int64 friends_online_num         = 2;
  repeated GameFriendBrief friends = 3;  // 目前只返回第一个在线好友的
}

message SearchFriendRequest {
  string match_str = 3;  // gid或名字模糊搜索
}

message RecommendFriend {
  GameFriendBrief brief = 1;
  bool is_friend        = 3;
  repeated int32 types  = 4;  // 1-组队 2-聊天 ...
  bool is_invited       = 5;  // 是否被邀请
}

message SearchFriendResponse {
  repeated RecommendFriend friends = 2;
}

message RecommendFriendResponse {
  repeated RecommendFriend recommend_friends = 1;
}
