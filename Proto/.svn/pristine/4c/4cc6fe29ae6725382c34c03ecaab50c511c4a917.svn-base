// cs protocol
syntax = "proto3";

package mailpb;
option go_package = "git.code.oa.com/red/mailsvr/pkg/proto/mailpb";

import "corepb/common.proto";

// 有新邮件时主动推送的 ntf 内容
message NewMailNtf {
  string id      = 1;  // 邮件 ID
  string subject = 2;  // 邮件标题
}

// 用于客户端调用的服务接口
service CSService {
  rpc QueryMailPreviews(QueryMailPreviewsRequest) returns (QueryMailPreviewsReply);                                         // 获取邮件缩略信息
  rpc QueryMail(QueryMailRequest) returns (QueryMailReply);                                                                 // 读取邮件
  rpc SetRead(SetReadRequest) returns (SetReadReply);                                                                       // 设置已读状态（奖励邮件需要用 ClaimRewards）
  rpc ClaimRewards(ClaimRewardsRequest) returns (ClaimRewardsReply);                                                        // 领取邮件奖励
  rpc ClaimRewardsFromUnclaimedMails(ClaimRewardsFromUnclaimedMailsRequest) returns (ClaimRewardsFromUnclaimedMailsReply);  // 一键领取所有未领奖励邮件
  rpc DeleteAllReadMails(DeleteAllReadMailsRequest) returns (DeleteAllReadMailsReply);                                      // 一键删除已读邮件
  rpc DeleteMail(DeleteMailRequest) returns (DeleteMailReply);                                                              // 删除邮件
}

// 邮件信息
message Mail {
  string id                    = 1;   // 邮件 ID
  int64 create_at              = 2;   // 创建/发送时间，unix 时间戳（秒级）
  int64 expire_at              = 3;   // 过期时间，同上
  string from_sid              = 4;   // 发送方 SID，格式为 SYSTEM:N1:N2:N3:N4:N5，后面的 N1-N5 在领奖时会作为 reasons
  string subject               = 5;   // 标题
  string content               = 6;   // 内容
  string redirect_system       = 7;   // 若不为空，跳转到系统的 ID
  string redirect_website      = 8;   // 若不为空，跳转到网页的 URL
  repeated corepb.Item rewards = 9;   // 奖励附件，不为空说明有奖励
  bool read                    = 10;  // 是否已读/已领取奖励
  string from_name             = 12;  // 发送方昵称
  bool no_redpoint             = 13;  // 是否不显示红点
  int64 could_claim_at         = 14;  //可以领取奖励的时间，unix 时间戳(秒级)
  bool special                 = 15;  // 是否为特殊邮件
}

// 邮件缩略信息
message MailPreview {
  string id            = 1;   // 邮件 ID
  int64 create_at      = 2;   // 创建/发送时间，unix 时间戳（秒级）
  int64 expire_at      = 3;   // 过期时间，同上
  string from_sid      = 4;   // 发送方 SID。SID 目前设计值有 "SYSTEM"（系统邮件）与 "PLAYER:<GID>"（玩家，如 "PLAYER:1112"）
  string subject       = 5;   // 标题
  bool hasRewards      = 6;   // 是否有奖励
  bool read            = 7;   // 是否已读/已领取奖励
  string from_name     = 9;   // 发送方昵称
  bool no_redpoint     = 10;  // 是否不显示红点
  int64 could_claim_at = 11;  //可以领取奖励的时间，unix 时间戳(秒级)
  bool special         = 12;  // 是否为特殊邮件
}

message QueryMailPreviewsRequest {
  int64 limit = 1;  // 分页设置，最多一次返回邮件数
  int64 skip  = 2;  // 分页设置，跳过前多少封邮件
}

message QueryMailPreviewsReply {
  repeated MailPreview mail_previews = 1;  // 当前页邮件缩略信息列表
  int64 total                        = 2;  // 玩家总共邮件数
  int64 total_unread                 = 3;  // 玩家总共未读邮件数
  int64 nearest_expired_at           = 4;  // 玩家最近一封过期邮件的过期时间，unix 时间戳（秒级）
}

message QueryMailRequest {
  string id = 1;  // 邮件 ID
}

message QueryMailReply {
  Mail mail = 1;
}

message SetReadRequest {
  repeated string ids = 1;  // 要设置已读的邮件 ID 列表
  bool read           = 2;  // 设置为已读或者未读
}

message SetReadReply {}

message ClaimRewardsRequest {
  string id                                           = 1;  // 要领取奖励的邮件 ID
  repeated corepb.GiftSelectedItem gift_selected_item = 2;  // 可选礼包选中的道具。按照附件中道具的顺序，如果是可选礼包，依次填充礼包的选中道具
}

message ClaimRewardsReply {
  repeated corepb.Item rewards = 1;  // 领取到了哪些奖励提示
}

message ClaimRewardsFromUnclaimedMailsRequest {}

message ClaimRewardsFromUnclaimedMailsReply {
  repeated string unclaimable_mail_ids = 1;
  repeated corepb.Item rewards         = 2;  // 领取到了哪些奖励提示
}

message DeleteAllReadMailsRequest {}

message DeleteAllReadMailsReply {
  int64 deleted_count = 1;
}

message DeleteMailRequest {
  string id = 1;  // 要删除的邮件 ID
}

message DeleteMailReply {}
