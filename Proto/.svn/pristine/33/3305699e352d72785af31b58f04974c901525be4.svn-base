// cs protocol
syntax = "proto3";

package guildpb.inperudaunpb;

option go_package = "git.woa.com/red/guildsvr/pkg/proto/guildpb/inperudaunpb";


import "corepb/common.proto";
import "corepb/fight_common.proto";

import "pkg/proto/guildpb/api.proto";

// 勇闯推进城2.0服务
service InperuDaunService {
  // CheckOpen 检查是否开启
  rpc CheckOpen(CheckOpenRequest) returns (CheckOpenReply);
  // InperuInfo 获取推进城信息
  rpc InperuInfo(InperuInfoRequest) returns (InperuInfoReply);
  // StartFight 开始战斗
  rpc StartFight(StartFightRequest) returns (StartFightReply);
  // FinishFight 结束战斗
  rpc FinishFight(FinishFightRequest) returns (FinishFightReply);
  // Raid 快速扫荡
  rpc Raid(RaidRequest) returns (RaidReply);
  // RecordInfo 获取贡献记录
  rpc RecordInfo(RecordInfoRequest) returns (RecordInfoReply);
  // GuildRanks 获取同盟伤害排行榜
  rpc GuildRanks(GuildRanksRequest) returns (GuildRanksReply);
  // PlayerRanks 获取玩家伤害排行榜
  rpc PlayerRanks(PlayerRanksRequest) returns (PlayerRanksReply);
  // RewardInfo 获取奖励预览信息
  rpc RewardInfo(RewardInfoRequest) returns (RewardInfoReply);
  // DrawReward 领取个人挑战奖励
  rpc DrawReward(DrawRewardRequest) returns (DrawRewardReply);
  // TimesPrice 获取购买次数价格
  rpc TimesPrice(TimesPriceRequest) returns (TimesPriceReply);
  // BuyTimes 购买挑战次数
  rpc BuyTimes(BuyTimesRequest) returns (BuyTimesReply);
  // ConfirmPeakInfo 确认已经播放巅峰同盟
  rpc ConfirmPeakInfo(ConfirmPeakInfoRequest) returns (ConfirmPeakInfoReply);
  // SeenTheBoss 确认已经看过首领
  rpc SeenTheBoss(SeenTheBossRequest) returns (SeenTheBossReply);
}

message CheckOpenRequest {}

message CheckOpenReply {}

message InperuInfoRequest {}

enum Stage {
  INPERU_STAGE_UNKNOWN = 0;
  ELITE                = 1;  // 精英关阶段
  BOSS                 = 2;  // 首领关阶段
}

message EliteInfo {
  int64 level_id                       = 1;  // 关卡ID
  int64 max_level_id                   = 2;  // 最大关卡ID
  int64 hp_remain                      = 3;  // 剩余血量
  int64 hp_total                       = 4;  // 总血量
  repeated corepb.Item rewards_preview = 5;  // 奖励预览
  int64 raid_damage                    = 6;  // 如果扫荡会造成的伤害
  ChallengeTimes challenge_times       = 7;  // 挑战次数信息
}

message BossInfo {
  int64 level_id                 = 1;  // 关卡ID
  int64 guild_damage             = 2;  // 同盟伤害
  int64 guild_rank               = 3;  // 同盟排名
  int64 raid_damage              = 4;  // 如果扫荡会造成的伤害
  ChallengeTimes challenge_times = 5;  // 挑战次数信息
  bool first_seen                = 6;  // 是否首次见到
}

message ChallengeTimes {
  int64 remain_times = 1;  // 剩余可用挑战次数
  int64 max_times    = 2;  // 最大挑战次数
  int64 bought_times = 3;  // 已购买挑战次数
  bool can_buy_more  = 4;  // 是否可以购买挑战次数
}

message InperuInfo {
  Stage stage          = 1;  // 当前阶段
  EliteInfo elite_info = 2;  // 精英关信息, 当前阶段为精英关时有效
  BossInfo boss_info   = 3;  // 首领关信息, 当前阶段为首领关时有效
}

message InperuInfoReply {
  InperuInfo inperu_info             = 1;  // 推进城信息
  repeated GuildRankInfo peak_guilds = 2;  // 巅峰同盟信息, 如果存在需要展示巅峰同盟
}

message StartFightRequest {
  int64 level_id = 1;  // 关卡ID, ElieInfo 或者 BossInfo 中的 level_id
}

message StartFightReply {
  corepb.GameStartMessage start_message = 1;  // 游戏开始消息
}

// 纯客户端副本战斗结束时客户端上报的通用信息，放到同一个message中吧
message PVEReport {
  int64 fight_time                          = 1;   // 实际战斗时长，不包括暂停这些
  int64 real_fight_time                     = 2;   // 从加载成功到战斗结束经过的时长
  bool is_auto_fight                        = 3;   // 是否是自动战斗
  int64 dead_times                          = 4;   // 死亡次数
  int64 revive_times                        = 5;   // 复活次数
  int64 dial_used_cnt                       = 6;   // 空岛贝使用次数
  int64 damage                              = 7;   // 总伤害
  bool success                              = 8;   // 是否通关
  int64 dungeon_id                          = 9;   // 副本ID
  bytes dungeon_record_bytes                = 10;  // 对局数据，优先取这个
  int64 monster_kills                       = 11;  // 击杀怪物数量
  corepb.PlayerFightActDetail fight_detail  = 12;  // 客户端统计的战斗动作详情
  corepb.MonsterFightActDetail monster_info = 13;  // 怪物信息上报
}

message FinishFightRequest {
  int64 level_id   = 1;  // 关卡ID, ElieInfo 或者 BossInfo 中的 level_id
  PVEReport report = 2;  // 战斗结果
}

message SettleInfo {
  int64 current_damage     = 1;  // 当前战斗伤害
  int64 total_damage       = 2;  // 总战斗伤害
  int64 remain_hp          = 3;  // 怪物剩余血量(如果是数量继承类型，此处为剩余怪物数量)
  int64 total_hp           = 4;  // 怪物总血量(如果是数量继承类型，此处为怪物总数量)
  int64 guild_total        = 5;  // 同盟总伤害(仅首领关有效)
  int64 rank_before        = 6;  // 战斗前同盟排名(仅首领关有效)
  int64 rank_after         = 7;  // 战斗后同盟排名(仅首领关有效)
  int64 player_rank_before = 8;  // 战斗前玩家排名(仅首领关有效)
  int64 player_rank_after  = 9;  // 战斗后玩家排名(仅首领关有效)
}

message FinishFightReply {
  corepb.GameOverMessage over_message = 1;  // 游戏结束消息
  InperuInfo inperu_info              = 2;  // 更新后的推进城信息
  SettleInfo settle_info              = 3;  // 结算信息
}

message RaidRequest {
  int64 level_id = 1;  // 关卡ID, ElieInfo 或者 BossInfo 中的 level_id
}

message RaidReply {
  InperuInfo inperu_info = 1;  // 更新后的推进城信息
  SettleInfo settle_info = 2;  // 结算信息
}

message RecordInfoRequest {}

message DamageRecord {
  int64 rank         = 1;  // 排名
  int64 gid          = 2;  // 玩家 gid
  string name        = 3;  // 玩家名
  guildpb.Role role  = 4;  // 同盟职位
  int64 elite_damage = 5;  // 精英关伤害
  int64 boss_damage  = 6;  // 首领关伤害
}

message RecordInfoReply {
  repeated DamageRecord records = 1;  // 伤害贡献记录
}

message GuildRanksRequest {}

message GuildRankInfo {
  int64 rank         = 1;  // 同盟排名
  int64 guild_id     = 2;  // 同盟 gid
  string guild_name  = 3;  // 同盟名
  int64 guild_level  = 4;  // 同盟等级
  string leader_name = 5;  // 同盟团长名
  int64 damage       = 6;  // 伤害
  int64 guild_flag   = 7;  // 同盟旗帜
}

message GuildRanksReply {
  repeated GuildRankInfo guild_ranks = 1;  // 同盟排名
  GuildRankInfo my_rank              = 2;  // 我的排名
}

message PlayerRanksRequest {
  int64 rank_begin = 1;  // 排名开始(查询范围，包含该排名，从 1 开始)
  int64 rank_end   = 2;  // 排名结束(查询范围，包含该排名，从 1 开始)
}

message PlayerRankInfo {
  int64 rank                              = 1;  // 玩家排名
  int64 gid                               = 2;  // 玩家 gid
  int64 damage                            = 3;  // 伤害
  corepb.PersonalDisplayInfo display_info = 4;  // 玩家展示信息
  string guild_name                       = 5;  // 所属同盟名
  bool is_ranking_anonymous               = 6;  // 是否匿名
}

message PlayerRanksReply {
  repeated PlayerRankInfo player_ranks = 1;  // 玩家排名
  PlayerRankInfo my_rank               = 2;  // 我的排名
}

message RewardInfoRequest {}

message PersonalTask {
  int64 id                    = 1;  // 挑战任务ID
  int64 progress              = 2;  // 挑战任务进度
  int64 max_progress          = 3;  // 挑战任务最大进度
  repeated corepb.Item reward = 4;  // 挑战任务奖励
  bool available              = 5;  // 是否可领取
  bool drawed                 = 6;  // 是否已领取
}

message RankReward {
  int64 id                     = 1;  // 排名奖励ID
  int64 rank_need              = 2;  // 需要的排名
  repeated corepb.Item rewards = 3;  // 排名奖励
}

message RewardInfoReply {
  repeated PersonalTask personal_tasks     = 1;  // 个人挑战任务信息
  repeated RankReward rank_rewards_preview = 2;  // 排名奖励信息预览
}

message DrawRewardRequest {
  repeated int64 task_ids = 1;  // 需要领取的任务ID列表，支持批量领取
}

message DrawRewardReply {
  repeated corepb.Item rewards         = 1;  // 领取的奖励
  repeated PersonalTask personal_tasks = 2;  // 更新后的个人挑战任务信息
}

message TimesPriceRequest {
  Stage type = 1;  // 购买类型(精英关或者首领关)
}

message TimesAndPrice {
  int64 times                = 1;  // 购买次数
  repeated corepb.Item price = 2;  // 购买次数价格
}

message TimesPriceReply {
  repeated TimesAndPrice times_and_price = 1;  // 购买次数和价格
}

message BuyTimesRequest {
  int64 buy_times = 1;  // 购买次数
  Stage type      = 2;  // 购买类型(精英关或者首领关)
}

message BuyTimesReply {
  ChallengeTimes challenge_times = 1;  // 更新后的挑战次数信息
}

message ConfirmPeakInfoRequest {}

message ConfirmPeakInfoReply {}

message SeenTheBossRequest {}

message SeenTheBossReply {}

// 如果客户端收到这个消息，需要终止战斗，回到推进城界面
message AbortFightNotify {
  int64 level_id   = 1;  // 关卡ID
  int64 error_code = 2;  // 错误码，即终止原因
}
