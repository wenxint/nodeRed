// cs protocol
syntax = "proto3";

package actpb.act0149pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0149pb";

import "corepb/common.proto";
import "corepb/loadout_comm.proto";
import "corepb/fight_common.proto";
import "pkg/proto/actpb/commonpb/common.proto";

service CSAct0149Service {
  rpc BattleRecordQuery(BattleRecordQueryRequest) returns (BattleRecordQueryReply);
}

message ActGetDetailRequest {}

message TaskDetail {
  int64 unlocked_timestamp = 1;  // 任务解锁时间戳（0 表示已经解锁）
  actpb.commonpb.Task task = 2;  // 任务基本信息
}

message ActGetDetailReply {
  int64 current_day         = 1;  // 当前进行天数
  repeated TaskDetail tasks = 2;  // 所有任务详细信息

  message MatchTimeConfig {
    int64 start_hour = 1;  // 开始时间(24小时制)
    int64 end_hour   = 2;  // 结束时间(24小时制)
  }
  MatchTimeConfig match_time_config = 3;  // 匹配时间配置
}

message ActDeliverRewardRequest {}

message ActDeliverRewardReply {}

message BattleRecordQueryRequest {}

message BattlePlayerInfo {
  int64 gid                                          = 1;  // 对局的玩家ID
  corepb.PersonalDisplayInfo player_info             = 2;  // 玩家信息
  repeated corepb.LoadoutBuddyChoice buddies_choices = 3;  // 对局玩家选择的阵容
  corepb.RobotInfo robot_info                        = 4;  // 机器人信息
}

message BattleRecordInfo {
  corepb.FightResultType battle_result   = 1;  // 对局结果
  repeated BattlePlayerInfo self_player  = 2;  // 玩家自己的对局信息
  repeated BattlePlayerInfo rival_player = 3;  // 对手的对局信息
  int64 battle_end_time                  = 4;  // 对局结束时间 秒级时间戳(s)
  int64 result_param                     = 5;  // 如果result为win且result_param为1表示完胜 如果result为lose且result_param为1表示完败 其他情况则为普通的胜负平
}

message BattleRecordQueryReply {
  repeated BattleRecordInfo battle_record_infos = 1;  // 战报信息
}

// 以下消息仅后端服务内部使用

// 战斗数据
message FightData {
  int64 hidden_score = 1;  // 隐藏分
}

// 游戏结束消息自定义数据
message GameOverMsgCustomData {
  map<int64, int64> score_info = 1;  // 分数信息 gid -> score
}
