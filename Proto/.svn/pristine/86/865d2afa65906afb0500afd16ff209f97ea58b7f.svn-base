// cs protocol
syntax = "proto3";

package roompb.secretfieldpb;
option go_package = "git.woa.com/red/roomsvr/pkg/proto/roompb/secretfieldpb";


// 用于客户端调用的服务接口
// 均需要在 metadata 里带上 "x-room-id: 房间ID"
service Service {
  rpc NotifyReady(NotifyReadyRequest) returns (NotifyReadyReply);                                      // 提醒其他玩家准备
  rpc StartGame(StartGameRequest) returns (StartGameReply);                                            // 开战
  rpc SetChallengeCount(SetChallengeCountRequest) returns (SetChallengeCountReply);                    // 设置挑战次数
  rpc GetSettleChallengeCount(GetSettleChallengeCountRequest) returns (GetSettleChallengeCountReply);  // 获取剩余挑战次数（只能在结算时调用）
}

message InviteMessage {
  int64 game_level      = 1;  // 秘境等级
  int64 challenge_count = 2;  // 挑战次数
}

message NotifyReadyRequest {}

message NotifyReadyReply {}

message NotifyReadyNtf {
  string room_id = 1;
}

message StartGameRequest {}
message StartGameReply {}

message SetChallengeCountRequest {
  int64 count = 1;  // 挑战次数
}

message SetChallengeCountReply {}

message GetSettleChallengeCountRequest {}

message GetSettleChallengeCountReply {
  map<int64, int64> player_details = 1;  // 各玩家剩余挑战次数
  map<int64, int64> gid_win_counts = 2;  // 各玩家通关次数
}