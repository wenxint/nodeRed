// cs protocol
syntax = "proto3";

package guildpb.prayhousepb;

option go_package = "git.woa.com/red/guildsvr/pkg/proto/guildpb/prayhousepb";


import "corepb/common.proto";
import "google/protobuf/empty.proto";
import "pkg/proto/guildpb/api.proto";

// 同盟祈福服务
service GuildPrayHouseService {
  rpc QueryPrayInfo(QueryPrayInfoRequest) returns (QueryPrayInfoReply);                             // 查询指定祈愿信息
  rpc QueryPrayInfos(QueryPrayInfosRequest) returns (QueryPrayInfosReply);                          // 查询祈愿信息
  rpc RemoveMigrationPrayTag(RemoveMigrationPrayTagRequest) returns (RemoveMigrationPrayTagReply);  // 移除新迁移的征集标记
  rpc PrayChips(PrayChipsRequest) returns (PrayChipsReply);                                         // 发布祈愿信息
  rpc DonateChip(DonateChipRequest) returns (DonateChipReply);                                      // 捐赠伙伴碎片
  rpc QueryDonateChipReward(QueryDonateChipRewardRequest) returns (QueryDonateChipRewardReply);     // 查询捐赠奖励
  rpc SeekHelpForPrayer(SeekHelpForPrayerRequest) returns (SeekHelpForPrayerReply);                 // 祈愿求助
  rpc AcceptChips(google.protobuf.Empty) returns (AcceptChipsReply);                                // 尝试领取别人捐赠的碎片
  rpc QueryDonateInfos(google.protobuf.Empty) returns (QueryDonateInfosReply);  // [Deprecated] 查询捐赠信息, 建议用下面三个协议，分别是查询获赠记录、查询同盟动态、查询捐赠排行
  rpc ChipInReturnMenu(ChipInReturnMenuRequest) returns (ChipInReturnMenuReply);                 // 回赠情报页面
  rpc PrayTaskInfo(PrayTaskInfoRequest) returns (PrayTaskInfoReply);                             // 情报屋任务详情
  rpc ReceivePrayTask(ReceivePrayTaskRequest) returns (ReceivePrayTaskReply);                    // 领取情报屋任务奖励
  rpc BatchReceivePrayTask(BatchReceivePrayTaskRequest) returns (BatchReceivePrayTaskReply);     // 批量领取情报屋任务奖励
  rpc QueryMyselfDonateInfo(QueryMyselfDonateInfoRequest) returns (QueryMyselfDonateInfoReply);  // 查询自己的获赠记录(注意：这里只是获赠记录)
  rpc QueryGuildDonateInfo(QueryGuildDonateInfoRequest) returns (QueryGuildDonateInfoReply);  // 查询同盟动态（注意：通过参数可以控制是查同盟所有成员的，还是只关联自己的）
  rpc QueryDonateRankInfo(QueryDonateRankInfoRequest) returns (QueryDonateRankInfoReply);  // 获取捐赠排行
}

// 祈愿信息
message PrayInfo {
  int64 pray_id                           = 1;   // 祈愿情报唯一标识
  guildpb.MemberInfo prayer_info          = 2;   // 祈愿者信息
  int64 item_id                           = 3;   // 祈愿伙伴id或者道具
  int64 need_count                        = 4;   // 祈愿数量
  int64 received_count                    = 5;   // 已获得数量
  PrayInfoStatus status                   = 6;   // 祈愿状态
  int64 pray_time                         = 7;   // 祈愿发布时间(unix second)
  repeated guildpb.MemberInfo donor_infos = 8;   // 捐赠者信息
  int64 expire_time                       = 9;   // 祈愿过期时间(unix second)
  int64 cd_end_time                       = 10;  // 【求助】cd结束时间(unix second)
  bool need_limit_ss_card                 = 11;  // true-表示需要招募限时SS卡后才可助力
  int64 limit_ss_card_id                  = 12;  // 限时SS卡id, 如果need_limit_ss_card为true且limit_ss_card_id非0并且该伙伴未招募，则不可助力
  repeated corepb.Item donate_ext_costs   = 13;  // 捐赠额外消耗
  repeated int64 normal_ss_card_ids       = 14;  // 常规SS卡id，当need_limit_ss_card为true时，如果normal_ss_card_ids有值就用normal_ss_card_ids，没有就用limit_ss_card_id
}

// 祈愿状态
enum PrayInfoStatus {
  MYSELF_PRAY    = 0;  // 我的祈愿
  NEVER_DONATED  = 1;  // 未捐赠过
  ALREADY_DONATE = 2;  // 已捐赠
  EXPIRE         = 3;  // 已过期
}

enum ReturnChipStatus {
  STATUS_UNKNOWN = 0;  // 未知
  CANT_RETURN    = 1;  // 不能回赠
  CAN_RETURN     = 2;  // 可以回赠
  ALREADY_RETURN = 3;  // 已经回赠
}

// 捐赠信息
message DonateInfo {
  guildpb.MemberInfo prayer_info      = 1;  // 受赠者信息
  guildpb.MemberInfo donor_info       = 2;  // 捐赠者信息
  int64 item_id                       = 3;  // 道具id
  int64 donate_count                  = 4;  // 捐赠数量
  int64 donate_time                   = 5;  // 捐赠时间
  ReturnChipStatus return_chip_status = 6;  // 回赠状态
}

// 捐赠排行信息
message DonateRankInfo {
  int64 rank                     = 1;  // 排名
  guildpb.MemberInfo player_info = 2;  // 玩家信息
  int64 donate_count             = 3;  // 捐赠数量
}

// 查询指定祈愿信息
message QueryPrayInfoRequest {
  int64 pray_id = 1;  // 祈愿ID
}

message QueryPrayInfoReply {
  PrayInfo pray_info = 1;  // 祈愿信息
}

// 祈愿信息查询请求
message QueryPrayInfosRequest {
  int64 chip_quality = 1;  // 碎片品质
}

// 祈愿信息查询响应
message QueryPrayInfosReply {
  repeated PrayInfo pray_infos = 1;  // 祈愿信息列表(按照我的祈愿、可捐赠、碎片不足、已捐赠排序)
  //   reserved 2, 3;
  repeated int64 banned_buddy_id = 4;  // 禁止征集伙伴 ID
  int64 remain_donate_count      = 5;  // 剩余捐赠次数
  int64 remain_pray_count        = 6;  // 剩余祈愿次数
  int64 max_donate_count         = 7;  // 最大捐赠次数（即每周捐赠次数）
  int64 max_pray_count           = 8;  // 最大祈愿次数（即每周祈愿次数）
  bool new_migration_pray        = 9;  // 是否存在标记：新迁移的征集
}

// 移除新迁移的征集标记请求
message RemoveMigrationPrayTagRequest {}

// 移除新迁移的征集标记响应
message RemoveMigrationPrayTagReply {}

// 发布祈愿请求
message PrayChipsRequest {
  int64 item_id = 1;  // 祈愿伙伴id或者道具ID
}

// 发布祈愿响应
message PrayChipsReply {
  int64 pray_id = 1;  // 祈愿信息id
}

// 捐赠碎片请求
message DonateChipRequest {
  int64 pray_id       = 1;  // 祈愿信息id
  int64 return_to_gid = 2;  // 回赠玩家 gid（非回赠操作不填）
  bool check_only     = 3;  // 是否只做检查不实际捐赠
}

// 捐赠碎片响应
message DonateChipReply {
  repeated corepb.Item awards = 1;  // 捐赠奖励
  PrayInfo pray_info          = 2;  // pray_id所代表的祈愿信息
}

// 查询捐赠奖励
message QueryDonateChipRewardRequest {}

message DonateChipReward {
  int64 quality               = 1;  // 品质
  repeated corepb.Item awards = 2;  // 奖励
  int64 item_id               = 3;  // 只有quality=5时才会有值，表示征集的哪个道具
}

message QueryDonateChipRewardReply {
  repeated DonateChipReward rewards = 1;  // 捐赠奖励
}

// 祈愿求助请求
message SeekHelpForPrayerRequest {
  int64 pray_id = 1;  // 祈愿信息id
}

message SeekHelpForPrayerReply {
  PrayInfo pray_info = 1;  // pray_id所代表的祈愿信息
}

// 领取碎片响应
message AcceptChipsReply {
  repeated DonateInfo donate_infos = 1;  // 捐赠信息（自动领取碎片道具）
  int64 need_chip_count            = 2;  // 需要的碎片个数
  int64 received_chip_count        = 3;  // 已获得碎片个数
  int64 pray_item_id               = 4;  // 祈福的道具ID，伙伴或者招募道具
  repeated corepb.Item rewards     = 5;  // 实际领取的奖励（兼容助力道具的情况）
}

// 碎片可领取推送
message ChipsAcceptableNotify {}

// 查询捐赠记录信息响应
message QueryDonateInfosReply {
  repeated DonateInfo player_donate_infos   = 1;  // 玩家捐赠信息（时间倒序）
  repeated DonateInfo guild_donate_infos    = 2;  // 同盟捐赠信息（时间倒序）
  repeated DonateRankInfo donate_rank_infos = 3;  // 捐赠排行信息列表
}

message ChipInReturnMenuRequest {
  int64 return_to_gid = 1;  // 回赠对象 Gid
}

message ChipInReturnMenuReply {
  PrayInfo pray_infos = 1;  // 回赠对象的祈愿信息
}

message PrayTaskInfoRequest {}

enum TaskStatus {
  UNDONE = 0;  // 不可领奖
  REWARD = 1;  // 可领奖
  FINISH = 2;  // 已领奖
}

message Task {
  int64 id                    = 1;  // 任务 ID
  int64 curr                  = 2;  // 当前完成度
  int64 target                = 3;  // 目标完成度
  TaskStatus status           = 4;  // 任务状态
  repeated corepb.Item awards = 5;  // 任务奖励
}

message PrayTaskInfoReply {
  repeated Task tasks = 1;  // 任务列表
}

message ReceivePrayTaskRequest {
  int64 task_id = 1;  // 任务 ID
}

message ReceivePrayTaskReply {
  Task task = 1;  // 领取后的对应任务
}

message BatchReceivePrayTaskRequest {
  int64 task_id = 1;  // 任务 ID
}

message BatchReceivePrayTaskReply {
  repeated corepb.Item awards = 1;  // 任务奖励
  repeated int64 awarded_ids  = 2;  // 本次领取的奖励的id列表
}

// 求助捐赠动态消息定义
message SeekHelpDynamicMessage {
  // 许愿详细信息
  PrayInfo pray_info = 1;
  // true-表示用于更新，如果在历史记录里找到了相同id的消息，则只更新消息内容不改消息位置；如果在历史记录里没找到，则在当前位置加一条记录
  // false-如果历史记录里找到了相同id的消息则删除它；同时在最新的位置显示这条消息
  bool update_flag = 2;
}

message QueryMyselfDonateInfoRequest {}
message QueryMyselfDonateInfoReply {
  repeated DonateInfo player_donate_infos = 1;  // 玩家获赠信息（时间倒序）
}

message QueryGuildDonateInfoRequest {
  bool only_myself = 1;  // 仅仅自己的动态
}

message QueryGuildDonateInfoReply {
  repeated DonateInfo guild_donate_infos = 1;  // 公会捐赠信息（时间倒序）
}

message QueryDonateRankInfoRequest {}
message QueryDonateRankInfoReply {
  repeated DonateRankInfo donate_rank_infos = 1;  // 捐赠排行信息列表
}
