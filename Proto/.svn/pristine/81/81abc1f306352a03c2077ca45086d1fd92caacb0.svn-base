// cs protocol
syntax = "proto3";

package zonepb.treasurecertpb;

import "corepb/common.proto";

option go_package = "git.code.oa.com/red/zonesvr/pkg/proto/zonepb/treasurecertpb";

// 藏品证书系统服务
service TreasureCertService {
  // // 获取藏品小组信息
  // rpc TreasureGroups(TreasureGroupsRequest) returns (TreasureGroupsReply);
  // // 提升藏品小组等级
  // rpc UpgradeTreasureGroupLevel(UpgradeTreasureGroupLevelRequest) returns (UpgradeTreasureGroupLevelReply);
  // // 领取藏品证书奖励
  // rpc ReceiveTreasureCertReward(ReceiveTreasureCertRewardRequest) returns (ReceiveTreasureCertRewardReply);

  // 获取藏品证书系统信息
  rpc TreasureCertInfo(TreasureCertInfoRequest) returns (TreasureCertInfoReply);
  // 提升藏品证书等级
  rpc UpgradeTreasureCertLevel(UpgradeTreasureCertLevelRequest) returns (UpgradeTreasureCertLevelReply);
}

enum QualityType {
  // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
  INVALID = 0;  // 无效品质
  BLUE    = 1;  // 蓝色品质
  PURPLE  = 2;  // 紫色品质
  ORANGE  = 3;  // 橙色品质
  RED     = 4;  // 红色品质
}

// message TreasureGroupsRequest {}

message TreasureCertInfoRequest {}

message UpgradeTreasureCertLevelRequest {}

message Treasure {
  int64 id       = 1;  // 藏品ID
  bool is_active = 2;  // 是否已激活
}

message Attr {
  corepb.AttributeId id = 1;  // 属性1
  int64 value           = 2;  // 属性1
}

message TreasureCertInfoReply {
  repeated Treasure treasures          = 1;  // 藏品列表 treasure_id -> 是否已激活
  int64 level                          = 2;  // 藏品小组等级
  int64 exp                            = 3;  // 累计藏品值
  repeated Attr attrs                  = 4;  // 玩家属性加成
  int64 next_exp_cost                  = 5;  // 下次升级需要达到的累计藏品值，-1表示已到最高等级，无法再升级
  repeated corepb.Item next_item_costs = 6;  // 下次升级消耗的道具
  repeated Attr next_attrs             = 7;  // 下次升级玩家属性加成
  int64 current_exp_cost               = 8;  // 当前升级需要达到的累计藏品值
}

// message TreasureGroup {
//   int64 id                             = 1;  // 藏品小组ID
//   repeated Treasure treasures          = 2;  // 藏品列表 treasure_id -> 是否已激活
//   int64 level                          = 3;  // 藏品小组等级
//   int64 exp                            = 4;  // 累计藏品值
//   repeated Attr attrs                  = 5;  // 玩家属性加成
//   int64 next_exp_cost                  = 6;  // 下次升级需要达到的累计藏品值，-1表示已到最高等级，无法再升级
//   repeated corepb.Item next_item_costs = 7;  // 下次升级消耗的道具
//   repeated Attr next_attrs             = 8;  // 下次升级玩家属性加成
//   int64 order                          = 9;  // 分组显示顺序
// }

// message TreasureGroupTab {
//   QualityType quality_type               = 1;  // 品质类型
//   repeated TreasureGroup treasure_groups = 2;  // 藏品小组信息
// }

// enum CertStatus {
//   // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
//   UNDONE = 0;  // 不可领奖
//   REWARD = 1;  // 可领奖
//   FINISH = 2;  // 已领奖
// }

// message Cert {
//   int64 id                     = 1;  // 藏品证书ID
//   string name                  = 2;  // 藏品证书名称
//   int64 total_level_threshold  = 3;  // 解锁需要达到的总研究等级
//   repeated corepb.Item rewards = 4;  // 奖励
//   CertStatus status            = 5;  // 证书状态
//   int64 certified_time         = 6;  // 获得证书时间
// }

// message TreasureGroupsReply {
//   repeated TreasureGroupTab treasure_tabs = 1;  // 藏品小组品质页签 QualityType -> 藏品小组列表
//   repeated Cert certs                     = 2;  // 藏品证书列表
// }

// message UpgradeTreasureGroupLevelRequest {
//   int64 treasure_group_id = 1;  // 藏品小组ID
// }

// message UpgradeTreasureGroupLevelReply {
//   int64 level                          = 1;                      // 升级后的等级
//   int64 next_exp_cost                  = 2;                      // 下次升级需要达到的累计藏品值
//   repeated corepb.Item next_item_costs = 3;                      // 下次升级消耗的道具
//   repeated Attr next_attrs             = 4;                      // 下次升级玩家属性加成
//   repeated Cert new_certs              = 5;                      // 新获得的藏品证书
//   repeated Attr attrs                  = 6;                      // 升级后玩家属性加成
//   int64 exp                            = 7 [deprecated = true];  // 累计藏品值. deprecated, 升级时累计藏品值不会变化，不再返回
// }

message UpgradeTreasureCertLevelReply {
  int64 level                          = 1;  // 升级后的等级
  int64 next_exp_cost                  = 2;  // 下次升级需要达到的累计藏品值
  repeated corepb.Item next_item_costs = 3;  // 下次升级消耗的道具
  repeated Attr next_attrs             = 4;  // 下次升级玩家属性加成
  repeated Attr attrs                  = 5;  // 升级后玩家属性加成
  int64 current_exp_cost               = 6;  // 当前升级需要达到的累计藏品值
}

// message ReceiveTreasureCertRewardRequest {
//   repeated int64 cert_ids = 1;  // 藏品证书ID
// }

// message ReceiveTreasureCertRewardReply {
//   repeated corepb.Item rewards = 1;  // 奖励
// }