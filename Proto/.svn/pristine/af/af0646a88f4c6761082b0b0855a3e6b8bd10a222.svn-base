// cs protocol
syntax = "proto3";

package actpb.act0098pb;
option go_package = "git.woa.com/red/actsvr/pkg/proto/actpb/act0098pb";

import "corepb/common.proto";
import "pkg/proto/actpb/commonpb/common.proto";

service CSAct0098Service {

  rpc GameStart(GameStartRequest) returns (GameStartReply);
  rpc GameEnd(GameEndRequest) returns (GameEndReply);
  rpc UnlockShow(UnlockShowRequest) returns (UnlockShowReply);
  rpc EnterQuestList(EnterQuestListRequest) returns (EnterQuestListReply);
}

enum QuestStatus {
  STATUS_QUEST_UNKNOWN = 0;  // 默认值 无使用
  STATUS_QUEST_LOCK    = 1;  // 关卡未解锁
  STATUS_QUEST_UNLOCK  = 2;  // 关卡已解锁
  STATUS_QUEST_DONE    = 3;  // 已完成(再次挑战)
}

enum LockReason {
  REASON_UNKNOWN            = 0;  // 默认值 无使用
  REASON_ITEM_NOT_ENOUGH    = 1;  // 道具不足
  REASON_PRE_QUEST_NOT_PASS = 2;  // 前置关卡未通过
}

message QuestInfo {
  int64 quest_id               = 1;  // 关卡id
  QuestStatus status           = 2;  // 关卡状态
  LockReason lock_reason       = 3;  // 关卡锁定原因 status为未解锁的关卡才需要显示
  bool is_unlock_show          = 4;  // 关卡解锁动画是否播放
  bool is_new                  = 5;  // 是否为新解锁关卡 只有status为解锁时值才有意义
  corepb.Item unlock_item      = 6;  // 解锁关卡需要的道具信息
  repeated corepb.Item rewards = 7;  // 奖励信息
  int64 step                   = 8;  // 关卡总路程
}

message ActGetDetailRequest {}

message ActGetDetailReply {
  repeated QuestInfo quest_infos     = 1;  // 关卡信息
  repeated actpb.commonpb.Task tasks = 2;  // 任务信息 只展示
}

message GameStartRequest {
  int64 quest_id = 1;  // 关卡 ID
}

message GameStartReply {}

message GameEndRequest {
  int64 quest_id = 1;  // 关卡 ID
  bool is_pass   = 2;  // 是否通过当前关卡 掉线、中途退出、杀进程都为不通过
  int64 step     = 3;  // 通关总路程
}

message GameEndReply {
  QuestInfo quest_info = 1;  // 当前关卡信息
}

message UnlockShowRequest {
  int64 quest_id = 1;  // 关卡 ID
}

message UnlockShowReply {}

message EnterQuestListRequest {}

message EnterQuestListReply {}